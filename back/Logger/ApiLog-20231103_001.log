[2023-11-03 00:37:02.261 +01:00 [INF] User profile is available. Using 'C:\Users\melyo\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
][2023-11-03 00:37:25.958 +01:00 [INF] User profile is available. Using 'C:\Users\melyo\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
][2023-11-03 00:37:26.160 +01:00 [INF] Now listening on: https://localhost:7179
][2023-11-03 00:37:26.162 +01:00 [INF] Now listening on: http://localhost:5237
][2023-11-03 00:37:26.165 +01:00 [INF] Application started. Press Ctrl+C to shut down.
][2023-11-03 00:37:26.171 +01:00 [INF] Hosting environment: Development
][2023-11-03 00:37:26.173 +01:00 [INF] Content root path: C:\Users\melyo\Documents\github\melyonousi\dotnet-angular\dot-net\dotnet-angular-demo-03-use-wwwroot\back
][2023-11-03 00:37:26.847 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7179/swagger/index.html - -
][2023-11-03 00:37:27.095 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7179/swagger/index.html - - - 200 - text/html;charset=utf-8 246.3497ms
][2023-11-03 00:37:27.104 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7179/_framework/aspnetcore-browser-refresh.js - -
][2023-11-03 00:37:27.114 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7179/_framework/aspnetcore-browser-refresh.js - - - 200 12340 application/javascript;+charset=utf-8 9.9572ms
][2023-11-03 00:37:27.295 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7179/_vs/browserLink - -
][2023-11-03 00:37:27.329 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7179/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 33.7560ms
][2023-11-03 00:37:27.519 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7179/swagger/v1/swagger.json - -
][2023-11-03 00:37:27.641 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7179/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 122.0052ms
][2023-11-03 00:38:22.161 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7179/api/users/login - -
][2023-11-03 00:38:22.166 +01:00 [INF] CORS policy execution successful.
][2023-11-03 00:38:22.168 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7179/api/users/login - - - 204 - - 7.6120ms
][2023-11-03 00:38:22.176 +01:00 [INF] Request starting HTTP/2 POST https://localhost:7179/api/users/login application/json 89
][2023-11-03 00:38:22.177 +01:00 [INF] CORS policy execution successful.
][2023-11-03 00:38:22.254 +01:00 [INF] Executing endpoint 'back.Controllers.UsersController.Authenticate (back)'
][2023-11-03 00:38:22.272 +01:00 [INF] Route matched with {action = "Authenticate", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Authenticate(back.Models.Domain.UserCredentials) on controller back.Controllers.UsersController (back).
][2023-11-03 00:38:23.240 +01:00 [INF] Executed DbCommand (27ms) [Parameters=[@___user_Email_0='?', @___user_Password_1='?'], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Avatar", t."Credentials", t."Email", t."Name", t."Password", t."RoleId", t."Token", t0."Id", t0."RoleKey", t0."RoleName"
FROM (
    SELECT u."Id", u."Avatar", u."Credentials", u."Email", u."Name", u."Password", u."RoleId", u."Token"
    FROM "Users" AS u
    WHERE u."Email" = @___user_Email_0 AND u."Password" = @___user_Password_1
    LIMIT 1
) AS t
LEFT JOIN (
    SELECT t1."Id", t1."RoleKey", t1."RoleName"
    FROM (
        SELECT r."Id", r."RoleKey", r."RoleName", ROW_NUMBER() OVER(PARTITION BY r."Id" ORDER BY r."Id") AS row
        FROM "Roles" AS r
    ) AS t1
    WHERE t1.row <= 1
) AS t0 ON t."RoleId" = t0."Id"
][2023-11-03 00:46:29.583 +01:00 [INF] User profile is available. Using 'C:\Users\melyo\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
][2023-11-03 00:46:29.673 +01:00 [INF] Now listening on: https://localhost:7179
][2023-11-03 00:46:29.673 +01:00 [INF] Now listening on: http://localhost:5237
][2023-11-03 00:46:29.675 +01:00 [INF] Application started. Press Ctrl+C to shut down.
][2023-11-03 00:46:29.676 +01:00 [INF] Hosting environment: Development
][2023-11-03 00:46:29.676 +01:00 [INF] Content root path: C:\Users\melyo\Documents\github\melyonousi\dotnet-angular\dot-net\dotnet-angular-demo-03-use-wwwroot\back
][2023-11-03 00:46:55.627 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7179/api/users - -
][2023-11-03 00:46:55.659 +01:00 [INF] CORS policy execution successful.
][2023-11-03 00:46:55.662 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7179/api/users - - - 204 - - 35.6002ms
][2023-11-03 00:46:55.671 +01:00 [INF] Request starting HTTP/2 POST https://localhost:7179/api/users application/json 132
][2023-11-03 00:46:55.673 +01:00 [INF] CORS policy execution successful.
][2023-11-03 00:46:55.691 +01:00 [INF] Executing endpoint 'back.Controllers.UsersController.CreateUser (back)'
][2023-11-03 00:46:55.706 +01:00 [INF] Route matched with {action = "CreateUser", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CreateUser(back.Models.DTO.UserDTO) on controller back.Controllers.UsersController (back).
][2023-11-03 00:46:56.423 +01:00 [INF] Executed DbCommand (16ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT r."Id"
FROM "Roles" AS r
WHERE r."RoleKey" = 'user'
LIMIT 1
][2023-11-03 00:46:56.558 +01:00 [INF] Executed DbCommand (14ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?', @p2='?', @p3='?', @p4='?', @p5='?', @p6='?' (DbType = Guid), @p7='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Users" ("Id", "Avatar", "Credentials", "Email", "Name", "Password", "RoleId", "Token")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7);
][2023-11-03 00:46:56.570 +01:00 [INF] Executing OkObjectResult, writing value of type 'back.Models.DTO.GetUserDTO'.
][2023-11-03 00:46:56.581 +01:00 [INF] Executed action back.Controllers.UsersController.CreateUser (back) in 871.7285ms
][2023-11-03 00:46:56.581 +01:00 [INF] Executed endpoint 'back.Controllers.UsersController.CreateUser (back)'
][2023-11-03 00:46:56.587 +01:00 [INF] Request finished HTTP/2 POST https://localhost:7179/api/users application/json 132 - 200 - application/json;+charset=utf-8 916.4736ms
][2023-11-03 00:47:06.608 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7179/api/users/login - -
][2023-11-03 00:47:06.609 +01:00 [INF] CORS policy execution successful.
][2023-11-03 00:47:06.609 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7179/api/users/login - - - 204 - - 1.3192ms
][2023-11-03 00:47:06.613 +01:00 [INF] Request starting HTTP/2 POST https://localhost:7179/api/users/login application/json 94
][2023-11-03 00:47:06.614 +01:00 [INF] CORS policy execution successful.
][2023-11-03 00:47:06.615 +01:00 [INF] Executing endpoint 'back.Controllers.UsersController.Authenticate (back)'
][2023-11-03 00:47:06.618 +01:00 [INF] Route matched with {action = "Authenticate", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Authenticate(back.Models.Domain.UserCredentials) on controller back.Controllers.UsersController (back).
][2023-11-03 00:47:06.688 +01:00 [INF] Executed DbCommand (3ms) [Parameters=[@___user_Email_0='?', @___user_Password_1='?'], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Avatar", t."Credentials", t."Email", t."Name", t."Password", t."RoleId", t."Token", t0."Id", t0."RoleKey", t0."RoleName"
FROM (
    SELECT u."Id", u."Avatar", u."Credentials", u."Email", u."Name", u."Password", u."RoleId", u."Token"
    FROM "Users" AS u
    WHERE u."Email" = @___user_Email_0 AND u."Password" = @___user_Password_1
    LIMIT 1
) AS t
LEFT JOIN (
    SELECT t1."Id", t1."RoleKey", t1."RoleName"
    FROM (
        SELECT r."Id", r."RoleKey", r."RoleName", ROW_NUMBER() OVER(PARTITION BY r."Id" ORDER BY r."Id") AS row
        FROM "Roles" AS r
    ) AS t1
    WHERE t1.row <= 1
) AS t0 ON t."RoleId" = t0."Id"
][2023-11-03 00:47:06.788 +01:00 [INF] Executed DbCommand (4ms) [Parameters=[@__get_Item_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT r."Id", r."RToken", r."Status", r."UserId"
FROM "RefreshTokens" AS r
WHERE r."Id" = @__get_Item_0
LIMIT 1
][2023-11-03 00:47:06.818 +01:00 [INF] Executed DbCommand (3ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?', @p2='?' (DbType = Boolean), @p3='?' (DbType = Guid), @p5='?' (DbType = Guid), @p4='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "RefreshTokens" ("Id", "RToken", "Status", "UserId")
VALUES (@p0, @p1, @p2, @p3);
UPDATE "Users" SET "Token" = @p4
WHERE "Id" = @p5;
][2023-11-03 00:47:06.826 +01:00 [INF] Executing OkObjectResult, writing value of type 'back.Models.Domain.TokenResponse'.
][2023-11-03 00:47:06.827 +01:00 [INF] Executed action back.Controllers.UsersController.Authenticate (back) in 208.863ms
][2023-11-03 00:47:06.828 +01:00 [INF] Executed endpoint 'back.Controllers.UsersController.Authenticate (back)'
][2023-11-03 00:47:06.828 +01:00 [INF] Request finished HTTP/2 POST https://localhost:7179/api/users/login application/json 94 - 200 - application/json;+charset=utf-8 214.9012ms
][2023-11-03 00:51:14.023 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7179/api/users/login - -
][2023-11-03 00:51:14.023 +01:00 [INF] CORS policy execution successful.
][2023-11-03 00:51:14.023 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7179/api/users/login - - - 204 - - 0.3693ms
][2023-11-03 00:51:14.026 +01:00 [INF] Request starting HTTP/2 POST https://localhost:7179/api/users/login application/json 93
][2023-11-03 00:51:14.026 +01:00 [INF] CORS policy execution successful.
][2023-11-03 00:51:14.028 +01:00 [INF] Executing endpoint 'back.Controllers.UsersController.Authenticate (back)'
][2023-11-03 00:51:14.028 +01:00 [INF] Route matched with {action = "Authenticate", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Authenticate(back.Models.Domain.UserCredentials) on controller back.Controllers.UsersController (back).
][2023-11-03 00:51:14.072 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[@___user_Email_0='?', @___user_Password_1='?'], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Avatar", t."Credentials", t."Email", t."Name", t."Password", t."RoleId", t."Token", t0."Id", t0."RoleKey", t0."RoleName"
FROM (
    SELECT u."Id", u."Avatar", u."Credentials", u."Email", u."Name", u."Password", u."RoleId", u."Token"
    FROM "Users" AS u
    WHERE u."Email" = @___user_Email_0 AND u."Password" = @___user_Password_1
    LIMIT 1
) AS t
LEFT JOIN (
    SELECT t1."Id", t1."RoleKey", t1."RoleName"
    FROM (
        SELECT r."Id", r."RoleKey", r."RoleName", ROW_NUMBER() OVER(PARTITION BY r."Id" ORDER BY r."Id") AS row
        FROM "Roles" AS r
    ) AS t1
    WHERE t1.row <= 1
) AS t0 ON t."RoleId" = t0."Id"
][2023-11-03 00:51:14.073 +01:00 [INF] Executed action back.Controllers.UsersController.Authenticate (back) in 44.5289ms
][2023-11-03 00:51:14.073 +01:00 [INF] Executed endpoint 'back.Controllers.UsersController.Authenticate (back)'
][2023-11-03 00:51:14.090 +01:00 [ERR] An unhandled exception has occurred while executing the request.
System.NullReferenceException: Object reference not set to an instance of an object.
   at back.Repositories.Implementation.UserRespository.Authenticate(UserCredentials _user) in C:\Users\melyo\Documents\github\melyonousi\dotnet-angular\dot-net\dotnet-angular-demo-03-use-wwwroot\back\Repositories\Implementation\UserRespository.cs:line 76
   at back.Controllers.UsersController.Authenticate(UserCredentials _user) in C:\Users\melyo\Documents\github\melyonousi\dotnet-angular\dot-net\dotnet-angular-demo-03-use-wwwroot\back\Controllers\UsersController.cs:line 29
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
][2023-11-03 00:51:14.095 +01:00 [INF] Request finished HTTP/2 POST https://localhost:7179/api/users/login application/json 93 - 500 - text/plain;+charset=utf-8 68.7071ms
][2023-11-03 00:51:30.364 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7179/api/users/login - -
][2023-11-03 00:51:30.364 +01:00 [INF] CORS policy execution successful.
][2023-11-03 00:51:30.364 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7179/api/users/login - - - 204 - - 0.2425ms
][2023-11-03 00:51:30.369 +01:00 [INF] Request starting HTTP/2 POST https://localhost:7179/api/users/login application/json 93
][2023-11-03 00:51:30.369 +01:00 [INF] CORS policy execution successful.
][2023-11-03 00:51:30.369 +01:00 [INF] Executing endpoint 'back.Controllers.UsersController.Authenticate (back)'
][2023-11-03 00:51:30.369 +01:00 [INF] Route matched with {action = "Authenticate", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Authenticate(back.Models.Domain.UserCredentials) on controller back.Controllers.UsersController (back).
][2023-11-03 00:51:30.371 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[@___user_Email_0='?', @___user_Password_1='?'], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Avatar", t."Credentials", t."Email", t."Name", t."Password", t."RoleId", t."Token", t0."Id", t0."RoleKey", t0."RoleName"
FROM (
    SELECT u."Id", u."Avatar", u."Credentials", u."Email", u."Name", u."Password", u."RoleId", u."Token"
    FROM "Users" AS u
    WHERE u."Email" = @___user_Email_0 AND u."Password" = @___user_Password_1
    LIMIT 1
) AS t
LEFT JOIN (
    SELECT t1."Id", t1."RoleKey", t1."RoleName"
    FROM (
        SELECT r."Id", r."RoleKey", r."RoleName", ROW_NUMBER() OVER(PARTITION BY r."Id" ORDER BY r."Id") AS row
        FROM "Roles" AS r
    ) AS t1
    WHERE t1.row <= 1
) AS t0 ON t."RoleId" = t0."Id"
][2023-11-03 00:51:30.372 +01:00 [INF] Executed action back.Controllers.UsersController.Authenticate (back) in 2.7299ms
][2023-11-03 00:51:30.372 +01:00 [INF] Executed endpoint 'back.Controllers.UsersController.Authenticate (back)'
][2023-11-03 00:51:30.373 +01:00 [ERR] An unhandled exception has occurred while executing the request.
System.NullReferenceException: Object reference not set to an instance of an object.
   at back.Repositories.Implementation.UserRespository.Authenticate(UserCredentials _user) in C:\Users\melyo\Documents\github\melyonousi\dotnet-angular\dot-net\dotnet-angular-demo-03-use-wwwroot\back\Repositories\Implementation\UserRespository.cs:line 76
   at back.Controllers.UsersController.Authenticate(UserCredentials _user) in C:\Users\melyo\Documents\github\melyonousi\dotnet-angular\dot-net\dotnet-angular-demo-03-use-wwwroot\back\Controllers\UsersController.cs:line 29
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
][2023-11-03 00:51:30.375 +01:00 [INF] Request finished HTTP/2 POST https://localhost:7179/api/users/login application/json 93 - 500 - text/plain;+charset=utf-8 6.4406ms
][2023-11-03 00:51:42.647 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7179/api/users - -
][2023-11-03 00:51:42.647 +01:00 [INF] CORS policy execution successful.
][2023-11-03 00:51:42.647 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7179/api/users - - - 204 - - 0.2236ms
][2023-11-03 00:51:42.651 +01:00 [INF] Request starting HTTP/2 POST https://localhost:7179/api/users application/json 130
][2023-11-03 00:51:42.652 +01:00 [INF] CORS policy execution successful.
][2023-11-03 00:51:42.652 +01:00 [INF] Executing endpoint 'back.Controllers.UsersController.CreateUser (back)'
][2023-11-03 00:51:42.652 +01:00 [INF] Route matched with {action = "CreateUser", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CreateUser(back.Models.DTO.UserDTO) on controller back.Controllers.UsersController (back).
][2023-11-03 00:51:42.653 +01:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT r."Id"
FROM "Roles" AS r
WHERE r."RoleKey" = 'user'
LIMIT 1
][2023-11-03 00:51:42.656 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?', @p2='?', @p3='?', @p4='?', @p5='?', @p6='?' (DbType = Guid), @p7='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Users" ("Id", "Avatar", "Credentials", "Email", "Name", "Password", "RoleId", "Token")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7);
][2023-11-03 00:51:42.656 +01:00 [INF] Executing OkObjectResult, writing value of type 'back.Models.DTO.GetUserDTO'.
][2023-11-03 00:51:42.656 +01:00 [INF] Executed action back.Controllers.UsersController.CreateUser (back) in 4.3495ms
][2023-11-03 00:51:42.656 +01:00 [INF] Executed endpoint 'back.Controllers.UsersController.CreateUser (back)'
][2023-11-03 00:51:42.656 +01:00 [INF] Request finished HTTP/2 POST https://localhost:7179/api/users application/json 130 - 200 - application/json;+charset=utf-8 4.8276ms
][2023-11-03 00:51:56.354 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7179/api/users/login - -
][2023-11-03 00:51:56.354 +01:00 [INF] CORS policy execution successful.
][2023-11-03 00:51:56.354 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7179/api/users/login - - - 204 - - 0.2285ms
][2023-11-03 00:51:56.358 +01:00 [INF] Request starting HTTP/2 POST https://localhost:7179/api/users/login application/json 94
][2023-11-03 00:51:56.358 +01:00 [INF] CORS policy execution successful.
][2023-11-03 00:51:56.358 +01:00 [INF] Executing endpoint 'back.Controllers.UsersController.Authenticate (back)'
][2023-11-03 00:51:56.358 +01:00 [INF] Route matched with {action = "Authenticate", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Authenticate(back.Models.Domain.UserCredentials) on controller back.Controllers.UsersController (back).
][2023-11-03 00:51:56.360 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[@___user_Email_0='?', @___user_Password_1='?'], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Avatar", t."Credentials", t."Email", t."Name", t."Password", t."RoleId", t."Token", t0."Id", t0."RoleKey", t0."RoleName"
FROM (
    SELECT u."Id", u."Avatar", u."Credentials", u."Email", u."Name", u."Password", u."RoleId", u."Token"
    FROM "Users" AS u
    WHERE u."Email" = @___user_Email_0 AND u."Password" = @___user_Password_1
    LIMIT 1
) AS t
LEFT JOIN (
    SELECT t1."Id", t1."RoleKey", t1."RoleName"
    FROM (
        SELECT r."Id", r."RoleKey", r."RoleName", ROW_NUMBER() OVER(PARTITION BY r."Id" ORDER BY r."Id") AS row
        FROM "Roles" AS r
    ) AS t1
    WHERE t1.row <= 1
) AS t0 ON t."RoleId" = t0."Id"
][2023-11-03 00:51:56.362 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[@__get_Item_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT r."Id", r."RToken", r."Status", r."UserId"
FROM "RefreshTokens" AS r
WHERE r."Id" = @__get_Item_0
LIMIT 1
][2023-11-03 00:51:56.364 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?', @p2='?' (DbType = Boolean), @p3='?' (DbType = Guid), @p5='?' (DbType = Guid), @p4='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "RefreshTokens" ("Id", "RToken", "Status", "UserId")
VALUES (@p0, @p1, @p2, @p3);
UPDATE "Users" SET "Token" = @p4
WHERE "Id" = @p5;
][2023-11-03 00:51:56.365 +01:00 [INF] Executing OkObjectResult, writing value of type 'back.Models.Domain.TokenResponse'.
][2023-11-03 00:51:56.366 +01:00 [INF] Executed action back.Controllers.UsersController.Authenticate (back) in 7.4016ms
][2023-11-03 00:51:56.366 +01:00 [INF] Executed endpoint 'back.Controllers.UsersController.Authenticate (back)'
][2023-11-03 00:51:56.366 +01:00 [INF] Request finished HTTP/2 POST https://localhost:7179/api/users/login application/json 94 - 200 - application/json;+charset=utf-8 7.7756ms
][2023-11-03 00:52:03.033 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7179/api/users/login - -
][2023-11-03 00:52:03.033 +01:00 [INF] CORS policy execution successful.
][2023-11-03 00:52:03.033 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7179/api/users/login - - - 204 - - 0.2070ms
][2023-11-03 00:52:03.036 +01:00 [INF] Request starting HTTP/2 POST https://localhost:7179/api/users/login application/json 94
][2023-11-03 00:52:03.036 +01:00 [INF] CORS policy execution successful.
][2023-11-03 00:52:03.036 +01:00 [INF] Executing endpoint 'back.Controllers.UsersController.Authenticate (back)'
][2023-11-03 00:52:03.036 +01:00 [INF] Route matched with {action = "Authenticate", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Authenticate(back.Models.Domain.UserCredentials) on controller back.Controllers.UsersController (back).
][2023-11-03 00:52:03.171 +01:00 [INF] Executed DbCommand (4ms) [Parameters=[@___user_Email_0='?', @___user_Password_1='?'], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Avatar", t."Credentials", t."Email", t."Name", t."Password", t."RoleId", t."Token", t0."Id", t0."RoleKey", t0."RoleName"
FROM (
    SELECT u."Id", u."Avatar", u."Credentials", u."Email", u."Name", u."Password", u."RoleId", u."Token"
    FROM "Users" AS u
    WHERE u."Email" = @___user_Email_0 AND u."Password" = @___user_Password_1
    LIMIT 1
) AS t
LEFT JOIN (
    SELECT t1."Id", t1."RoleKey", t1."RoleName"
    FROM (
        SELECT r."Id", r."RoleKey", r."RoleName", ROW_NUMBER() OVER(PARTITION BY r."Id" ORDER BY r."Id") AS row
        FROM "Roles" AS r
    ) AS t1
    WHERE t1.row <= 1
) AS t0 ON t."RoleId" = t0."Id"
][2023-11-03 00:52:03.174 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__get_Item_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT r."Id", r."RToken", r."Status", r."UserId"
FROM "RefreshTokens" AS r
WHERE r."Id" = @__get_Item_0
LIMIT 1
][2023-11-03 00:52:03.175 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?', @p2='?' (DbType = Boolean), @p3='?' (DbType = Guid), @p5='?' (DbType = Guid), @p4='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "RefreshTokens" ("Id", "RToken", "Status", "UserId")
VALUES (@p0, @p1, @p2, @p3);
UPDATE "Users" SET "Token" = @p4
WHERE "Id" = @p5;
][2023-11-03 00:52:03.181 +01:00 [INF] Executing OkObjectResult, writing value of type 'back.Models.Domain.TokenResponse'.
][2023-11-03 00:52:03.181 +01:00 [INF] Executed action back.Controllers.UsersController.Authenticate (back) in 145.3229ms
][2023-11-03 00:52:03.181 +01:00 [INF] Executed endpoint 'back.Controllers.UsersController.Authenticate (back)'
][2023-11-03 00:52:03.182 +01:00 [INF] Request finished HTTP/2 POST https://localhost:7179/api/users/login application/json 94 - 200 - application/json;+charset=utf-8 145.6691ms
][2023-11-03 00:52:21.996 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7179/api/users/login - -
][2023-11-03 00:52:21.996 +01:00 [INF] CORS policy execution successful.
][2023-11-03 00:52:21.996 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7179/api/users/login - - - 204 - - 0.3317ms
][2023-11-03 00:52:22.002 +01:00 [INF] Request starting HTTP/2 POST https://localhost:7179/api/users/login application/json 94
][2023-11-03 00:52:22.002 +01:00 [INF] CORS policy execution successful.
][2023-11-03 00:52:22.002 +01:00 [INF] Executing endpoint 'back.Controllers.UsersController.Authenticate (back)'
][2023-11-03 00:52:22.002 +01:00 [INF] Route matched with {action = "Authenticate", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Authenticate(back.Models.Domain.UserCredentials) on controller back.Controllers.UsersController (back).
][2023-11-03 00:52:22.004 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[@___user_Email_0='?', @___user_Password_1='?'], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Avatar", t."Credentials", t."Email", t."Name", t."Password", t."RoleId", t."Token", t0."Id", t0."RoleKey", t0."RoleName"
FROM (
    SELECT u."Id", u."Avatar", u."Credentials", u."Email", u."Name", u."Password", u."RoleId", u."Token"
    FROM "Users" AS u
    WHERE u."Email" = @___user_Email_0 AND u."Password" = @___user_Password_1
    LIMIT 1
) AS t
LEFT JOIN (
    SELECT t1."Id", t1."RoleKey", t1."RoleName"
    FROM (
        SELECT r."Id", r."RoleKey", r."RoleName", ROW_NUMBER() OVER(PARTITION BY r."Id" ORDER BY r."Id") AS row
        FROM "Roles" AS r
    ) AS t1
    WHERE t1.row <= 1
) AS t0 ON t."RoleId" = t0."Id"
][2023-11-03 00:52:22.006 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[@__get_Item_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT r."Id", r."RToken", r."Status", r."UserId"
FROM "RefreshTokens" AS r
WHERE r."Id" = @__get_Item_0
LIMIT 1
][2023-11-03 00:52:22.008 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?', @p2='?' (DbType = Boolean), @p3='?' (DbType = Guid), @p5='?' (DbType = Guid), @p4='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "RefreshTokens" ("Id", "RToken", "Status", "UserId")
VALUES (@p0, @p1, @p2, @p3);
UPDATE "Users" SET "Token" = @p4
WHERE "Id" = @p5;
][2023-11-03 00:52:22.010 +01:00 [INF] Executing OkObjectResult, writing value of type 'back.Models.Domain.TokenResponse'.
][2023-11-03 00:52:22.010 +01:00 [INF] Executed action back.Controllers.UsersController.Authenticate (back) in 7.3426ms
][2023-11-03 00:52:22.010 +01:00 [INF] Executed endpoint 'back.Controllers.UsersController.Authenticate (back)'
][2023-11-03 00:52:22.010 +01:00 [INF] Request finished HTTP/2 POST https://localhost:7179/api/users/login application/json 94 - 200 - application/json;+charset=utf-8 7.7861ms
][2023-11-03 00:54:22.121 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7179/api/products - -
][2023-11-03 00:54:22.125 +01:00 [INF] CORS policy execution successful.
][2023-11-03 00:54:22.130 +01:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
][2023-11-03 00:54:22.133 +01:00 [INF] AuthenticationScheme: Bearer was challenged.
][2023-11-03 00:54:22.133 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7179/api/products - - - 401 0 - 12.4637ms
][2023-11-03 00:54:40.090 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7179/api/users/login - -
][2023-11-03 00:54:40.090 +01:00 [INF] CORS policy execution successful.
][2023-11-03 00:54:40.090 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7179/api/users/login - - - 204 - - 0.3460ms
][2023-11-03 00:54:40.093 +01:00 [INF] Request starting HTTP/2 POST https://localhost:7179/api/users/login application/json 94
][2023-11-03 00:54:40.093 +01:00 [INF] CORS policy execution successful.
][2023-11-03 00:54:40.093 +01:00 [INF] Executing endpoint 'back.Controllers.UsersController.Authenticate (back)'
][2023-11-03 00:54:40.094 +01:00 [INF] Route matched with {action = "Authenticate", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Authenticate(back.Models.Domain.UserCredentials) on controller back.Controllers.UsersController (back).
][2023-11-03 00:54:40.095 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[@___user_Email_0='?', @___user_Password_1='?'], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Avatar", t."Credentials", t."Email", t."Name", t."Password", t."RoleId", t."Token", t0."Id", t0."RoleKey", t0."RoleName"
FROM (
    SELECT u."Id", u."Avatar", u."Credentials", u."Email", u."Name", u."Password", u."RoleId", u."Token"
    FROM "Users" AS u
    WHERE u."Email" = @___user_Email_0 AND u."Password" = @___user_Password_1
    LIMIT 1
) AS t
LEFT JOIN (
    SELECT t1."Id", t1."RoleKey", t1."RoleName"
    FROM (
        SELECT r."Id", r."RoleKey", r."RoleName", ROW_NUMBER() OVER(PARTITION BY r."Id" ORDER BY r."Id") AS row
        FROM "Roles" AS r
    ) AS t1
    WHERE t1.row <= 1
) AS t0 ON t."RoleId" = t0."Id"
][2023-11-03 00:54:40.097 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[@__get_Item_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT r."Id", r."RToken", r."Status", r."UserId"
FROM "RefreshTokens" AS r
WHERE r."Id" = @__get_Item_0
LIMIT 1
][2023-11-03 00:54:40.098 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?', @p2='?' (DbType = Boolean), @p3='?' (DbType = Guid), @p5='?' (DbType = Guid), @p4='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "RefreshTokens" ("Id", "RToken", "Status", "UserId")
VALUES (@p0, @p1, @p2, @p3);
UPDATE "Users" SET "Token" = @p4
WHERE "Id" = @p5;
][2023-11-03 00:54:40.099 +01:00 [INF] Executing OkObjectResult, writing value of type 'back.Models.Domain.TokenResponse'.
][2023-11-03 00:54:40.099 +01:00 [INF] Executed action back.Controllers.UsersController.Authenticate (back) in 5.2198ms
][2023-11-03 00:54:40.099 +01:00 [INF] Executed endpoint 'back.Controllers.UsersController.Authenticate (back)'
][2023-11-03 00:54:40.099 +01:00 [INF] Request finished HTTP/2 POST https://localhost:7179/api/users/login application/json 94 - 200 - application/json;+charset=utf-8 5.6417ms
][2023-11-03 00:54:41.697 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7179/api/products - -
][2023-11-03 00:54:41.698 +01:00 [INF] CORS policy execution successful.
][2023-11-03 00:54:41.700 +01:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
][2023-11-03 00:54:41.701 +01:00 [INF] AuthenticationScheme: Bearer was challenged.
][2023-11-03 00:54:41.701 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7179/api/products - - - 401 0 - 3.5791ms
][2023-11-03 00:54:44.767 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7179/api/products - -
][2023-11-03 00:54:44.767 +01:00 [INF] CORS policy execution successful.
][2023-11-03 00:54:44.769 +01:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
][2023-11-03 00:54:44.769 +01:00 [INF] AuthenticationScheme: Bearer was challenged.
][2023-11-03 00:54:44.769 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7179/api/products - - - 401 0 - 2.4200ms
][2023-11-03 00:55:34.810 +01:00 [INF] Application is shutting down...
][2023-11-03 00:55:38.947 +01:00 [INF] User profile is available. Using 'C:\Users\melyo\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
][2023-11-03 00:55:39.072 +01:00 [INF] Now listening on: https://localhost:7179
][2023-11-03 00:55:39.073 +01:00 [INF] Now listening on: http://localhost:5237
][2023-11-03 00:55:39.075 +01:00 [INF] Application started. Press Ctrl+C to shut down.
][2023-11-03 00:55:39.075 +01:00 [INF] Hosting environment: Development
][2023-11-03 00:55:39.075 +01:00 [INF] Content root path: C:\Users\melyo\Documents\github\melyonousi\dotnet-angular\dot-net\dotnet-angular-demo-03-use-wwwroot\back
][2023-11-03 00:55:42.851 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7179/api/products - -
][2023-11-03 00:55:42.905 +01:00 [INF] CORS policy execution successful.
][2023-11-03 00:55:42.930 +01:00 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (user)
][2023-11-03 00:55:42.933 +01:00 [INF] AuthenticationScheme: Bearer was challenged.
][2023-11-03 00:55:42.936 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7179/api/products - - - 401 0 - 87.7892ms
][2023-11-03 00:55:52.770 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7179/api/users/login - -
][2023-11-03 00:55:52.772 +01:00 [INF] CORS policy execution successful.
][2023-11-03 00:55:52.773 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7179/api/users/login - - - 204 - - 2.2429ms
][2023-11-03 00:55:52.779 +01:00 [INF] Request starting HTTP/2 POST https://localhost:7179/api/users/login application/json 94
][2023-11-03 00:55:52.780 +01:00 [INF] CORS policy execution successful.
][2023-11-03 00:55:52.784 +01:00 [INF] Executing endpoint 'back.Controllers.UsersController.Authenticate (back)'
][2023-11-03 00:55:52.798 +01:00 [INF] Route matched with {action = "Authenticate", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Authenticate(back.Models.Domain.UserCredentials) on controller back.Controllers.UsersController (back).
][2023-11-03 00:55:53.539 +01:00 [INF] Executed DbCommand (21ms) [Parameters=[@___user_Email_0='?', @___user_Password_1='?'], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Avatar", t."Credentials", t."Email", t."Name", t."Password", t."RoleId", t."Token", t0."Id", t0."RoleKey", t0."RoleName"
FROM (
    SELECT u."Id", u."Avatar", u."Credentials", u."Email", u."Name", u."Password", u."RoleId", u."Token"
    FROM "Users" AS u
    WHERE u."Email" = @___user_Email_0 AND u."Password" = @___user_Password_1
    LIMIT 1
) AS t
LEFT JOIN (
    SELECT t1."Id", t1."RoleKey", t1."RoleName"
    FROM (
        SELECT r."Id", r."RoleKey", r."RoleName", ROW_NUMBER() OVER(PARTITION BY r."Id" ORDER BY r."Id") AS row
        FROM "Roles" AS r
    ) AS t1
    WHERE t1.row <= 1
) AS t0 ON t."RoleId" = t0."Id"
][2023-11-03 00:55:53.639 +01:00 [INF] Executed DbCommand (4ms) [Parameters=[@__get_Item_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT r."Id", r."RToken", r."Status", r."UserId"
FROM "RefreshTokens" AS r
WHERE r."Id" = @__get_Item_0
LIMIT 1
][2023-11-03 00:55:53.725 +01:00 [INF] Executed DbCommand (3ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?', @p2='?' (DbType = Boolean), @p3='?' (DbType = Guid), @p5='?' (DbType = Guid), @p4='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "RefreshTokens" ("Id", "RToken", "Status", "UserId")
VALUES (@p0, @p1, @p2, @p3);
UPDATE "Users" SET "Token" = @p4
WHERE "Id" = @p5;
][2023-11-03 00:55:53.743 +01:00 [INF] Executing OkObjectResult, writing value of type 'back.Models.Domain.TokenResponse'.
][2023-11-03 00:55:53.749 +01:00 [INF] Executed action back.Controllers.UsersController.Authenticate (back) in 947.7904ms
][2023-11-03 00:55:53.749 +01:00 [INF] Executed endpoint 'back.Controllers.UsersController.Authenticate (back)'
][2023-11-03 00:55:53.755 +01:00 [INF] Request finished HTTP/2 POST https://localhost:7179/api/users/login application/json 94 - 200 - application/json;+charset=utf-8 975.8071ms
][2023-11-03 00:56:00.369 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7179/api/products - -
][2023-11-03 00:56:00.370 +01:00 [INF] CORS policy execution successful.
][2023-11-03 00:56:00.372 +01:00 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (user)
][2023-11-03 00:56:00.373 +01:00 [INF] AuthenticationScheme: Bearer was challenged.
][2023-11-03 00:56:00.374 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7179/api/products - - - 401 0 - 3.9961ms
][2023-11-03 00:56:55.852 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7179/api/products - -
][2023-11-03 00:56:55.853 +01:00 [INF] CORS policy execution successful.
][2023-11-03 00:56:55.853 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7179/api/products - - - 204 - - 0.7784ms
][2023-11-03 00:56:55.869 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7179/api/products - -
][2023-11-03 00:56:55.869 +01:00 [INF] CORS policy execution successful.
][2023-11-03 00:56:55.913 +01:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/2/2023 11:56:13 PM', Current time (UTC): '11/2/2023 11:56:55 PM'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
][2023-11-03 00:56:55.918 +01:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/2/2023 11:56:13 PM', Current time (UTC): '11/2/2023 11:56:55 PM'.
][2023-11-03 00:56:55.919 +01:00 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (user)
][2023-11-03 00:56:55.920 +01:00 [INF] AuthenticationScheme: Bearer was challenged.
][2023-11-03 00:56:55.920 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7179/api/products - - - 401 0 - 51.3736ms
][2023-11-03 00:57:00.026 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7179/api/products - -
][2023-11-03 00:57:00.026 +01:00 [INF] CORS policy execution successful.
][2023-11-03 00:57:00.027 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7179/api/products - - - 204 - - 0.3301ms
][2023-11-03 00:57:00.033 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7179/api/products - -
][2023-11-03 00:57:00.033 +01:00 [INF] CORS policy execution successful.
][2023-11-03 00:57:00.034 +01:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/2/2023 11:56:13 PM', Current time (UTC): '11/2/2023 11:57:00 PM'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
][2023-11-03 00:57:00.035 +01:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/2/2023 11:56:13 PM', Current time (UTC): '11/2/2023 11:57:00 PM'.
][2023-11-03 00:57:00.035 +01:00 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (user)
][2023-11-03 00:57:00.036 +01:00 [INF] AuthenticationScheme: Bearer was challenged.
][2023-11-03 00:57:00.036 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7179/api/products - - - 401 0 - 3.9900ms
][2023-11-03 00:57:11.321 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7179/api/users/login - -
][2023-11-03 00:57:11.321 +01:00 [INF] CORS policy execution successful.
][2023-11-03 00:57:11.321 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7179/api/users/login - - - 204 - - 0.3438ms
][2023-11-03 00:57:11.324 +01:00 [INF] Request starting HTTP/2 POST https://localhost:7179/api/users/login application/json 94
][2023-11-03 00:57:11.324 +01:00 [INF] CORS policy execution successful.
][2023-11-03 00:57:11.325 +01:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/2/2023 11:56:13 PM', Current time (UTC): '11/2/2023 11:57:11 PM'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
][2023-11-03 00:57:11.325 +01:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/2/2023 11:56:13 PM', Current time (UTC): '11/2/2023 11:57:11 PM'.
][2023-11-03 00:57:11.325 +01:00 [INF] Executing endpoint 'back.Controllers.UsersController.Authenticate (back)'
][2023-11-03 00:57:11.325 +01:00 [INF] Route matched with {action = "Authenticate", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Authenticate(back.Models.Domain.UserCredentials) on controller back.Controllers.UsersController (back).
][2023-11-03 00:57:11.341 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[@___user_Email_0='?', @___user_Password_1='?'], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Avatar", t."Credentials", t."Email", t."Name", t."Password", t."RoleId", t."Token", t0."Id", t0."RoleKey", t0."RoleName"
FROM (
    SELECT u."Id", u."Avatar", u."Credentials", u."Email", u."Name", u."Password", u."RoleId", u."Token"
    FROM "Users" AS u
    WHERE u."Email" = @___user_Email_0 AND u."Password" = @___user_Password_1
    LIMIT 1
) AS t
LEFT JOIN (
    SELECT t1."Id", t1."RoleKey", t1."RoleName"
    FROM (
        SELECT r."Id", r."RoleKey", r."RoleName", ROW_NUMBER() OVER(PARTITION BY r."Id" ORDER BY r."Id") AS row
        FROM "Roles" AS r
    ) AS t1
    WHERE t1.row <= 1
) AS t0 ON t."RoleId" = t0."Id"
][2023-11-03 00:57:11.344 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[@__get_Item_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT r."Id", r."RToken", r."Status", r."UserId"
FROM "RefreshTokens" AS r
WHERE r."Id" = @__get_Item_0
LIMIT 1
][2023-11-03 00:57:11.348 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?', @p2='?' (DbType = Boolean), @p3='?' (DbType = Guid), @p5='?' (DbType = Guid), @p4='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "RefreshTokens" ("Id", "RToken", "Status", "UserId")
VALUES (@p0, @p1, @p2, @p3);
UPDATE "Users" SET "Token" = @p4
WHERE "Id" = @p5;
][2023-11-03 00:57:11.349 +01:00 [INF] Executing OkObjectResult, writing value of type 'back.Models.Domain.TokenResponse'.
][2023-11-03 00:57:11.350 +01:00 [INF] Executed action back.Controllers.UsersController.Authenticate (back) in 24.6294ms
][2023-11-03 00:57:11.350 +01:00 [INF] Executed endpoint 'back.Controllers.UsersController.Authenticate (back)'
][2023-11-03 00:57:11.350 +01:00 [INF] Request finished HTTP/2 POST https://localhost:7179/api/users/login application/json 94 - 200 - application/json;+charset=utf-8 26.2829ms
][2023-11-03 00:57:13.440 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7179/api/products - -
][2023-11-03 00:57:13.440 +01:00 [INF] CORS policy execution successful.
][2023-11-03 00:57:13.440 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7179/api/products - - - 204 - - 0.3393ms
][2023-11-03 00:57:13.452 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7179/api/products - -
][2023-11-03 00:57:13.452 +01:00 [INF] CORS policy execution successful.
][2023-11-03 00:57:13.459 +01:00 [INF] Executing endpoint 'back.Controllers.ProductsController.GetProducts (back)'
][2023-11-03 00:57:13.462 +01:00 [INF] Route matched with {action = "GetProducts", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProducts() on controller back.Controllers.ProductsController (back).
][2023-11-03 00:57:13.508 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Description", p."PublishedDate", p."Thumbnail", p."Title", p."Visibility"
FROM "Products" AS p
][2023-11-03 00:57:13.524 +01:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[back.Repositories.ProductEntity, back, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
][2023-11-03 00:57:13.536 +01:00 [INF] Executed action back.Controllers.ProductsController.GetProducts (back) in 74.2807ms
][2023-11-03 00:57:13.536 +01:00 [INF] Executed endpoint 'back.Controllers.ProductsController.GetProducts (back)'
][2023-11-03 00:57:13.536 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7179/api/products - - - 200 - application/json;+charset=utf-8 84.4831ms
][2023-11-03 00:57:13.561 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7179/Uploads/Products/c7a2cb23-9ac1-4967-890f-7d18e6997727.jpg - -
][2023-11-03 00:57:13.561 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7179/Uploads/Products/cba0382e-959f-4e99-a266-9257a0a63a95.jpg - -
][2023-11-03 00:57:13.566 +01:00 [INF] The file /Uploads/Products/cba0382e-959f-4e99-a266-9257a0a63a95.jpg was not modified
][2023-11-03 00:57:13.566 +01:00 [INF] The file /Uploads/Products/c7a2cb23-9ac1-4967-890f-7d18e6997727.jpg was not modified
][2023-11-03 00:57:13.566 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7179/Uploads/Products/cba0382e-959f-4e99-a266-9257a0a63a95.jpg - - - 304 - image/jpeg 5.6715ms
][2023-11-03 00:57:13.566 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7179/Uploads/Products/c7a2cb23-9ac1-4967-890f-7d18e6997727.jpg - - - 304 - image/jpeg 5.6758ms
][2023-11-03 00:57:18.458 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7179/api/products - -
][2023-11-03 00:57:18.459 +01:00 [INF] CORS policy execution successful.
][2023-11-03 00:57:18.459 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7179/api/products - - - 204 - - 0.6921ms
][2023-11-03 00:57:18.473 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7179/api/products - -
][2023-11-03 00:57:18.473 +01:00 [INF] CORS policy execution successful.
][2023-11-03 00:57:18.473 +01:00 [INF] Executing endpoint 'back.Controllers.ProductsController.GetProducts (back)'
][2023-11-03 00:57:18.473 +01:00 [INF] Route matched with {action = "GetProducts", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProducts() on controller back.Controllers.ProductsController (back).
][2023-11-03 00:57:18.479 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Description", p."PublishedDate", p."Thumbnail", p."Title", p."Visibility"
FROM "Products" AS p
][2023-11-03 00:57:18.481 +01:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[back.Repositories.ProductEntity, back, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
][2023-11-03 00:57:18.481 +01:00 [INF] Executed action back.Controllers.ProductsController.GetProducts (back) in 7.7257ms
][2023-11-03 00:57:18.481 +01:00 [INF] Executed endpoint 'back.Controllers.ProductsController.GetProducts (back)'
][2023-11-03 00:57:18.482 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7179/api/products - - - 200 - application/json;+charset=utf-8 8.9776ms
][2023-11-03 00:57:18.595 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7179/Uploads/Products/cba0382e-959f-4e99-a266-9257a0a63a95.jpg - -
][2023-11-03 00:57:18.600 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7179/Uploads/Products/c7a2cb23-9ac1-4967-890f-7d18e6997727.jpg - -
][2023-11-03 00:57:18.618 +01:00 [INF] Sending file. Request path: '/Uploads/Products/c7a2cb23-9ac1-4967-890f-7d18e6997727.jpg'. Physical path: 'C:\Users\melyo\Documents\github\melyonousi\dotnet-angular\dot-net\dotnet-angular-demo-03-use-wwwroot\back\wwwroot\Uploads\Products\c7a2cb23-9ac1-4967-890f-7d18e6997727.jpg'
][2023-11-03 00:57:18.618 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7179/Uploads/Products/c7a2cb23-9ac1-4967-890f-7d18e6997727.jpg - - - 200 289712 image/jpeg 17.9892ms
][2023-11-03 00:57:18.628 +01:00 [INF] Sending file. Request path: '/Uploads/Products/cba0382e-959f-4e99-a266-9257a0a63a95.jpg'. Physical path: 'C:\Users\melyo\Documents\github\melyonousi\dotnet-angular\dot-net\dotnet-angular-demo-03-use-wwwroot\back\wwwroot\Uploads\Products\cba0382e-959f-4e99-a266-9257a0a63a95.jpg'
][2023-11-03 00:57:18.628 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7179/Uploads/Products/cba0382e-959f-4e99-a266-9257a0a63a95.jpg - - - 200 588937 image/jpeg 32.6440ms
][2023-11-03 00:57:28.479 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7179/api/products - -
][2023-11-03 00:57:28.479 +01:00 [INF] CORS policy execution successful.
][2023-11-03 00:57:28.480 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7179/api/products - - - 204 - - 0.3431ms
][2023-11-03 00:57:28.490 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7179/api/products - -
][2023-11-03 00:57:28.490 +01:00 [INF] CORS policy execution successful.
][2023-11-03 00:57:28.492 +01:00 [INF] Executing endpoint 'back.Controllers.ProductsController.GetProducts (back)'
][2023-11-03 00:57:28.494 +01:00 [INF] Route matched with {action = "GetProducts", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProducts() on controller back.Controllers.ProductsController (back).
][2023-11-03 00:57:28.503 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Description", p."PublishedDate", p."Thumbnail", p."Title", p."Visibility"
FROM "Products" AS p
][2023-11-03 00:57:28.503 +01:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[back.Repositories.ProductEntity, back, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
][2023-11-03 00:57:28.504 +01:00 [INF] Executed action back.Controllers.ProductsController.GetProducts (back) in 7.8722ms
][2023-11-03 00:57:28.504 +01:00 [INF] Executed endpoint 'back.Controllers.ProductsController.GetProducts (back)'
][2023-11-03 00:57:28.504 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7179/api/products - - - 200 - application/json;+charset=utf-8 14.2847ms
][2023-11-03 00:57:28.613 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7179/Uploads/Products/c7a2cb23-9ac1-4967-890f-7d18e6997727.jpg - -
][2023-11-03 00:57:28.613 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7179/Uploads/Products/cba0382e-959f-4e99-a266-9257a0a63a95.jpg - -
][2023-11-03 00:57:28.621 +01:00 [INF] Sending file. Request path: '/Uploads/Products/c7a2cb23-9ac1-4967-890f-7d18e6997727.jpg'. Physical path: 'C:\Users\melyo\Documents\github\melyonousi\dotnet-angular\dot-net\dotnet-angular-demo-03-use-wwwroot\back\wwwroot\Uploads\Products\c7a2cb23-9ac1-4967-890f-7d18e6997727.jpg'
][2023-11-03 00:57:28.621 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7179/Uploads/Products/c7a2cb23-9ac1-4967-890f-7d18e6997727.jpg - - - 200 289712 image/jpeg 7.8123ms
][2023-11-03 00:57:28.623 +01:00 [INF] Sending file. Request path: '/Uploads/Products/cba0382e-959f-4e99-a266-9257a0a63a95.jpg'. Physical path: 'C:\Users\melyo\Documents\github\melyonousi\dotnet-angular\dot-net\dotnet-angular-demo-03-use-wwwroot\back\wwwroot\Uploads\Products\cba0382e-959f-4e99-a266-9257a0a63a95.jpg'
][2023-11-03 00:57:28.623 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7179/Uploads/Products/cba0382e-959f-4e99-a266-9257a0a63a95.jpg - - - 200 588937 image/jpeg 10.3341ms
][2023-11-03 00:57:40.161 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7179/api/products - -
][2023-11-03 00:57:40.164 +01:00 [INF] CORS policy execution successful.
][2023-11-03 00:57:40.164 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7179/api/products - - - 204 - - 3.9553ms
][2023-11-03 00:57:40.170 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7179/api/products - -
][2023-11-03 00:57:40.170 +01:00 [INF] CORS policy execution successful.
][2023-11-03 00:57:40.170 +01:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/2/2023 11:57:31 PM', Current time (UTC): '11/2/2023 11:57:40 PM'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
][2023-11-03 00:57:40.171 +01:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/2/2023 11:57:31 PM', Current time (UTC): '11/2/2023 11:57:40 PM'.
][2023-11-03 00:57:40.171 +01:00 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (user)
][2023-11-03 00:57:40.171 +01:00 [INF] AuthenticationScheme: Bearer was challenged.
][2023-11-03 00:57:40.171 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7179/api/products - - - 401 0 - 1.6337ms
][2023-11-03 01:01:12.822 +01:00 [INF] Request starting HTTP/1.1 POST https://localhost:7179/api/users/login application/json 75
][2023-11-03 01:01:12.822 +01:00 [INF] Executing endpoint 'back.Controllers.UsersController.Authenticate (back)'
][2023-11-03 01:01:12.822 +01:00 [INF] Route matched with {action = "Authenticate", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Authenticate(back.Models.Domain.UserCredentials) on controller back.Controllers.UsersController (back).
][2023-11-03 01:01:12.862 +01:00 [INF] Executed DbCommand (4ms) [Parameters=[@___user_Email_0='?', @___user_Password_1='?'], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Avatar", t."Credentials", t."Email", t."Name", t."Password", t."RoleId", t."Token", t0."Id", t0."RoleKey", t0."RoleName"
FROM (
    SELECT u."Id", u."Avatar", u."Credentials", u."Email", u."Name", u."Password", u."RoleId", u."Token"
    FROM "Users" AS u
    WHERE u."Email" = @___user_Email_0 AND u."Password" = @___user_Password_1
    LIMIT 1
) AS t
LEFT JOIN (
    SELECT t1."Id", t1."RoleKey", t1."RoleName"
    FROM (
        SELECT r."Id", r."RoleKey", r."RoleName", ROW_NUMBER() OVER(PARTITION BY r."Id" ORDER BY r."Id") AS row
        FROM "Roles" AS r
    ) AS t1
    WHERE t1.row <= 1
) AS t0 ON t."RoleId" = t0."Id"
][2023-11-03 01:01:12.866 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__get_Item_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT r."Id", r."RToken", r."Status", r."UserId"
FROM "RefreshTokens" AS r
WHERE r."Id" = @__get_Item_0
LIMIT 1
][2023-11-03 01:01:12.868 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?', @p2='?' (DbType = Boolean), @p3='?' (DbType = Guid), @p5='?' (DbType = Guid), @p4='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "RefreshTokens" ("Id", "RToken", "Status", "UserId")
VALUES (@p0, @p1, @p2, @p3);
UPDATE "Users" SET "Token" = @p4
WHERE "Id" = @p5;
][2023-11-03 01:01:12.870 +01:00 [INF] Executing OkObjectResult, writing value of type 'back.Models.Domain.TokenResponse'.
][2023-11-03 01:01:12.870 +01:00 [INF] Executed action back.Controllers.UsersController.Authenticate (back) in 48.5059ms
][2023-11-03 01:01:12.870 +01:00 [INF] Executed endpoint 'back.Controllers.UsersController.Authenticate (back)'
][2023-11-03 01:01:12.871 +01:00 [INF] Request finished HTTP/1.1 POST https://localhost:7179/api/users/login application/json 75 - 200 - application/json;+charset=utf-8 49.0936ms
][2023-11-03 01:01:38.007 +01:00 [INF] Request starting HTTP/1.1 POST https://localhost:7179/api/users/refreshtoken application/json 376
][2023-11-03 01:01:38.007 +01:00 [INF] Executing endpoint 'back.Controllers.UsersController.RefreshToken (back)'
][2023-11-03 01:01:38.010 +01:00 [INF] Route matched with {action = "RefreshToken", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] RefreshToken(back.Models.Domain.TokenResponse) on controller back.Controllers.UsersController (back).
][2023-11-03 01:01:38.016 +01:00 [ERR] this is an ID: 2ff245be-9b8d-4598-a293-746450f34f85
][2023-11-03 01:01:38.023 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Guid), @___tokenResponse_RefreshToken_1='?'], CommandType='"Text"', CommandTimeout='30']
SELECT r."Id", r."RToken", r."Status", r."UserId"
FROM "RefreshTokens" AS r
WHERE r."UserId" = @__id_0 AND r."RToken" = @___tokenResponse_RefreshToken_1
LIMIT 1
][2023-11-03 01:01:38.026 +01:00 [INF] Executed DbCommand (0ms) [Parameters=[@__get_Item_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT r."Id", r."RToken", r."Status", r."UserId"
FROM "RefreshTokens" AS r
WHERE r."Id" = @__get_Item_0
LIMIT 1
][2023-11-03 01:01:38.032 +01:00 [INF] Executed DbCommand (5ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?', @p2='?' (DbType = Boolean), @p3='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "RefreshTokens" ("Id", "RToken", "Status", "UserId")
VALUES (@p0, @p1, @p2, @p3);
][2023-11-03 01:01:38.033 +01:00 [INF] Executing OkObjectResult, writing value of type 'back.Models.Domain.TokenResponse'.
][2023-11-03 01:01:38.033 +01:00 [INF] Executed action back.Controllers.UsersController.RefreshToken (back) in 22.9268ms
][2023-11-03 01:01:38.033 +01:00 [INF] Executed endpoint 'back.Controllers.UsersController.RefreshToken (back)'
][2023-11-03 01:01:38.033 +01:00 [INF] Request finished HTTP/1.1 POST https://localhost:7179/api/users/refreshtoken application/json 376 - 200 - application/json;+charset=utf-8 26.4518ms
][2023-11-03 01:02:26.220 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7179/api/products - -
][2023-11-03 01:02:26.220 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:02:26.220 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7179/api/products - - - 204 - - 0.3030ms
][2023-11-03 01:02:26.227 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7179/api/products - -
][2023-11-03 01:02:26.227 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:02:26.228 +01:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/2/2023 11:57:31 PM', Current time (UTC): '11/3/2023 12:02:26 AM'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
][2023-11-03 01:02:26.228 +01:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/2/2023 11:57:31 PM', Current time (UTC): '11/3/2023 12:02:26 AM'.
][2023-11-03 01:02:26.228 +01:00 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (user)
][2023-11-03 01:02:26.228 +01:00 [INF] AuthenticationScheme: Bearer was challenged.
][2023-11-03 01:02:26.228 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7179/api/products - - - 401 0 - 1.1312ms
][2023-11-03 01:02:58.124 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7179/api/products - -
][2023-11-03 01:02:58.124 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:02:58.125 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7179/api/products - - - 204 - - 0.3095ms
][2023-11-03 01:02:58.130 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7179/api/products - -
][2023-11-03 01:02:58.130 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:02:58.130 +01:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/2/2023 11:57:31 PM', Current time (UTC): '11/3/2023 12:02:58 AM'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
][2023-11-03 01:02:58.131 +01:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/2/2023 11:57:31 PM', Current time (UTC): '11/3/2023 12:02:58 AM'.
][2023-11-03 01:02:58.131 +01:00 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (user)
][2023-11-03 01:02:58.131 +01:00 [INF] AuthenticationScheme: Bearer was challenged.
][2023-11-03 01:02:58.131 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7179/api/products - - - 401 0 - 1.4095ms
][2023-11-03 01:03:06.079 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7179/api/products - -
][2023-11-03 01:03:06.079 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:03:06.080 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7179/api/products - - - 204 - - 0.5015ms
][2023-11-03 01:03:06.098 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7179/api/products - -
][2023-11-03 01:03:06.108 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:03:06.109 +01:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/2/2023 11:57:31 PM', Current time (UTC): '11/3/2023 12:03:06 AM'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
][2023-11-03 01:03:06.109 +01:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/2/2023 11:57:31 PM', Current time (UTC): '11/3/2023 12:03:06 AM'.
][2023-11-03 01:03:06.109 +01:00 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (user)
][2023-11-03 01:03:06.109 +01:00 [INF] AuthenticationScheme: Bearer was challenged.
][2023-11-03 01:03:06.109 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7179/api/products - - - 401 0 - 11.3151ms
][2023-11-03 01:05:50.768 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7179/api/products - -
][2023-11-03 01:05:50.769 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:05:50.769 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7179/api/products - - - 204 - - 0.3155ms
][2023-11-03 01:05:50.773 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7179/api/products - -
][2023-11-03 01:05:50.774 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:05:50.774 +01:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/2/2023 11:57:31 PM', Current time (UTC): '11/3/2023 12:05:50 AM'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
][2023-11-03 01:05:50.774 +01:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/2/2023 11:57:31 PM', Current time (UTC): '11/3/2023 12:05:50 AM'.
][2023-11-03 01:05:50.774 +01:00 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (user)
][2023-11-03 01:05:50.774 +01:00 [INF] AuthenticationScheme: Bearer was challenged.
][2023-11-03 01:05:50.775 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7179/api/products - - - 401 0 - 1.0950ms
][2023-11-03 01:07:44.951 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7179/api/products - -
][2023-11-03 01:07:44.951 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:07:44.951 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7179/api/products - - - 204 - - 0.3569ms
][2023-11-03 01:07:44.965 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7179/api/products - -
][2023-11-03 01:07:44.965 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:07:44.965 +01:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/2/2023 11:57:31 PM', Current time (UTC): '11/3/2023 12:07:44 AM'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
][2023-11-03 01:07:44.965 +01:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/2/2023 11:57:31 PM', Current time (UTC): '11/3/2023 12:07:44 AM'.
][2023-11-03 01:07:44.965 +01:00 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (user)
][2023-11-03 01:07:44.965 +01:00 [INF] AuthenticationScheme: Bearer was challenged.
][2023-11-03 01:07:44.965 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7179/api/products - - - 401 0 - 0.7687ms
][2023-11-03 01:07:52.535 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7179/api/products - -
][2023-11-03 01:07:52.535 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:07:52.535 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7179/api/products - - - 204 - - 0.3183ms
][2023-11-03 01:07:52.539 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7179/api/products - -
][2023-11-03 01:07:52.539 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:07:52.540 +01:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/2/2023 11:57:31 PM', Current time (UTC): '11/3/2023 12:07:52 AM'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
][2023-11-03 01:07:52.540 +01:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/2/2023 11:57:31 PM', Current time (UTC): '11/3/2023 12:07:52 AM'.
][2023-11-03 01:07:52.540 +01:00 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (user)
][2023-11-03 01:07:52.540 +01:00 [INF] AuthenticationScheme: Bearer was challenged.
][2023-11-03 01:07:52.540 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7179/api/products - - - 401 0 - 1.2107ms
][2023-11-03 01:12:15.306 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7179/api/products - -
][2023-11-03 01:12:15.306 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:12:15.306 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7179/api/products - - - 204 - - 0.2756ms
][2023-11-03 01:12:15.312 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7179/api/products - -
][2023-11-03 01:12:15.312 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:12:15.312 +01:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/2/2023 11:57:31 PM', Current time (UTC): '11/3/2023 12:12:15 AM'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
][2023-11-03 01:12:15.313 +01:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/2/2023 11:57:31 PM', Current time (UTC): '11/3/2023 12:12:15 AM'.
][2023-11-03 01:12:15.313 +01:00 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (user)
][2023-11-03 01:12:15.313 +01:00 [INF] AuthenticationScheme: Bearer was challenged.
][2023-11-03 01:12:15.313 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7179/api/products - - - 401 0 - 0.9427ms
][2023-11-03 01:12:46.185 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7179/api/products - -
][2023-11-03 01:12:46.185 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:12:46.185 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7179/api/products - - - 204 - - 0.3538ms
][2023-11-03 01:12:46.202 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7179/api/products - -
][2023-11-03 01:12:46.203 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:12:46.203 +01:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/2/2023 11:57:31 PM', Current time (UTC): '11/3/2023 12:12:46 AM'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
][2023-11-03 01:12:46.203 +01:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/2/2023 11:57:31 PM', Current time (UTC): '11/3/2023 12:12:46 AM'.
][2023-11-03 01:12:46.204 +01:00 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (user)
][2023-11-03 01:12:46.204 +01:00 [INF] AuthenticationScheme: Bearer was challenged.
][2023-11-03 01:12:46.204 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7179/api/products - - - 401 0 - 1.3365ms
][2023-11-03 01:12:53.879 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7179/api/users/login - -
][2023-11-03 01:12:53.880 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:12:53.880 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7179/api/users/login - - - 204 - - 0.2648ms
][2023-11-03 01:12:53.883 +01:00 [INF] Request starting HTTP/2 POST https://localhost:7179/api/users/login application/json 94
][2023-11-03 01:12:53.883 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:12:53.883 +01:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/2/2023 11:57:31 PM', Current time (UTC): '11/3/2023 12:12:53 AM'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
][2023-11-03 01:12:53.883 +01:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/2/2023 11:57:31 PM', Current time (UTC): '11/3/2023 12:12:53 AM'.
][2023-11-03 01:12:53.883 +01:00 [INF] Executing endpoint 'back.Controllers.UsersController.Authenticate (back)'
][2023-11-03 01:12:53.884 +01:00 [INF] Route matched with {action = "Authenticate", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Authenticate(back.Models.Domain.UserCredentials) on controller back.Controllers.UsersController (back).
][2023-11-03 01:12:53.919 +01:00 [INF] Executed DbCommand (3ms) [Parameters=[@___user_Email_0='?', @___user_Password_1='?'], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Avatar", t."Credentials", t."Email", t."Name", t."Password", t."RoleId", t."Token", t0."Id", t0."RoleKey", t0."RoleName"
FROM (
    SELECT u."Id", u."Avatar", u."Credentials", u."Email", u."Name", u."Password", u."RoleId", u."Token"
    FROM "Users" AS u
    WHERE u."Email" = @___user_Email_0 AND u."Password" = @___user_Password_1
    LIMIT 1
) AS t
LEFT JOIN (
    SELECT t1."Id", t1."RoleKey", t1."RoleName"
    FROM (
        SELECT r."Id", r."RoleKey", r."RoleName", ROW_NUMBER() OVER(PARTITION BY r."Id" ORDER BY r."Id") AS row
        FROM "Roles" AS r
    ) AS t1
    WHERE t1.row <= 1
) AS t0 ON t."RoleId" = t0."Id"
][2023-11-03 01:12:53.922 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__get_Item_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT r."Id", r."RToken", r."Status", r."UserId"
FROM "RefreshTokens" AS r
WHERE r."Id" = @__get_Item_0
LIMIT 1
][2023-11-03 01:12:53.924 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?', @p2='?' (DbType = Boolean), @p3='?' (DbType = Guid), @p5='?' (DbType = Guid), @p4='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "RefreshTokens" ("Id", "RToken", "Status", "UserId")
VALUES (@p0, @p1, @p2, @p3);
UPDATE "Users" SET "Token" = @p4
WHERE "Id" = @p5;
][2023-11-03 01:12:53.925 +01:00 [INF] Executing OkObjectResult, writing value of type 'back.Models.Domain.TokenResponse'.
][2023-11-03 01:12:53.925 +01:00 [INF] Executed action back.Controllers.UsersController.Authenticate (back) in 41.7125ms
][2023-11-03 01:12:53.925 +01:00 [INF] Executed endpoint 'back.Controllers.UsersController.Authenticate (back)'
][2023-11-03 01:12:53.925 +01:00 [INF] Request finished HTTP/2 POST https://localhost:7179/api/users/login application/json 94 - 200 - application/json;+charset=utf-8 42.4545ms
][2023-11-03 01:12:56.223 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7179/api/products - -
][2023-11-03 01:12:56.223 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:12:56.223 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7179/api/products - - - 204 - - 0.2256ms
][2023-11-03 01:12:56.236 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7179/api/products - -
][2023-11-03 01:12:56.236 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:12:56.236 +01:00 [INF] Executing endpoint 'back.Controllers.ProductsController.GetProducts (back)'
][2023-11-03 01:12:56.236 +01:00 [INF] Route matched with {action = "GetProducts", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProducts() on controller back.Controllers.ProductsController (back).
][2023-11-03 01:12:56.239 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Description", p."PublishedDate", p."Thumbnail", p."Title", p."Visibility"
FROM "Products" AS p
][2023-11-03 01:12:56.240 +01:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[back.Repositories.ProductEntity, back, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
][2023-11-03 01:12:56.241 +01:00 [INF] Executed action back.Controllers.ProductsController.GetProducts (back) in 4.4383ms
][2023-11-03 01:12:56.241 +01:00 [INF] Executed endpoint 'back.Controllers.ProductsController.GetProducts (back)'
][2023-11-03 01:12:56.241 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7179/api/products - - - 200 - application/json;+charset=utf-8 5.2220ms
][2023-11-03 01:12:56.266 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7179/Uploads/Products/cba0382e-959f-4e99-a266-9257a0a63a95.jpg - -
][2023-11-03 01:12:56.266 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7179/Uploads/Products/c7a2cb23-9ac1-4967-890f-7d18e6997727.jpg - -
][2023-11-03 01:12:56.267 +01:00 [INF] The file /Uploads/Products/cba0382e-959f-4e99-a266-9257a0a63a95.jpg was not modified
][2023-11-03 01:12:56.267 +01:00 [INF] The file /Uploads/Products/c7a2cb23-9ac1-4967-890f-7d18e6997727.jpg was not modified
][2023-11-03 01:12:56.267 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7179/Uploads/Products/cba0382e-959f-4e99-a266-9257a0a63a95.jpg - - - 304 - image/jpeg 0.7758ms
][2023-11-03 01:12:56.267 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7179/Uploads/Products/c7a2cb23-9ac1-4967-890f-7d18e6997727.jpg - - - 304 - image/jpeg 0.8035ms
][2023-11-03 01:19:29.118 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7179/api/products - -
][2023-11-03 01:19:29.118 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:19:29.118 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7179/api/products - - - 204 - - 0.3246ms
][2023-11-03 01:19:29.123 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7179/api/products - -
][2023-11-03 01:19:29.123 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:19:29.124 +01:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/3/2023 12:13:13 AM', Current time (UTC): '11/3/2023 12:19:29 AM'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
][2023-11-03 01:19:29.124 +01:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/3/2023 12:13:13 AM', Current time (UTC): '11/3/2023 12:19:29 AM'.
][2023-11-03 01:19:29.124 +01:00 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (user)
][2023-11-03 01:19:29.125 +01:00 [INF] AuthenticationScheme: Bearer was challenged.
][2023-11-03 01:19:29.125 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7179/api/products - - - 401 0 - 1.5871ms
][2023-11-03 01:19:29.143 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7179/api/users/refreshtoken - -
][2023-11-03 01:19:29.143 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:19:29.143 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7179/api/users/refreshtoken - - - 204 - - 0.2056ms
][2023-11-03 01:19:29.146 +01:00 [INF] Request starting HTTP/2 POST https://localhost:7179/api/users/refreshtoken application/json 364
][2023-11-03 01:19:29.147 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:19:29.147 +01:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/3/2023 12:13:13 AM', Current time (UTC): '11/3/2023 12:19:29 AM'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
][2023-11-03 01:19:29.147 +01:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/3/2023 12:13:13 AM', Current time (UTC): '11/3/2023 12:19:29 AM'.
][2023-11-03 01:19:29.147 +01:00 [INF] Executing endpoint 'back.Controllers.UsersController.RefreshToken (back)'
][2023-11-03 01:19:29.147 +01:00 [INF] Route matched with {action = "RefreshToken", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] RefreshToken(back.Models.Domain.TokenResponse) on controller back.Controllers.UsersController (back).
][2023-11-03 01:19:29.148 +01:00 [INF] Executed action back.Controllers.UsersController.RefreshToken (back) in 0.9404ms
][2023-11-03 01:19:29.148 +01:00 [INF] Executed endpoint 'back.Controllers.UsersController.RefreshToken (back)'
][2023-11-03 01:19:29.174 +01:00 [ERR] An unhandled exception has occurred while executing the request.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/3/2023 12:13:13 AM', Current time (UTC): '11/3/2023 12:19:29 AM'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at back.Repositories.Implementation.UserRespository.RefresshToken(TokenResponse _tokenResponse) in C:\Users\melyo\Documents\github\melyonousi\dotnet-angular\dot-net\dotnet-angular-demo-03-use-wwwroot\back\Repositories\Implementation\UserRespository.cs:line 105
   at back.Controllers.UsersController.RefreshToken(TokenResponse _tokenResponse) in C:\Users\melyo\Documents\github\melyonousi\dotnet-angular\dot-net\dotnet-angular-demo-03-use-wwwroot\back\Controllers\UsersController.cs:line 41
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
][2023-11-03 01:19:29.190 +01:00 [INF] Request finished HTTP/2 POST https://localhost:7179/api/users/refreshtoken application/json 364 - 500 - text/plain;+charset=utf-8 43.5519ms
][2023-11-03 01:19:32.006 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7179/api/products - -
][2023-11-03 01:19:32.006 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:19:32.006 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7179/api/products - - - 204 - - 0.2175ms
][2023-11-03 01:19:32.013 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7179/api/products - -
][2023-11-03 01:19:32.013 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:19:32.014 +01:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/3/2023 12:13:13 AM', Current time (UTC): '11/3/2023 12:19:32 AM'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
][2023-11-03 01:19:32.014 +01:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/3/2023 12:13:13 AM', Current time (UTC): '11/3/2023 12:19:32 AM'.
][2023-11-03 01:19:32.014 +01:00 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (user)
][2023-11-03 01:19:32.014 +01:00 [INF] AuthenticationScheme: Bearer was challenged.
][2023-11-03 01:19:32.014 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7179/api/products - - - 401 0 - 0.9085ms
][2023-11-03 01:19:32.095 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7179/api/users/refreshtoken - -
][2023-11-03 01:19:32.095 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:19:32.095 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7179/api/users/refreshtoken - - - 204 - - 0.1446ms
][2023-11-03 01:19:32.099 +01:00 [INF] Request starting HTTP/2 POST https://localhost:7179/api/users/refreshtoken application/json 364
][2023-11-03 01:19:32.099 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:19:32.099 +01:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/3/2023 12:13:13 AM', Current time (UTC): '11/3/2023 12:19:32 AM'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
][2023-11-03 01:19:32.100 +01:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/3/2023 12:13:13 AM', Current time (UTC): '11/3/2023 12:19:32 AM'.
][2023-11-03 01:19:32.100 +01:00 [INF] Executing endpoint 'back.Controllers.UsersController.RefreshToken (back)'
][2023-11-03 01:19:32.100 +01:00 [INF] Route matched with {action = "RefreshToken", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] RefreshToken(back.Models.Domain.TokenResponse) on controller back.Controllers.UsersController (back).
][2023-11-03 01:19:32.101 +01:00 [INF] Executed action back.Controllers.UsersController.RefreshToken (back) in 0.969ms
][2023-11-03 01:19:32.101 +01:00 [INF] Executed endpoint 'back.Controllers.UsersController.RefreshToken (back)'
][2023-11-03 01:19:32.105 +01:00 [ERR] An unhandled exception has occurred while executing the request.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/3/2023 12:13:13 AM', Current time (UTC): '11/3/2023 12:19:32 AM'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at back.Repositories.Implementation.UserRespository.RefresshToken(TokenResponse _tokenResponse) in C:\Users\melyo\Documents\github\melyonousi\dotnet-angular\dot-net\dotnet-angular-demo-03-use-wwwroot\back\Repositories\Implementation\UserRespository.cs:line 105
   at back.Controllers.UsersController.RefreshToken(TokenResponse _tokenResponse) in C:\Users\melyo\Documents\github\melyonousi\dotnet-angular\dot-net\dotnet-angular-demo-03-use-wwwroot\back\Controllers\UsersController.cs:line 41
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
][2023-11-03 01:19:32.110 +01:00 [INF] Request finished HTTP/2 POST https://localhost:7179/api/users/refreshtoken application/json 364 - 500 - text/plain;+charset=utf-8 11.5299ms
][2023-11-03 01:19:41.385 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7179/api/users/login - -
][2023-11-03 01:19:41.385 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:19:41.385 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7179/api/users/login - - - 204 - - 0.1930ms
][2023-11-03 01:19:41.388 +01:00 [INF] Request starting HTTP/2 POST https://localhost:7179/api/users/login application/json 94
][2023-11-03 01:19:41.388 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:19:41.388 +01:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/3/2023 12:13:13 AM', Current time (UTC): '11/3/2023 12:19:41 AM'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
][2023-11-03 01:19:41.388 +01:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/3/2023 12:13:13 AM', Current time (UTC): '11/3/2023 12:19:41 AM'.
][2023-11-03 01:19:41.388 +01:00 [INF] Executing endpoint 'back.Controllers.UsersController.Authenticate (back)'
][2023-11-03 01:19:41.388 +01:00 [INF] Route matched with {action = "Authenticate", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Authenticate(back.Models.Domain.UserCredentials) on controller back.Controllers.UsersController (back).
][2023-11-03 01:19:41.423 +01:00 [INF] Executed DbCommand (3ms) [Parameters=[@___user_Email_0='?', @___user_Password_1='?'], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Avatar", t."Credentials", t."Email", t."Name", t."Password", t."RoleId", t."Token", t0."Id", t0."RoleKey", t0."RoleName"
FROM (
    SELECT u."Id", u."Avatar", u."Credentials", u."Email", u."Name", u."Password", u."RoleId", u."Token"
    FROM "Users" AS u
    WHERE u."Email" = @___user_Email_0 AND u."Password" = @___user_Password_1
    LIMIT 1
) AS t
LEFT JOIN (
    SELECT t1."Id", t1."RoleKey", t1."RoleName"
    FROM (
        SELECT r."Id", r."RoleKey", r."RoleName", ROW_NUMBER() OVER(PARTITION BY r."Id" ORDER BY r."Id") AS row
        FROM "Roles" AS r
    ) AS t1
    WHERE t1.row <= 1
) AS t0 ON t."RoleId" = t0."Id"
][2023-11-03 01:19:41.427 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__get_Item_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT r."Id", r."RToken", r."Status", r."UserId"
FROM "RefreshTokens" AS r
WHERE r."Id" = @__get_Item_0
LIMIT 1
][2023-11-03 01:19:41.429 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?', @p2='?' (DbType = Boolean), @p3='?' (DbType = Guid), @p5='?' (DbType = Guid), @p4='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "RefreshTokens" ("Id", "RToken", "Status", "UserId")
VALUES (@p0, @p1, @p2, @p3);
UPDATE "Users" SET "Token" = @p4
WHERE "Id" = @p5;
][2023-11-03 01:19:41.430 +01:00 [INF] Executing OkObjectResult, writing value of type 'back.Models.Domain.TokenResponse'.
][2023-11-03 01:19:41.430 +01:00 [INF] Executed action back.Controllers.UsersController.Authenticate (back) in 42.1939ms
][2023-11-03 01:19:41.430 +01:00 [INF] Executed endpoint 'back.Controllers.UsersController.Authenticate (back)'
][2023-11-03 01:19:41.430 +01:00 [INF] Request finished HTTP/2 POST https://localhost:7179/api/users/login application/json 94 - 200 - application/json;+charset=utf-8 42.8886ms
][2023-11-03 01:19:43.203 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7179/api/products - -
][2023-11-03 01:19:43.203 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:19:43.203 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7179/api/products - - - 204 - - 0.2870ms
][2023-11-03 01:19:43.216 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7179/api/products - -
][2023-11-03 01:19:43.216 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:19:43.216 +01:00 [INF] Executing endpoint 'back.Controllers.ProductsController.GetProducts (back)'
][2023-11-03 01:19:43.216 +01:00 [INF] Route matched with {action = "GetProducts", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProducts() on controller back.Controllers.ProductsController (back).
][2023-11-03 01:19:43.219 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Description", p."PublishedDate", p."Thumbnail", p."Title", p."Visibility"
FROM "Products" AS p
][2023-11-03 01:19:43.219 +01:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[back.Repositories.ProductEntity, back, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
][2023-11-03 01:19:43.220 +01:00 [INF] Executed action back.Controllers.ProductsController.GetProducts (back) in 3.198ms
][2023-11-03 01:19:43.220 +01:00 [INF] Executed endpoint 'back.Controllers.ProductsController.GetProducts (back)'
][2023-11-03 01:19:43.220 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7179/api/products - - - 200 - application/json;+charset=utf-8 3.8591ms
][2023-11-03 01:19:57.788 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7179/api/products - -
][2023-11-03 01:19:57.788 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:19:57.788 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7179/api/products - - - 204 - - 0.2519ms
][2023-11-03 01:19:57.792 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7179/api/products - -
][2023-11-03 01:19:57.792 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:19:57.793 +01:00 [INF] Executing endpoint 'back.Controllers.ProductsController.GetProducts (back)'
][2023-11-03 01:19:57.793 +01:00 [INF] Route matched with {action = "GetProducts", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProducts() on controller back.Controllers.ProductsController (back).
][2023-11-03 01:19:57.797 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Description", p."PublishedDate", p."Thumbnail", p."Title", p."Visibility"
FROM "Products" AS p
][2023-11-03 01:19:57.797 +01:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[back.Repositories.ProductEntity, back, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
][2023-11-03 01:19:57.797 +01:00 [INF] Executed action back.Controllers.ProductsController.GetProducts (back) in 4.0872ms
][2023-11-03 01:19:57.797 +01:00 [INF] Executed endpoint 'back.Controllers.ProductsController.GetProducts (back)'
][2023-11-03 01:19:57.798 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7179/api/products - - - 200 - application/json;+charset=utf-8 5.3866ms
][2023-11-03 01:20:03.305 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7179/api/products - -
][2023-11-03 01:20:03.305 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:20:03.305 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7179/api/products - - - 204 - - 0.2757ms
][2023-11-03 01:20:03.311 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7179/api/products - -
][2023-11-03 01:20:03.311 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:20:03.312 +01:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/3/2023 12:20:01 AM', Current time (UTC): '11/3/2023 12:20:03 AM'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
][2023-11-03 01:20:03.312 +01:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/3/2023 12:20:01 AM', Current time (UTC): '11/3/2023 12:20:03 AM'.
][2023-11-03 01:20:03.312 +01:00 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (user)
][2023-11-03 01:20:03.312 +01:00 [INF] AuthenticationScheme: Bearer was challenged.
][2023-11-03 01:20:03.313 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7179/api/products - - - 401 0 - 1.5658ms
][2023-11-03 01:20:03.410 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7179/api/users/refreshtoken - -
][2023-11-03 01:20:03.410 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:20:03.410 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7179/api/users/refreshtoken - - - 204 - - 0.2115ms
][2023-11-03 01:20:03.413 +01:00 [INF] Request starting HTTP/2 POST https://localhost:7179/api/users/refreshtoken application/json 364
][2023-11-03 01:20:03.413 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:20:03.413 +01:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/3/2023 12:20:01 AM', Current time (UTC): '11/3/2023 12:20:03 AM'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
][2023-11-03 01:20:03.413 +01:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/3/2023 12:20:01 AM', Current time (UTC): '11/3/2023 12:20:03 AM'.
][2023-11-03 01:20:03.413 +01:00 [INF] Executing endpoint 'back.Controllers.UsersController.RefreshToken (back)'
][2023-11-03 01:20:03.414 +01:00 [INF] Route matched with {action = "RefreshToken", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] RefreshToken(back.Models.Domain.TokenResponse) on controller back.Controllers.UsersController (back).
][2023-11-03 01:20:03.415 +01:00 [ERR] this is an ID: 0007ad25-f987-42a3-90bc-8430f299957f
][2023-11-03 01:20:03.417 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Guid), @___tokenResponse_RefreshToken_1='?'], CommandType='"Text"', CommandTimeout='30']
SELECT r."Id", r."RToken", r."Status", r."UserId"
FROM "RefreshTokens" AS r
WHERE r."UserId" = @__id_0 AND r."RToken" = @___tokenResponse_RefreshToken_1
LIMIT 1
][2023-11-03 01:20:03.420 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[@__get_Item_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT r."Id", r."RToken", r."Status", r."UserId"
FROM "RefreshTokens" AS r
WHERE r."Id" = @__get_Item_0
LIMIT 1
][2023-11-03 01:20:03.421 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?', @p2='?' (DbType = Boolean), @p3='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "RefreshTokens" ("Id", "RToken", "Status", "UserId")
VALUES (@p0, @p1, @p2, @p3);
][2023-11-03 01:20:03.422 +01:00 [INF] Executing OkObjectResult, writing value of type 'back.Models.Domain.TokenResponse'.
][2023-11-03 01:20:03.422 +01:00 [INF] Executed action back.Controllers.UsersController.RefreshToken (back) in 8.6876ms
][2023-11-03 01:20:03.422 +01:00 [INF] Executed endpoint 'back.Controllers.UsersController.RefreshToken (back)'
][2023-11-03 01:20:03.423 +01:00 [INF] Request finished HTTP/2 POST https://localhost:7179/api/users/refreshtoken application/json 364 - 200 - application/json;+charset=utf-8 9.6360ms
][2023-11-03 01:20:03.440 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7179/api/products - -
][2023-11-03 01:20:03.441 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:20:03.441 +01:00 [INF] Bearer was not authenticated. Failure message: No SecurityTokenValidator available for token.
][2023-11-03 01:20:03.442 +01:00 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (user)
][2023-11-03 01:20:03.442 +01:00 [INF] AuthenticationScheme: Bearer was challenged.
][2023-11-03 01:20:03.443 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7179/api/products - - - 401 0 - 2.2364ms
][2023-11-03 01:23:16.078 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7179/api/products - -
][2023-11-03 01:23:16.079 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:23:16.079 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7179/api/products - - - 204 - - 0.4536ms
][2023-11-03 01:23:16.116 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7179/api/products - -
][2023-11-03 01:23:16.116 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:23:16.117 +01:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/3/2023 12:20:01 AM', Current time (UTC): '11/3/2023 12:23:16 AM'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
][2023-11-03 01:23:16.117 +01:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/3/2023 12:20:01 AM', Current time (UTC): '11/3/2023 12:23:16 AM'.
][2023-11-03 01:23:16.117 +01:00 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (user)
][2023-11-03 01:23:16.117 +01:00 [INF] AuthenticationScheme: Bearer was challenged.
][2023-11-03 01:23:16.117 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7179/api/products - - - 401 0 - 1.3002ms
][2023-11-03 01:23:16.209 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7179/api/users/refreshtoken - -
][2023-11-03 01:23:16.210 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:23:16.210 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7179/api/users/refreshtoken - - - 204 - - 0.2998ms
][2023-11-03 01:23:16.214 +01:00 [INF] Request starting HTTP/2 POST https://localhost:7179/api/users/refreshtoken application/json 364
][2023-11-03 01:23:16.214 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:23:16.214 +01:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/3/2023 12:20:01 AM', Current time (UTC): '11/3/2023 12:23:16 AM'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
][2023-11-03 01:23:16.214 +01:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/3/2023 12:20:01 AM', Current time (UTC): '11/3/2023 12:23:16 AM'.
][2023-11-03 01:23:16.215 +01:00 [INF] Executing endpoint 'back.Controllers.UsersController.RefreshToken (back)'
][2023-11-03 01:23:16.215 +01:00 [INF] Route matched with {action = "RefreshToken", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] RefreshToken(back.Models.Domain.TokenResponse) on controller back.Controllers.UsersController (back).
][2023-11-03 01:23:16.216 +01:00 [ERR] this is an ID: 0007ad25-f987-42a3-90bc-8430f299957f
][2023-11-03 01:23:16.218 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Guid), @___tokenResponse_RefreshToken_1='?'], CommandType='"Text"', CommandTimeout='30']
SELECT r."Id", r."RToken", r."Status", r."UserId"
FROM "RefreshTokens" AS r
WHERE r."UserId" = @__id_0 AND r."RToken" = @___tokenResponse_RefreshToken_1
LIMIT 1
][2023-11-03 01:23:16.220 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[@__get_Item_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT r."Id", r."RToken", r."Status", r."UserId"
FROM "RefreshTokens" AS r
WHERE r."Id" = @__get_Item_0
LIMIT 1
][2023-11-03 01:23:16.222 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?', @p2='?' (DbType = Boolean), @p3='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "RefreshTokens" ("Id", "RToken", "Status", "UserId")
VALUES (@p0, @p1, @p2, @p3);
][2023-11-03 01:23:16.222 +01:00 [INF] Executing OkObjectResult, writing value of type 'back.Models.Domain.TokenResponse'.
][2023-11-03 01:23:16.223 +01:00 [INF] Executed action back.Controllers.UsersController.RefreshToken (back) in 7.7586ms
][2023-11-03 01:23:16.223 +01:00 [INF] Executed endpoint 'back.Controllers.UsersController.RefreshToken (back)'
][2023-11-03 01:23:16.223 +01:00 [INF] Request finished HTTP/2 POST https://localhost:7179/api/users/refreshtoken application/json 364 - 200 - application/json;+charset=utf-8 8.8971ms
][2023-11-03 01:23:16.236 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7179/api/products - -
][2023-11-03 01:23:16.237 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:23:16.237 +01:00 [INF] Bearer was not authenticated. Failure message: No SecurityTokenValidator available for token.
][2023-11-03 01:23:16.237 +01:00 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (user)
][2023-11-03 01:23:16.237 +01:00 [INF] AuthenticationScheme: Bearer was challenged.
][2023-11-03 01:23:16.237 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7179/api/products - - - 401 0 - 0.4540ms
][2023-11-03 01:25:38.015 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7179/api/products - -
][2023-11-03 01:25:38.016 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:25:38.016 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7179/api/products - - - 204 - - 0.6407ms
][2023-11-03 01:25:38.058 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7179/api/products - -
][2023-11-03 01:25:38.058 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:25:38.060 +01:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/3/2023 12:20:01 AM', Current time (UTC): '11/3/2023 12:25:38 AM'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
][2023-11-03 01:25:38.061 +01:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/3/2023 12:20:01 AM', Current time (UTC): '11/3/2023 12:25:38 AM'.
][2023-11-03 01:25:38.061 +01:00 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (user)
][2023-11-03 01:25:38.061 +01:00 [INF] AuthenticationScheme: Bearer was challenged.
][2023-11-03 01:25:38.062 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7179/api/products - - - 401 0 - 3.5219ms
][2023-11-03 01:25:38.136 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7179/api/users/refreshtoken - -
][2023-11-03 01:25:38.136 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:25:38.136 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7179/api/users/refreshtoken - - - 204 - - 0.1856ms
][2023-11-03 01:25:38.138 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7179/api/users/refreshtoken - -
][2023-11-03 01:25:38.138 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:25:38.138 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7179/api/users/refreshtoken - - - 204 - - 0.2138ms
][2023-11-03 01:25:38.141 +01:00 [INF] Request starting HTTP/2 POST https://localhost:7179/api/users/refreshtoken application/json 364
][2023-11-03 01:25:38.141 +01:00 [INF] Request starting HTTP/2 POST https://localhost:7179/api/users/refreshtoken application/json 364
][2023-11-03 01:25:38.142 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:25:38.142 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:25:38.142 +01:00 [INF] Bearer was not authenticated. Failure message: No SecurityTokenValidator available for token.
][2023-11-03 01:25:38.142 +01:00 [INF] Executing endpoint 'back.Controllers.UsersController.RefreshToken (back)'
][2023-11-03 01:25:38.142 +01:00 [INF] Route matched with {action = "RefreshToken", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] RefreshToken(back.Models.Domain.TokenResponse) on controller back.Controllers.UsersController (back).
][2023-11-03 01:25:38.142 +01:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/3/2023 12:20:01 AM', Current time (UTC): '11/3/2023 12:25:38 AM'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
][2023-11-03 01:25:38.143 +01:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/3/2023 12:20:01 AM', Current time (UTC): '11/3/2023 12:25:38 AM'.
][2023-11-03 01:25:38.143 +01:00 [INF] Executing endpoint 'back.Controllers.UsersController.RefreshToken (back)'
][2023-11-03 01:25:38.143 +01:00 [INF] Route matched with {action = "RefreshToken", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] RefreshToken(back.Models.Domain.TokenResponse) on controller back.Controllers.UsersController (back).
][2023-11-03 01:25:38.144 +01:00 [INF] Executed action back.Controllers.UsersController.RefreshToken (back) in 1.9209ms
][2023-11-03 01:25:38.144 +01:00 [INF] Executed endpoint 'back.Controllers.UsersController.RefreshToken (back)'
][2023-11-03 01:25:38.144 +01:00 [INF] Executed action back.Controllers.UsersController.RefreshToken (back) in 1.5485ms
][2023-11-03 01:25:38.144 +01:00 [INF] Request starting HTTP/2 POST https://localhost:7179/api/users/refreshtoken application/json 364
][2023-11-03 01:25:38.145 +01:00 [INF] Executed endpoint 'back.Controllers.UsersController.RefreshToken (back)'
][2023-11-03 01:25:38.145 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:25:38.145 +01:00 [INF] Bearer was not authenticated. Failure message: No SecurityTokenValidator available for token.
][2023-11-03 01:25:38.145 +01:00 [INF] Executing endpoint 'back.Controllers.UsersController.RefreshToken (back)'
][2023-11-03 01:25:38.145 +01:00 [INF] Route matched with {action = "RefreshToken", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] RefreshToken(back.Models.Domain.TokenResponse) on controller back.Controllers.UsersController (back).
][2023-11-03 01:25:38.146 +01:00 [ERR] An unhandled exception has occurred while executing the request.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/3/2023 12:20:01 AM', Current time (UTC): '11/3/2023 12:25:38 AM'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at back.Repositories.Implementation.UserRespository.RefresshToken(TokenResponse _tokenResponse) in C:\Users\melyo\Documents\github\melyonousi\dotnet-angular\dot-net\dotnet-angular-demo-03-use-wwwroot\back\Repositories\Implementation\UserRespository.cs:line 105
   at back.Controllers.UsersController.RefreshToken(TokenResponse _tokenResponse) in C:\Users\melyo\Documents\github\melyonousi\dotnet-angular\dot-net\dotnet-angular-demo-03-use-wwwroot\back\Controllers\UsersController.cs:line 41
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
][2023-11-03 01:25:38.146 +01:00 [INF] Executed action back.Controllers.UsersController.RefreshToken (back) in 1.2473ms
][2023-11-03 01:25:38.147 +01:00 [INF] Executed endpoint 'back.Controllers.UsersController.RefreshToken (back)'
][2023-11-03 01:25:38.147 +01:00 [ERR] An unhandled exception has occurred while executing the request.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/3/2023 12:20:01 AM', Current time (UTC): '11/3/2023 12:25:38 AM'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at back.Repositories.Implementation.UserRespository.RefresshToken(TokenResponse _tokenResponse) in C:\Users\melyo\Documents\github\melyonousi\dotnet-angular\dot-net\dotnet-angular-demo-03-use-wwwroot\back\Repositories\Implementation\UserRespository.cs:line 105
   at back.Controllers.UsersController.RefreshToken(TokenResponse _tokenResponse) in C:\Users\melyo\Documents\github\melyonousi\dotnet-angular\dot-net\dotnet-angular-demo-03-use-wwwroot\back\Controllers\UsersController.cs:line 41
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
][2023-11-03 01:25:38.149 +01:00 [INF] Request finished HTTP/2 POST https://localhost:7179/api/users/refreshtoken application/json 364 - 500 - text/plain;+charset=utf-8 7.3300ms
][2023-11-03 01:25:38.149 +01:00 [ERR] An unhandled exception has occurred while executing the request.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/3/2023 12:20:01 AM', Current time (UTC): '11/3/2023 12:25:38 AM'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at back.Repositories.Implementation.UserRespository.RefresshToken(TokenResponse _tokenResponse) in C:\Users\melyo\Documents\github\melyonousi\dotnet-angular\dot-net\dotnet-angular-demo-03-use-wwwroot\back\Repositories\Implementation\UserRespository.cs:line 105
   at back.Controllers.UsersController.RefreshToken(TokenResponse _tokenResponse) in C:\Users\melyo\Documents\github\melyonousi\dotnet-angular\dot-net\dotnet-angular-demo-03-use-wwwroot\back\Controllers\UsersController.cs:line 41
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
][2023-11-03 01:25:38.151 +01:00 [INF] Request finished HTTP/2 POST https://localhost:7179/api/users/refreshtoken application/json 364 - 500 - text/plain;+charset=utf-8 6.4027ms
][2023-11-03 01:25:38.152 +01:00 [INF] Request finished HTTP/2 POST https://localhost:7179/api/users/refreshtoken application/json 364 - 500 - text/plain;+charset=utf-8 10.6603ms
][2023-11-03 01:25:47.180 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7179/api/users/login - -
][2023-11-03 01:25:47.180 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:25:47.180 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7179/api/users/login - - - 204 - - 0.1704ms
][2023-11-03 01:25:47.183 +01:00 [INF] Request starting HTTP/2 POST https://localhost:7179/api/users/login application/json 94
][2023-11-03 01:25:47.184 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:25:47.184 +01:00 [INF] Bearer was not authenticated. Failure message: No SecurityTokenValidator available for token.
][2023-11-03 01:25:47.184 +01:00 [INF] Executing endpoint 'back.Controllers.UsersController.Authenticate (back)'
][2023-11-03 01:25:47.184 +01:00 [INF] Route matched with {action = "Authenticate", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Authenticate(back.Models.Domain.UserCredentials) on controller back.Controllers.UsersController (back).
][2023-11-03 01:25:47.328 +01:00 [INF] Executed DbCommand (3ms) [Parameters=[@___user_Email_0='?', @___user_Password_1='?'], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Avatar", t."Credentials", t."Email", t."Name", t."Password", t."RoleId", t."Token", t0."Id", t0."RoleKey", t0."RoleName"
FROM (
    SELECT u."Id", u."Avatar", u."Credentials", u."Email", u."Name", u."Password", u."RoleId", u."Token"
    FROM "Users" AS u
    WHERE u."Email" = @___user_Email_0 AND u."Password" = @___user_Password_1
    LIMIT 1
) AS t
LEFT JOIN (
    SELECT t1."Id", t1."RoleKey", t1."RoleName"
    FROM (
        SELECT r."Id", r."RoleKey", r."RoleName", ROW_NUMBER() OVER(PARTITION BY r."Id" ORDER BY r."Id") AS row
        FROM "Roles" AS r
    ) AS t1
    WHERE t1.row <= 1
) AS t0 ON t."RoleId" = t0."Id"
][2023-11-03 01:25:47.331 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__get_Item_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT r."Id", r."RToken", r."Status", r."UserId"
FROM "RefreshTokens" AS r
WHERE r."Id" = @__get_Item_0
LIMIT 1
][2023-11-03 01:25:47.332 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?', @p2='?' (DbType = Boolean), @p3='?' (DbType = Guid), @p5='?' (DbType = Guid), @p4='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "RefreshTokens" ("Id", "RToken", "Status", "UserId")
VALUES (@p0, @p1, @p2, @p3);
UPDATE "Users" SET "Token" = @p4
WHERE "Id" = @p5;
][2023-11-03 01:25:47.333 +01:00 [INF] Executing OkObjectResult, writing value of type 'back.Models.Domain.TokenResponse'.
][2023-11-03 01:25:47.334 +01:00 [INF] Executed action back.Controllers.UsersController.Authenticate (back) in 149.8746ms
][2023-11-03 01:25:47.334 +01:00 [INF] Executed endpoint 'back.Controllers.UsersController.Authenticate (back)'
][2023-11-03 01:25:47.334 +01:00 [INF] Request finished HTTP/2 POST https://localhost:7179/api/users/login application/json 94 - 200 - application/json;+charset=utf-8 150.2666ms
][2023-11-03 01:25:49.101 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7179/api/products - -
][2023-11-03 01:25:49.101 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:25:49.101 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7179/api/products - - - 204 - - 0.2175ms
][2023-11-03 01:25:49.115 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7179/api/products - -
][2023-11-03 01:25:49.115 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:25:49.115 +01:00 [INF] Executing endpoint 'back.Controllers.ProductsController.GetProducts (back)'
][2023-11-03 01:25:49.116 +01:00 [INF] Route matched with {action = "GetProducts", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProducts() on controller back.Controllers.ProductsController (back).
][2023-11-03 01:25:49.119 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Description", p."PublishedDate", p."Thumbnail", p."Title", p."Visibility"
FROM "Products" AS p
][2023-11-03 01:25:49.119 +01:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[back.Repositories.ProductEntity, back, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
][2023-11-03 01:25:49.119 +01:00 [INF] Executed action back.Controllers.ProductsController.GetProducts (back) in 3.5654ms
][2023-11-03 01:25:49.119 +01:00 [INF] Executed endpoint 'back.Controllers.ProductsController.GetProducts (back)'
][2023-11-03 01:25:49.119 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7179/api/products - - - 200 - application/json;+charset=utf-8 4.2282ms
][2023-11-03 01:25:49.145 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7179/Uploads/Products/cba0382e-959f-4e99-a266-9257a0a63a95.jpg - -
][2023-11-03 01:25:49.145 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7179/Uploads/Products/c7a2cb23-9ac1-4967-890f-7d18e6997727.jpg - -
][2023-11-03 01:25:49.146 +01:00 [INF] The file /Uploads/Products/cba0382e-959f-4e99-a266-9257a0a63a95.jpg was not modified
][2023-11-03 01:25:49.146 +01:00 [INF] The file /Uploads/Products/c7a2cb23-9ac1-4967-890f-7d18e6997727.jpg was not modified
][2023-11-03 01:25:49.146 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7179/Uploads/Products/cba0382e-959f-4e99-a266-9257a0a63a95.jpg - - - 304 - image/jpeg 0.4875ms
][2023-11-03 01:25:49.146 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7179/Uploads/Products/c7a2cb23-9ac1-4967-890f-7d18e6997727.jpg - - - 304 - image/jpeg 0.5115ms
][2023-11-03 01:26:22.249 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7179/api/products - -
][2023-11-03 01:26:22.249 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:26:22.250 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7179/api/products - - - 204 - - 0.8425ms
][2023-11-03 01:26:22.256 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7179/api/products - -
][2023-11-03 01:26:22.256 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:26:22.256 +01:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/3/2023 12:26:07 AM', Current time (UTC): '11/3/2023 12:26:22 AM'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
][2023-11-03 01:26:22.257 +01:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/3/2023 12:26:07 AM', Current time (UTC): '11/3/2023 12:26:22 AM'.
][2023-11-03 01:26:22.257 +01:00 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (user)
][2023-11-03 01:26:22.257 +01:00 [INF] AuthenticationScheme: Bearer was challenged.
][2023-11-03 01:26:22.257 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7179/api/products - - - 401 0 - 1.1003ms
][2023-11-03 01:26:22.361 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7179/api/users/refreshtoken - -
][2023-11-03 01:26:22.361 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:26:22.361 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7179/api/users/refreshtoken - - - 204 - - 0.1858ms
][2023-11-03 01:26:22.364 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7179/api/users/refreshtoken - -
][2023-11-03 01:26:22.365 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:26:22.366 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7179/api/users/refreshtoken - - - 204 - - 1.7763ms
][2023-11-03 01:26:22.367 +01:00 [INF] Request starting HTTP/2 POST https://localhost:7179/api/users/refreshtoken application/json 364
][2023-11-03 01:26:22.367 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:26:22.367 +01:00 [INF] Request starting HTTP/2 POST https://localhost:7179/api/users/refreshtoken application/json 364
][2023-11-03 01:26:22.367 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:26:22.367 +01:00 [INF] Bearer was not authenticated. Failure message: No SecurityTokenValidator available for token.
][2023-11-03 01:26:22.367 +01:00 [INF] Executing endpoint 'back.Controllers.UsersController.RefreshToken (back)'
][2023-11-03 01:26:22.367 +01:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/3/2023 12:26:07 AM', Current time (UTC): '11/3/2023 12:26:22 AM'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
][2023-11-03 01:26:22.367 +01:00 [INF] Route matched with {action = "RefreshToken", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] RefreshToken(back.Models.Domain.TokenResponse) on controller back.Controllers.UsersController (back).
][2023-11-03 01:26:22.367 +01:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/3/2023 12:26:07 AM', Current time (UTC): '11/3/2023 12:26:22 AM'.
][2023-11-03 01:26:22.368 +01:00 [INF] Executing endpoint 'back.Controllers.UsersController.RefreshToken (back)'
][2023-11-03 01:26:22.368 +01:00 [INF] Route matched with {action = "RefreshToken", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] RefreshToken(back.Models.Domain.TokenResponse) on controller back.Controllers.UsersController (back).
][2023-11-03 01:26:22.369 +01:00 [ERR] this is an ID: 0007ad25-f987-42a3-90bc-8430f299957f
][2023-11-03 01:26:22.369 +01:00 [ERR] this is an ID: 0007ad25-f987-42a3-90bc-8430f299957f
][2023-11-03 01:26:22.370 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Guid), @___tokenResponse_RefreshToken_1='?'], CommandType='"Text"', CommandTimeout='30']
SELECT r."Id", r."RToken", r."Status", r."UserId"
FROM "RefreshTokens" AS r
WHERE r."UserId" = @__id_0 AND r."RToken" = @___tokenResponse_RefreshToken_1
LIMIT 1
][2023-11-03 01:26:22.370 +01:00 [INF] Request starting HTTP/2 POST https://localhost:7179/api/users/refreshtoken application/json 364
][2023-11-03 01:26:22.370 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:26:22.371 +01:00 [INF] Bearer was not authenticated. Failure message: No SecurityTokenValidator available for token.
][2023-11-03 01:26:22.371 +01:00 [INF] Executing endpoint 'back.Controllers.UsersController.RefreshToken (back)'
][2023-11-03 01:26:22.371 +01:00 [INF] Route matched with {action = "RefreshToken", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] RefreshToken(back.Models.Domain.TokenResponse) on controller back.Controllers.UsersController (back).
][2023-11-03 01:26:22.373 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[@__get_Item_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT r."Id", r."RToken", r."Status", r."UserId"
FROM "RefreshTokens" AS r
WHERE r."Id" = @__get_Item_0
LIMIT 1
][2023-11-03 01:26:22.373 +01:00 [ERR] this is an ID: 0007ad25-f987-42a3-90bc-8430f299957f
][2023-11-03 01:26:22.374 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?', @p2='?' (DbType = Boolean), @p3='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "RefreshTokens" ("Id", "RToken", "Status", "UserId")
VALUES (@p0, @p1, @p2, @p3);
][2023-11-03 01:26:22.375 +01:00 [INF] Executing OkObjectResult, writing value of type 'back.Models.Domain.TokenResponse'.
][2023-11-03 01:26:22.375 +01:00 [INF] Executed action back.Controllers.UsersController.RefreshToken (back) in 7.4268ms
][2023-11-03 01:26:22.375 +01:00 [INF] Executed endpoint 'back.Controllers.UsersController.RefreshToken (back)'
][2023-11-03 01:26:22.375 +01:00 [INF] Request finished HTTP/2 POST https://localhost:7179/api/users/refreshtoken application/json 364 - 200 - application/json;+charset=utf-8 8.3774ms
][2023-11-03 01:26:22.436 +01:00 [INF] Executed DbCommand (4ms) [Parameters=[@__id_0='?' (DbType = Guid), @___tokenResponse_RefreshToken_1='?'], CommandType='"Text"', CommandTimeout='30']
SELECT r."Id", r."RToken", r."Status", r."UserId"
FROM "RefreshTokens" AS r
WHERE r."UserId" = @__id_0 AND r."RToken" = @___tokenResponse_RefreshToken_1
LIMIT 1
][2023-11-03 01:26:22.438 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[@__get_Item_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT r."Id", r."RToken", r."Status", r."UserId"
FROM "RefreshTokens" AS r
WHERE r."Id" = @__get_Item_0
LIMIT 1
][2023-11-03 01:26:22.440 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?', @p2='?' (DbType = Boolean), @p3='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "RefreshTokens" ("Id", "RToken", "Status", "UserId")
VALUES (@p0, @p1, @p2, @p3);
][2023-11-03 01:26:22.441 +01:00 [INF] Executing OkObjectResult, writing value of type 'back.Models.Domain.TokenResponse'.
][2023-11-03 01:26:22.441 +01:00 [INF] Executed action back.Controllers.UsersController.RefreshToken (back) in 73.9252ms
][2023-11-03 01:26:22.441 +01:00 [INF] Executed endpoint 'back.Controllers.UsersController.RefreshToken (back)'
][2023-11-03 01:26:22.442 +01:00 [INF] Request finished HTTP/2 POST https://localhost:7179/api/users/refreshtoken application/json 364 - 200 - application/json;+charset=utf-8 74.4176ms
][2023-11-03 01:26:22.442 +01:00 [INF] Executed DbCommand (4ms) [Parameters=[@__id_0='?' (DbType = Guid), @___tokenResponse_RefreshToken_1='?'], CommandType='"Text"', CommandTimeout='30']
SELECT r."Id", r."RToken", r."Status", r."UserId"
FROM "RefreshTokens" AS r
WHERE r."UserId" = @__id_0 AND r."RToken" = @___tokenResponse_RefreshToken_1
LIMIT 1
][2023-11-03 01:26:22.444 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[@__get_Item_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT r."Id", r."RToken", r."Status", r."UserId"
FROM "RefreshTokens" AS r
WHERE r."Id" = @__get_Item_0
LIMIT 1
][2023-11-03 01:26:22.446 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?', @p2='?' (DbType = Boolean), @p3='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "RefreshTokens" ("Id", "RToken", "Status", "UserId")
VALUES (@p0, @p1, @p2, @p3);
][2023-11-03 01:26:22.446 +01:00 [INF] Executing OkObjectResult, writing value of type 'back.Models.Domain.TokenResponse'.
][2023-11-03 01:26:22.446 +01:00 [INF] Executed action back.Controllers.UsersController.RefreshToken (back) in 75.5516ms
][2023-11-03 01:26:22.446 +01:00 [INF] Executed endpoint 'back.Controllers.UsersController.RefreshToken (back)'
][2023-11-03 01:26:22.446 +01:00 [INF] Request finished HTTP/2 POST https://localhost:7179/api/users/refreshtoken application/json 364 - 200 - application/json;+charset=utf-8 76.1497ms
][2023-11-03 01:26:22.452 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7179/api/products - -
][2023-11-03 01:26:22.452 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:26:22.452 +01:00 [INF] Bearer was not authenticated. Failure message: No SecurityTokenValidator available for token.
][2023-11-03 01:26:22.452 +01:00 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (user)
][2023-11-03 01:26:22.453 +01:00 [INF] AuthenticationScheme: Bearer was challenged.
][2023-11-03 01:26:22.453 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7179/api/products - - - 401 0 - 0.4140ms
][2023-11-03 01:28:07.798 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7179/api/products - -
][2023-11-03 01:28:07.798 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:28:07.798 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7179/api/products - - - 204 - - 0.1932ms
][2023-11-03 01:28:07.802 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7179/api/products - -
][2023-11-03 01:28:07.802 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:28:07.802 +01:00 [INF] Bearer was not authenticated. Failure message: No SecurityTokenValidator available for token.
][2023-11-03 01:28:07.803 +01:00 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (user)
][2023-11-03 01:28:07.803 +01:00 [INF] AuthenticationScheme: Bearer was challenged.
][2023-11-03 01:28:07.803 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7179/api/products - - - 401 0 - 0.6840ms
][2023-11-03 01:28:07.819 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7179/api/users/refreshtoken - -
][2023-11-03 01:28:07.819 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:28:07.819 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7179/api/users/refreshtoken - - - 204 - - 0.2232ms
][2023-11-03 01:28:07.824 +01:00 [INF] Request starting HTTP/2 POST https://localhost:7179/api/users/refreshtoken application/json 63
][2023-11-03 01:28:07.825 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:28:07.825 +01:00 [INF] Bearer was not authenticated. Failure message: No SecurityTokenValidator available for token.
][2023-11-03 01:28:07.825 +01:00 [INF] Executing endpoint 'back.Controllers.UsersController.RefreshToken (back)'
][2023-11-03 01:28:07.825 +01:00 [INF] Request starting HTTP/2 POST https://localhost:7179/api/users/refreshtoken application/json 63
][2023-11-03 01:28:07.825 +01:00 [INF] Route matched with {action = "RefreshToken", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] RefreshToken(back.Models.Domain.TokenResponse) on controller back.Controllers.UsersController (back).
][2023-11-03 01:28:07.825 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:28:07.825 +01:00 [INF] Bearer was not authenticated. Failure message: No SecurityTokenValidator available for token.
][2023-11-03 01:28:07.825 +01:00 [INF] Executing endpoint 'back.Controllers.UsersController.RefreshToken (back)'
][2023-11-03 01:28:07.825 +01:00 [INF] Route matched with {action = "RefreshToken", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] RefreshToken(back.Models.Domain.TokenResponse) on controller back.Controllers.UsersController (back).
][2023-11-03 01:28:07.826 +01:00 [INF] Executed action back.Controllers.UsersController.RefreshToken (back) in 0.8716ms
][2023-11-03 01:28:07.826 +01:00 [INF] Executed action back.Controllers.UsersController.RefreshToken (back) in 0.7901ms
][2023-11-03 01:28:07.826 +01:00 [INF] Executed endpoint 'back.Controllers.UsersController.RefreshToken (back)'
][2023-11-03 01:28:07.826 +01:00 [INF] Executed endpoint 'back.Controllers.UsersController.RefreshToken (back)'
][2023-11-03 01:28:07.828 +01:00 [ERR] An unhandled exception has occurred while executing the request.
Microsoft.IdentityModel.Tokens.SecurityTokenMalformedException: IDX12741: JWT must have three segments (JWS) or five segments (JWE).
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at back.Repositories.Implementation.UserRespository.RefresshToken(TokenResponse _tokenResponse) in C:\Users\melyo\Documents\github\melyonousi\dotnet-angular\dot-net\dotnet-angular-demo-03-use-wwwroot\back\Repositories\Implementation\UserRespository.cs:line 105
   at back.Controllers.UsersController.RefreshToken(TokenResponse _tokenResponse) in C:\Users\melyo\Documents\github\melyonousi\dotnet-angular\dot-net\dotnet-angular-demo-03-use-wwwroot\back\Controllers\UsersController.cs:line 41
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
][2023-11-03 01:28:07.828 +01:00 [ERR] An unhandled exception has occurred while executing the request.
Microsoft.IdentityModel.Tokens.SecurityTokenMalformedException: IDX12741: JWT must have three segments (JWS) or five segments (JWE).
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at back.Repositories.Implementation.UserRespository.RefresshToken(TokenResponse _tokenResponse) in C:\Users\melyo\Documents\github\melyonousi\dotnet-angular\dot-net\dotnet-angular-demo-03-use-wwwroot\back\Repositories\Implementation\UserRespository.cs:line 105
   at back.Controllers.UsersController.RefreshToken(TokenResponse _tokenResponse) in C:\Users\melyo\Documents\github\melyonousi\dotnet-angular\dot-net\dotnet-angular-demo-03-use-wwwroot\back\Controllers\UsersController.cs:line 41
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
][2023-11-03 01:28:07.829 +01:00 [INF] Request finished HTTP/2 POST https://localhost:7179/api/users/refreshtoken application/json 63 - 500 - text/plain;+charset=utf-8 4.4452ms
][2023-11-03 01:28:07.830 +01:00 [INF] Request finished HTTP/2 POST https://localhost:7179/api/users/refreshtoken application/json 63 - 500 - text/plain;+charset=utf-8 5.1075ms
][2023-11-03 01:28:09.001 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7179/api/products - -
][2023-11-03 01:28:09.001 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:28:09.001 +01:00 [INF] Bearer was not authenticated. Failure message: No SecurityTokenValidator available for token.
][2023-11-03 01:28:09.002 +01:00 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (user)
][2023-11-03 01:28:09.002 +01:00 [INF] AuthenticationScheme: Bearer was challenged.
][2023-11-03 01:28:09.002 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7179/api/products - - - 401 0 - 0.4557ms
][2023-11-03 01:28:09.023 +01:00 [INF] Request starting HTTP/2 POST https://localhost:7179/api/users/refreshtoken application/json 63
][2023-11-03 01:28:09.023 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:28:09.023 +01:00 [INF] Bearer was not authenticated. Failure message: No SecurityTokenValidator available for token.
][2023-11-03 01:28:09.024 +01:00 [INF] Executing endpoint 'back.Controllers.UsersController.RefreshToken (back)'
][2023-11-03 01:28:09.024 +01:00 [INF] Route matched with {action = "RefreshToken", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] RefreshToken(back.Models.Domain.TokenResponse) on controller back.Controllers.UsersController (back).
][2023-11-03 01:28:09.024 +01:00 [INF] Executed action back.Controllers.UsersController.RefreshToken (back) in 0.6141ms
][2023-11-03 01:28:09.024 +01:00 [INF] Executed endpoint 'back.Controllers.UsersController.RefreshToken (back)'
][2023-11-03 01:28:09.026 +01:00 [INF] Request starting HTTP/2 POST https://localhost:7179/api/users/refreshtoken application/json 63
][2023-11-03 01:28:09.026 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:28:09.026 +01:00 [INF] Bearer was not authenticated. Failure message: No SecurityTokenValidator available for token.
][2023-11-03 01:28:09.027 +01:00 [INF] Executing endpoint 'back.Controllers.UsersController.RefreshToken (back)'
][2023-11-03 01:28:09.027 +01:00 [INF] Route matched with {action = "RefreshToken", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] RefreshToken(back.Models.Domain.TokenResponse) on controller back.Controllers.UsersController (back).
][2023-11-03 01:28:09.027 +01:00 [ERR] An unhandled exception has occurred while executing the request.
Microsoft.IdentityModel.Tokens.SecurityTokenMalformedException: IDX12741: JWT must have three segments (JWS) or five segments (JWE).
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at back.Repositories.Implementation.UserRespository.RefresshToken(TokenResponse _tokenResponse) in C:\Users\melyo\Documents\github\melyonousi\dotnet-angular\dot-net\dotnet-angular-demo-03-use-wwwroot\back\Repositories\Implementation\UserRespository.cs:line 105
   at back.Controllers.UsersController.RefreshToken(TokenResponse _tokenResponse) in C:\Users\melyo\Documents\github\melyonousi\dotnet-angular\dot-net\dotnet-angular-demo-03-use-wwwroot\back\Controllers\UsersController.cs:line 41
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
][2023-11-03 01:28:09.028 +01:00 [INF] Executed action back.Controllers.UsersController.RefreshToken (back) in 0.8424ms
][2023-11-03 01:28:09.028 +01:00 [INF] Executed endpoint 'back.Controllers.UsersController.RefreshToken (back)'
][2023-11-03 01:28:09.028 +01:00 [INF] Request finished HTTP/2 POST https://localhost:7179/api/users/refreshtoken application/json 63 - 500 - text/plain;+charset=utf-8 4.7926ms
][2023-11-03 01:28:09.029 +01:00 [ERR] An unhandled exception has occurred while executing the request.
Microsoft.IdentityModel.Tokens.SecurityTokenMalformedException: IDX12741: JWT must have three segments (JWS) or five segments (JWE).
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at back.Repositories.Implementation.UserRespository.RefresshToken(TokenResponse _tokenResponse) in C:\Users\melyo\Documents\github\melyonousi\dotnet-angular\dot-net\dotnet-angular-demo-03-use-wwwroot\back\Repositories\Implementation\UserRespository.cs:line 105
   at back.Controllers.UsersController.RefreshToken(TokenResponse _tokenResponse) in C:\Users\melyo\Documents\github\melyonousi\dotnet-angular\dot-net\dotnet-angular-demo-03-use-wwwroot\back\Controllers\UsersController.cs:line 41
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
][2023-11-03 01:28:09.031 +01:00 [INF] Request finished HTTP/2 POST https://localhost:7179/api/users/refreshtoken application/json 63 - 500 - text/plain;+charset=utf-8 4.5285ms
][2023-11-03 01:28:30.979 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7179/api/products - -
][2023-11-03 01:28:30.979 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:28:30.979 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7179/api/products - - - 204 - - 0.2331ms
][2023-11-03 01:28:30.984 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7179/api/products - -
][2023-11-03 01:28:30.985 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:28:30.985 +01:00 [INF] Bearer was not authenticated. Failure message: No SecurityTokenValidator available for token.
][2023-11-03 01:28:30.985 +01:00 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (user)
][2023-11-03 01:28:30.985 +01:00 [INF] AuthenticationScheme: Bearer was challenged.
][2023-11-03 01:28:30.985 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7179/api/products - - - 401 0 - 0.8523ms
][2023-11-03 01:28:30.998 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7179/api/users/refreshtoken - -
][2023-11-03 01:28:30.998 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:28:30.998 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7179/api/users/refreshtoken - - - 204 - - 0.2202ms
][2023-11-03 01:28:30.999 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7179/api/users/refreshtoken - -
][2023-11-03 01:28:31.000 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:28:31.000 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7179/api/users/refreshtoken - - - 204 - - 0.2002ms
][2023-11-03 01:28:31.002 +01:00 [INF] Request starting HTTP/2 POST https://localhost:7179/api/users/refreshtoken application/json 63
][2023-11-03 01:28:31.002 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:28:31.002 +01:00 [INF] Bearer was not authenticated. Failure message: No SecurityTokenValidator available for token.
][2023-11-03 01:28:31.002 +01:00 [INF] Executing endpoint 'back.Controllers.UsersController.RefreshToken (back)'
][2023-11-03 01:28:31.002 +01:00 [INF] Route matched with {action = "RefreshToken", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] RefreshToken(back.Models.Domain.TokenResponse) on controller back.Controllers.UsersController (back).
][2023-11-03 01:28:31.003 +01:00 [INF] Executed action back.Controllers.UsersController.RefreshToken (back) in 0.5932ms
][2023-11-03 01:28:31.003 +01:00 [INF] Executed endpoint 'back.Controllers.UsersController.RefreshToken (back)'
][2023-11-03 01:28:31.004 +01:00 [INF] Request starting HTTP/2 POST https://localhost:7179/api/users/refreshtoken application/json 63
][2023-11-03 01:28:31.004 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:28:31.004 +01:00 [INF] Bearer was not authenticated. Failure message: No SecurityTokenValidator available for token.
][2023-11-03 01:28:31.004 +01:00 [INF] Executing endpoint 'back.Controllers.UsersController.RefreshToken (back)'
][2023-11-03 01:28:31.004 +01:00 [INF] Route matched with {action = "RefreshToken", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] RefreshToken(back.Models.Domain.TokenResponse) on controller back.Controllers.UsersController (back).
][2023-11-03 01:28:31.005 +01:00 [INF] Executed action back.Controllers.UsersController.RefreshToken (back) in 0.6185ms
][2023-11-03 01:28:31.005 +01:00 [ERR] An unhandled exception has occurred while executing the request.
Microsoft.IdentityModel.Tokens.SecurityTokenMalformedException: IDX12741: JWT must have three segments (JWS) or five segments (JWE).
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at back.Repositories.Implementation.UserRespository.RefresshToken(TokenResponse _tokenResponse) in C:\Users\melyo\Documents\github\melyonousi\dotnet-angular\dot-net\dotnet-angular-demo-03-use-wwwroot\back\Repositories\Implementation\UserRespository.cs:line 105
   at back.Controllers.UsersController.RefreshToken(TokenResponse _tokenResponse) in C:\Users\melyo\Documents\github\melyonousi\dotnet-angular\dot-net\dotnet-angular-demo-03-use-wwwroot\back\Controllers\UsersController.cs:line 41
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
][2023-11-03 01:28:31.005 +01:00 [INF] Executed endpoint 'back.Controllers.UsersController.RefreshToken (back)'
][2023-11-03 01:28:31.006 +01:00 [INF] Request finished HTTP/2 POST https://localhost:7179/api/users/refreshtoken application/json 63 - 500 - text/plain;+charset=utf-8 4.4575ms
][2023-11-03 01:28:31.008 +01:00 [ERR] An unhandled exception has occurred while executing the request.
Microsoft.IdentityModel.Tokens.SecurityTokenMalformedException: IDX12741: JWT must have three segments (JWS) or five segments (JWE).
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at back.Repositories.Implementation.UserRespository.RefresshToken(TokenResponse _tokenResponse) in C:\Users\melyo\Documents\github\melyonousi\dotnet-angular\dot-net\dotnet-angular-demo-03-use-wwwroot\back\Repositories\Implementation\UserRespository.cs:line 105
   at back.Controllers.UsersController.RefreshToken(TokenResponse _tokenResponse) in C:\Users\melyo\Documents\github\melyonousi\dotnet-angular\dot-net\dotnet-angular-demo-03-use-wwwroot\back\Controllers\UsersController.cs:line 41
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
][2023-11-03 01:28:31.010 +01:00 [INF] Request finished HTTP/2 POST https://localhost:7179/api/users/refreshtoken application/json 63 - 500 - text/plain;+charset=utf-8 6.2398ms
][2023-11-03 01:28:40.129 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7179/api/users/login - -
][2023-11-03 01:28:40.129 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:28:40.129 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7179/api/users/login - - - 204 - - 0.1500ms
][2023-11-03 01:28:40.132 +01:00 [INF] Request starting HTTP/2 POST https://localhost:7179/api/users/login application/json 94
][2023-11-03 01:28:40.132 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:28:40.132 +01:00 [INF] Bearer was not authenticated. Failure message: No SecurityTokenValidator available for token.
][2023-11-03 01:28:40.132 +01:00 [INF] Executing endpoint 'back.Controllers.UsersController.Authenticate (back)'
][2023-11-03 01:28:40.132 +01:00 [INF] Route matched with {action = "Authenticate", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Authenticate(back.Models.Domain.UserCredentials) on controller back.Controllers.UsersController (back).
][2023-11-03 01:28:40.137 +01:00 [INF] Executed DbCommand (3ms) [Parameters=[@___user_Email_0='?', @___user_Password_1='?'], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Avatar", t."Credentials", t."Email", t."Name", t."Password", t."RoleId", t."Token", t0."Id", t0."RoleKey", t0."RoleName"
FROM (
    SELECT u."Id", u."Avatar", u."Credentials", u."Email", u."Name", u."Password", u."RoleId", u."Token"
    FROM "Users" AS u
    WHERE u."Email" = @___user_Email_0 AND u."Password" = @___user_Password_1
    LIMIT 1
) AS t
LEFT JOIN (
    SELECT t1."Id", t1."RoleKey", t1."RoleName"
    FROM (
        SELECT r."Id", r."RoleKey", r."RoleName", ROW_NUMBER() OVER(PARTITION BY r."Id" ORDER BY r."Id") AS row
        FROM "Roles" AS r
    ) AS t1
    WHERE t1.row <= 1
) AS t0 ON t."RoleId" = t0."Id"
][2023-11-03 01:28:40.138 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[@__get_Item_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT r."Id", r."RToken", r."Status", r."UserId"
FROM "RefreshTokens" AS r
WHERE r."Id" = @__get_Item_0
LIMIT 1
][2023-11-03 01:28:40.141 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?', @p2='?' (DbType = Boolean), @p3='?' (DbType = Guid), @p5='?' (DbType = Guid), @p4='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "RefreshTokens" ("Id", "RToken", "Status", "UserId")
VALUES (@p0, @p1, @p2, @p3);
UPDATE "Users" SET "Token" = @p4
WHERE "Id" = @p5;
][2023-11-03 01:28:40.142 +01:00 [INF] Executing OkObjectResult, writing value of type 'back.Models.Domain.TokenResponse'.
][2023-11-03 01:28:40.142 +01:00 [INF] Executed action back.Controllers.UsersController.Authenticate (back) in 9.5121ms
][2023-11-03 01:28:40.142 +01:00 [INF] Executed endpoint 'back.Controllers.UsersController.Authenticate (back)'
][2023-11-03 01:28:40.142 +01:00 [INF] Request finished HTTP/2 POST https://localhost:7179/api/users/login application/json 94 - 200 - application/json;+charset=utf-8 9.9576ms
][2023-11-03 01:28:43.284 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7179/api/products - -
][2023-11-03 01:28:43.284 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:28:43.284 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7179/api/products - - - 204 - - 0.2450ms
][2023-11-03 01:28:43.288 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7179/api/products - -
][2023-11-03 01:28:43.288 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:28:43.288 +01:00 [INF] Executing endpoint 'back.Controllers.ProductsController.GetProducts (back)'
][2023-11-03 01:28:43.288 +01:00 [INF] Route matched with {action = "GetProducts", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProducts() on controller back.Controllers.ProductsController (back).
][2023-11-03 01:28:43.291 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Description", p."PublishedDate", p."Thumbnail", p."Title", p."Visibility"
FROM "Products" AS p
][2023-11-03 01:28:43.292 +01:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[back.Repositories.ProductEntity, back, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
][2023-11-03 01:28:43.292 +01:00 [INF] Executed action back.Controllers.ProductsController.GetProducts (back) in 3.7745ms
][2023-11-03 01:28:43.292 +01:00 [INF] Executed endpoint 'back.Controllers.ProductsController.GetProducts (back)'
][2023-11-03 01:28:43.292 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7179/api/products - - - 200 - application/json;+charset=utf-8 4.6202ms
][2023-11-03 01:29:05.076 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7179/api/products - -
][2023-11-03 01:29:05.076 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:29:05.076 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7179/api/products - - - 204 - - 0.1943ms
][2023-11-03 01:29:05.081 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7179/api/products - -
][2023-11-03 01:29:05.081 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:29:05.082 +01:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/3/2023 12:29:00 AM', Current time (UTC): '11/3/2023 12:29:05 AM'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
][2023-11-03 01:29:05.082 +01:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/3/2023 12:29:00 AM', Current time (UTC): '11/3/2023 12:29:05 AM'.
][2023-11-03 01:29:05.082 +01:00 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (user)
][2023-11-03 01:29:05.082 +01:00 [INF] AuthenticationScheme: Bearer was challenged.
][2023-11-03 01:29:05.082 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7179/api/products - - - 401 0 - 1.1897ms
][2023-11-03 01:29:05.203 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7179/api/users/refreshtoken - -
][2023-11-03 01:29:05.203 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:29:05.203 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7179/api/users/refreshtoken - - - 204 - - 0.1800ms
][2023-11-03 01:29:05.205 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7179/api/users/refreshtoken - -
][2023-11-03 01:29:05.205 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:29:05.205 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7179/api/users/refreshtoken - - - 204 - - 0.1856ms
][2023-11-03 01:29:05.206 +01:00 [INF] Request starting HTTP/2 POST https://localhost:7179/api/users/refreshtoken application/json 364
][2023-11-03 01:29:05.206 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:29:05.207 +01:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/3/2023 12:29:00 AM', Current time (UTC): '11/3/2023 12:29:05 AM'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
][2023-11-03 01:29:05.207 +01:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/3/2023 12:29:00 AM', Current time (UTC): '11/3/2023 12:29:05 AM'.
][2023-11-03 01:29:05.207 +01:00 [INF] Executing endpoint 'back.Controllers.UsersController.RefreshToken (back)'
][2023-11-03 01:29:05.207 +01:00 [INF] Route matched with {action = "RefreshToken", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] RefreshToken(back.Models.Domain.TokenResponse) on controller back.Controllers.UsersController (back).
][2023-11-03 01:29:05.208 +01:00 [ERR] this is an ID: 0007ad25-f987-42a3-90bc-8430f299957f
][2023-11-03 01:29:05.209 +01:00 [INF] Request starting HTTP/2 POST https://localhost:7179/api/users/refreshtoken application/json 364
][2023-11-03 01:29:05.209 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:29:05.209 +01:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/3/2023 12:29:00 AM', Current time (UTC): '11/3/2023 12:29:05 AM'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
][2023-11-03 01:29:05.209 +01:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/3/2023 12:29:00 AM', Current time (UTC): '11/3/2023 12:29:05 AM'.
][2023-11-03 01:29:05.209 +01:00 [INF] Executing endpoint 'back.Controllers.UsersController.RefreshToken (back)'
][2023-11-03 01:29:05.209 +01:00 [INF] Route matched with {action = "RefreshToken", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] RefreshToken(back.Models.Domain.TokenResponse) on controller back.Controllers.UsersController (back).
][2023-11-03 01:29:05.210 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Guid), @___tokenResponse_RefreshToken_1='?'], CommandType='"Text"', CommandTimeout='30']
SELECT r."Id", r."RToken", r."Status", r."UserId"
FROM "RefreshTokens" AS r
WHERE r."UserId" = @__id_0 AND r."RToken" = @___tokenResponse_RefreshToken_1
LIMIT 1
][2023-11-03 01:29:05.210 +01:00 [ERR] this is an ID: 0007ad25-f987-42a3-90bc-8430f299957f
][2023-11-03 01:29:05.212 +01:00 [INF] Executed DbCommand (0ms) [Parameters=[@__id_0='?' (DbType = Guid), @___tokenResponse_RefreshToken_1='?'], CommandType='"Text"', CommandTimeout='30']
SELECT r."Id", r."RToken", r."Status", r."UserId"
FROM "RefreshTokens" AS r
WHERE r."UserId" = @__id_0 AND r."RToken" = @___tokenResponse_RefreshToken_1
LIMIT 1
][2023-11-03 01:29:05.212 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[@__get_Item_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT r."Id", r."RToken", r."Status", r."UserId"
FROM "RefreshTokens" AS r
WHERE r."Id" = @__get_Item_0
LIMIT 1
][2023-11-03 01:29:05.214 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[@__get_Item_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT r."Id", r."RToken", r."Status", r."UserId"
FROM "RefreshTokens" AS r
WHERE r."Id" = @__get_Item_0
LIMIT 1
][2023-11-03 01:29:05.218 +01:00 [INF] Executed DbCommand (6ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?', @p2='?' (DbType = Boolean), @p3='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "RefreshTokens" ("Id", "RToken", "Status", "UserId")
VALUES (@p0, @p1, @p2, @p3);
][2023-11-03 01:29:05.218 +01:00 [INF] Executing OkObjectResult, writing value of type 'back.Models.Domain.TokenResponse'.
][2023-11-03 01:29:05.219 +01:00 [INF] Executed action back.Controllers.UsersController.RefreshToken (back) in 11.6631ms
][2023-11-03 01:29:05.219 +01:00 [INF] Executed endpoint 'back.Controllers.UsersController.RefreshToken (back)'
][2023-11-03 01:29:05.219 +01:00 [INF] Request finished HTTP/2 POST https://localhost:7179/api/users/refreshtoken application/json 364 - 200 - application/json;+charset=utf-8 12.3547ms
][2023-11-03 01:29:05.219 +01:00 [INF] Executed DbCommand (5ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?', @p2='?' (DbType = Boolean), @p3='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "RefreshTokens" ("Id", "RToken", "Status", "UserId")
VALUES (@p0, @p1, @p2, @p3);
][2023-11-03 01:29:05.219 +01:00 [INF] Executing OkObjectResult, writing value of type 'back.Models.Domain.TokenResponse'.
][2023-11-03 01:29:05.220 +01:00 [INF] Executed action back.Controllers.UsersController.RefreshToken (back) in 10.4904ms
][2023-11-03 01:29:05.220 +01:00 [INF] Executed endpoint 'back.Controllers.UsersController.RefreshToken (back)'
][2023-11-03 01:29:05.220 +01:00 [INF] Request finished HTTP/2 POST https://localhost:7179/api/users/refreshtoken application/json 364 - 200 - application/json;+charset=utf-8 11.3410ms
][2023-11-03 01:29:05.240 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7179/api/products - -
][2023-11-03 01:29:05.240 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:29:05.240 +01:00 [INF] Bearer was not authenticated. Failure message: No SecurityTokenValidator available for token.
][2023-11-03 01:29:05.240 +01:00 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (user)
][2023-11-03 01:29:05.240 +01:00 [INF] AuthenticationScheme: Bearer was challenged.
][2023-11-03 01:29:05.240 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7179/api/products - - - 401 0 - 0.4068ms
][2023-11-03 01:29:09.355 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7179/api/products - -
][2023-11-03 01:29:09.355 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:29:09.355 +01:00 [INF] Executing endpoint 'back.Controllers.ProductsController.GetProducts (back)'
][2023-11-03 01:29:09.355 +01:00 [INF] Route matched with {action = "GetProducts", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProducts() on controller back.Controllers.ProductsController (back).
][2023-11-03 01:29:09.359 +01:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Description", p."PublishedDate", p."Thumbnail", p."Title", p."Visibility"
FROM "Products" AS p
][2023-11-03 01:29:09.359 +01:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[back.Repositories.ProductEntity, back, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
][2023-11-03 01:29:09.360 +01:00 [INF] Executed action back.Controllers.ProductsController.GetProducts (back) in 4.4894ms
][2023-11-03 01:29:09.360 +01:00 [INF] Executed endpoint 'back.Controllers.ProductsController.GetProducts (back)'
][2023-11-03 01:29:09.360 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7179/api/products - - - 200 - application/json;+charset=utf-8 5.1322ms
][2023-11-03 01:29:12.843 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7179/api/products - -
][2023-11-03 01:29:12.843 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:29:12.843 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7179/api/products - - - 204 - - 0.2012ms
][2023-11-03 01:29:12.848 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7179/api/products - -
][2023-11-03 01:29:12.848 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:29:12.849 +01:00 [INF] Executing endpoint 'back.Controllers.ProductsController.GetProducts (back)'
][2023-11-03 01:29:12.849 +01:00 [INF] Route matched with {action = "GetProducts", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProducts() on controller back.Controllers.ProductsController (back).
][2023-11-03 01:29:12.850 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Description", p."PublishedDate", p."Thumbnail", p."Title", p."Visibility"
FROM "Products" AS p
][2023-11-03 01:29:12.851 +01:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[back.Repositories.ProductEntity, back, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
][2023-11-03 01:29:12.851 +01:00 [INF] Executed action back.Controllers.ProductsController.GetProducts (back) in 2.1477ms
][2023-11-03 01:29:12.851 +01:00 [INF] Executed endpoint 'back.Controllers.ProductsController.GetProducts (back)'
][2023-11-03 01:29:12.851 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7179/api/products - - - 200 - application/json;+charset=utf-8 2.9630ms
][2023-11-03 01:29:19.934 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7179/api/products - -
][2023-11-03 01:29:19.934 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:29:19.934 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7179/api/products - - - 204 - - 0.2037ms
][2023-11-03 01:29:19.940 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7179/api/products - -
][2023-11-03 01:29:19.940 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:29:19.941 +01:00 [INF] Executing endpoint 'back.Controllers.ProductsController.GetProducts (back)'
][2023-11-03 01:29:19.941 +01:00 [INF] Route matched with {action = "GetProducts", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProducts() on controller back.Controllers.ProductsController (back).
][2023-11-03 01:29:19.942 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Description", p."PublishedDate", p."Thumbnail", p."Title", p."Visibility"
FROM "Products" AS p
][2023-11-03 01:29:19.943 +01:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[back.Repositories.ProductEntity, back, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
][2023-11-03 01:29:19.943 +01:00 [INF] Executed action back.Controllers.ProductsController.GetProducts (back) in 2.2223ms
][2023-11-03 01:29:19.943 +01:00 [INF] Executed endpoint 'back.Controllers.ProductsController.GetProducts (back)'
][2023-11-03 01:29:19.943 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7179/api/products - - - 200 - application/json;+charset=utf-8 3.1212ms
][2023-11-03 01:29:31.594 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7179/api/products - -
][2023-11-03 01:29:31.594 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:29:31.594 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7179/api/products - - - 204 - - 0.3835ms
][2023-11-03 01:29:31.601 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7179/api/products - -
][2023-11-03 01:29:31.601 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:29:31.602 +01:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/3/2023 12:29:25 AM', Current time (UTC): '11/3/2023 12:29:31 AM'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
][2023-11-03 01:29:31.602 +01:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/3/2023 12:29:25 AM', Current time (UTC): '11/3/2023 12:29:31 AM'.
][2023-11-03 01:29:31.602 +01:00 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (user)
][2023-11-03 01:29:31.602 +01:00 [INF] AuthenticationScheme: Bearer was challenged.
][2023-11-03 01:29:31.602 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7179/api/products - - - 401 0 - 0.8315ms
][2023-11-03 01:29:31.713 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7179/api/users/refreshtoken - -
][2023-11-03 01:29:31.713 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7179/api/users/refreshtoken - -
][2023-11-03 01:29:31.713 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:29:31.713 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:29:31.713 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7179/api/users/refreshtoken - - - 204 - - 0.2994ms
][2023-11-03 01:29:31.713 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7179/api/users/refreshtoken - - - 204 - - 0.3018ms
][2023-11-03 01:29:31.736 +01:00 [INF] Request starting HTTP/2 POST https://localhost:7179/api/users/refreshtoken application/json 582
][2023-11-03 01:29:31.737 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:29:31.737 +01:00 [INF] Request starting HTTP/2 POST https://localhost:7179/api/users/refreshtoken application/json 582
][2023-11-03 01:29:31.738 +01:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/3/2023 12:29:25 AM', Current time (UTC): '11/3/2023 12:29:31 AM'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
][2023-11-03 01:29:31.738 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:29:31.739 +01:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/3/2023 12:29:25 AM', Current time (UTC): '11/3/2023 12:29:31 AM'.
][2023-11-03 01:29:31.739 +01:00 [INF] Executing endpoint 'back.Controllers.UsersController.RefreshToken (back)'
][2023-11-03 01:29:31.739 +01:00 [INF] Route matched with {action = "RefreshToken", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] RefreshToken(back.Models.Domain.TokenResponse) on controller back.Controllers.UsersController (back).
][2023-11-03 01:29:31.739 +01:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/3/2023 12:29:25 AM', Current time (UTC): '11/3/2023 12:29:31 AM'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
][2023-11-03 01:29:31.739 +01:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/3/2023 12:29:25 AM', Current time (UTC): '11/3/2023 12:29:31 AM'.
][2023-11-03 01:29:31.739 +01:00 [INF] Executing endpoint 'back.Controllers.UsersController.RefreshToken (back)'
][2023-11-03 01:29:31.739 +01:00 [INF] Route matched with {action = "RefreshToken", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] RefreshToken(back.Models.Domain.TokenResponse) on controller back.Controllers.UsersController (back).
][2023-11-03 01:29:31.740 +01:00 [ERR] this is an ID: 0007ad25-f987-42a3-90bc-8430f299957f
][2023-11-03 01:29:31.740 +01:00 [ERR] this is an ID: 0007ad25-f987-42a3-90bc-8430f299957f
][2023-11-03 01:29:31.742 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Guid), @___tokenResponse_RefreshToken_1='?'], CommandType='"Text"', CommandTimeout='30']
SELECT r."Id", r."RToken", r."Status", r."UserId"
FROM "RefreshTokens" AS r
WHERE r."UserId" = @__id_0 AND r."RToken" = @___tokenResponse_RefreshToken_1
LIMIT 1
][2023-11-03 01:29:31.745 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[@__get_Item_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT r."Id", r."RToken", r."Status", r."UserId"
FROM "RefreshTokens" AS r
WHERE r."Id" = @__get_Item_0
LIMIT 1
][2023-11-03 01:29:31.745 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Guid), @___tokenResponse_RefreshToken_1='?'], CommandType='"Text"', CommandTimeout='30']
SELECT r."Id", r."RToken", r."Status", r."UserId"
FROM "RefreshTokens" AS r
WHERE r."UserId" = @__id_0 AND r."RToken" = @___tokenResponse_RefreshToken_1
LIMIT 1
][2023-11-03 01:29:31.748 +01:00 [INF] Executed DbCommand (3ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?', @p2='?' (DbType = Boolean), @p3='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "RefreshTokens" ("Id", "RToken", "Status", "UserId")
VALUES (@p0, @p1, @p2, @p3);
][2023-11-03 01:29:31.748 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__get_Item_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT r."Id", r."RToken", r."Status", r."UserId"
FROM "RefreshTokens" AS r
WHERE r."Id" = @__get_Item_0
LIMIT 1
][2023-11-03 01:29:31.750 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?', @p2='?' (DbType = Boolean), @p3='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "RefreshTokens" ("Id", "RToken", "Status", "UserId")
VALUES (@p0, @p1, @p2, @p3);
][2023-11-03 01:29:31.751 +01:00 [INF] Executing OkObjectResult, writing value of type 'back.Models.Domain.TokenResponse'.
][2023-11-03 01:29:31.751 +01:00 [INF] Executing OkObjectResult, writing value of type 'back.Models.Domain.TokenResponse'.
][2023-11-03 01:29:31.751 +01:00 [INF] Executed action back.Controllers.UsersController.RefreshToken (back) in 11.9034ms
][2023-11-03 01:29:31.751 +01:00 [INF] Executed action back.Controllers.UsersController.RefreshToken (back) in 11.6102ms
][2023-11-03 01:29:31.751 +01:00 [INF] Executed endpoint 'back.Controllers.UsersController.RefreshToken (back)'
][2023-11-03 01:29:31.751 +01:00 [INF] Executed endpoint 'back.Controllers.UsersController.RefreshToken (back)'
][2023-11-03 01:29:31.751 +01:00 [INF] Request finished HTTP/2 POST https://localhost:7179/api/users/refreshtoken application/json 582 - 200 - application/json;+charset=utf-8 13.8657ms
][2023-11-03 01:29:31.751 +01:00 [INF] Request finished HTTP/2 POST https://localhost:7179/api/users/refreshtoken application/json 582 - 200 - application/json;+charset=utf-8 15.0351ms
][2023-11-03 01:29:31.761 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7179/api/products - -
][2023-11-03 01:29:31.761 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:29:31.762 +01:00 [INF] Bearer was not authenticated. Failure message: No SecurityTokenValidator available for token.
][2023-11-03 01:29:31.762 +01:00 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (user)
][2023-11-03 01:29:31.762 +01:00 [INF] AuthenticationScheme: Bearer was challenged.
][2023-11-03 01:29:31.762 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7179/api/products - - - 401 0 - 1.4708ms
][2023-11-03 01:29:36.376 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7179/api/products - -
][2023-11-03 01:29:36.376 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:29:36.377 +01:00 [INF] Executing endpoint 'back.Controllers.ProductsController.GetProducts (back)'
][2023-11-03 01:29:36.377 +01:00 [INF] Route matched with {action = "GetProducts", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProducts() on controller back.Controllers.ProductsController (back).
][2023-11-03 01:29:36.378 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Description", p."PublishedDate", p."Thumbnail", p."Title", p."Visibility"
FROM "Products" AS p
][2023-11-03 01:29:36.378 +01:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[back.Repositories.ProductEntity, back, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
][2023-11-03 01:29:36.379 +01:00 [INF] Executed action back.Controllers.ProductsController.GetProducts (back) in 1.8327ms
][2023-11-03 01:29:36.379 +01:00 [INF] Executed endpoint 'back.Controllers.ProductsController.GetProducts (back)'
][2023-11-03 01:29:36.379 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7179/api/products - - - 200 - application/json;+charset=utf-8 2.4694ms
][2023-11-03 01:31:15.904 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7179/api/products - -
][2023-11-03 01:31:15.904 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:31:15.904 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7179/api/products - - - 204 - - 0.2163ms
][2023-11-03 01:31:15.910 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7179/api/products - -
][2023-11-03 01:31:15.910 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:31:15.910 +01:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/3/2023 12:29:51 AM', Current time (UTC): '11/3/2023 12:31:15 AM'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
][2023-11-03 01:31:15.910 +01:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/3/2023 12:29:51 AM', Current time (UTC): '11/3/2023 12:31:15 AM'.
][2023-11-03 01:31:15.910 +01:00 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (user)
][2023-11-03 01:31:15.910 +01:00 [INF] AuthenticationScheme: Bearer was challenged.
][2023-11-03 01:31:15.910 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7179/api/products - - - 401 0 - 0.8312ms
][2023-11-03 01:31:15.953 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7179/api/users/refreshtoken - -
][2023-11-03 01:31:15.953 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:31:15.953 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7179/api/users/refreshtoken - - - 204 - - 0.1923ms
][2023-11-03 01:31:15.956 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7179/api/users/refreshtoken - -
][2023-11-03 01:31:15.956 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:31:15.956 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7179/api/users/refreshtoken - - - 204 - - 0.4146ms
][2023-11-03 01:31:15.957 +01:00 [INF] Request starting HTTP/2 POST https://localhost:7179/api/users/refreshtoken application/json 582
][2023-11-03 01:31:15.958 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:31:15.958 +01:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/3/2023 12:29:51 AM', Current time (UTC): '11/3/2023 12:31:15 AM'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
][2023-11-03 01:31:15.958 +01:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/3/2023 12:29:51 AM', Current time (UTC): '11/3/2023 12:31:15 AM'.
][2023-11-03 01:31:15.958 +01:00 [INF] Executing endpoint 'back.Controllers.UsersController.RefreshToken (back)'
][2023-11-03 01:31:15.958 +01:00 [INF] Route matched with {action = "RefreshToken", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] RefreshToken(back.Models.Domain.TokenResponse) on controller back.Controllers.UsersController (back).
][2023-11-03 01:31:15.959 +01:00 [ERR] this is an ID: 0007ad25-f987-42a3-90bc-8430f299957f
][2023-11-03 01:31:15.961 +01:00 [INF] Request starting HTTP/2 POST https://localhost:7179/api/users/refreshtoken application/json 582
][2023-11-03 01:31:15.961 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:31:15.961 +01:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/3/2023 12:29:51 AM', Current time (UTC): '11/3/2023 12:31:15 AM'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
][2023-11-03 01:31:15.961 +01:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/3/2023 12:29:51 AM', Current time (UTC): '11/3/2023 12:31:15 AM'.
][2023-11-03 01:31:15.961 +01:00 [INF] Executing endpoint 'back.Controllers.UsersController.RefreshToken (back)'
][2023-11-03 01:31:15.961 +01:00 [INF] Route matched with {action = "RefreshToken", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] RefreshToken(back.Models.Domain.TokenResponse) on controller back.Controllers.UsersController (back).
][2023-11-03 01:31:15.962 +01:00 [ERR] this is an ID: 0007ad25-f987-42a3-90bc-8430f299957f
][2023-11-03 01:31:16.011 +01:00 [INF] Executed DbCommand (3ms) [Parameters=[@__id_0='?' (DbType = Guid), @___tokenResponse_RefreshToken_1='?'], CommandType='"Text"', CommandTimeout='30']
SELECT r."Id", r."RToken", r."Status", r."UserId"
FROM "RefreshTokens" AS r
WHERE r."UserId" = @__id_0 AND r."RToken" = @___tokenResponse_RefreshToken_1
LIMIT 1
][2023-11-03 01:31:16.012 +01:00 [INF] Executed DbCommand (3ms) [Parameters=[@__id_0='?' (DbType = Guid), @___tokenResponse_RefreshToken_1='?'], CommandType='"Text"', CommandTimeout='30']
SELECT r."Id", r."RToken", r."Status", r."UserId"
FROM "RefreshTokens" AS r
WHERE r."UserId" = @__id_0 AND r."RToken" = @___tokenResponse_RefreshToken_1
LIMIT 1
][2023-11-03 01:31:16.013 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[@__get_Item_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT r."Id", r."RToken", r."Status", r."UserId"
FROM "RefreshTokens" AS r
WHERE r."Id" = @__get_Item_0
LIMIT 1
][2023-11-03 01:31:16.013 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[@__get_Item_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT r."Id", r."RToken", r."Status", r."UserId"
FROM "RefreshTokens" AS r
WHERE r."Id" = @__get_Item_0
LIMIT 1
][2023-11-03 01:31:16.015 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?', @p2='?' (DbType = Boolean), @p3='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "RefreshTokens" ("Id", "RToken", "Status", "UserId")
VALUES (@p0, @p1, @p2, @p3);
][2023-11-03 01:31:16.016 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?', @p2='?' (DbType = Boolean), @p3='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "RefreshTokens" ("Id", "RToken", "Status", "UserId")
VALUES (@p0, @p1, @p2, @p3);
][2023-11-03 01:31:16.016 +01:00 [INF] Executing OkObjectResult, writing value of type 'back.Models.Domain.TokenResponse'.
][2023-11-03 01:31:16.016 +01:00 [INF] Executed action back.Controllers.UsersController.RefreshToken (back) in 58.1999ms
][2023-11-03 01:31:16.016 +01:00 [INF] Executed endpoint 'back.Controllers.UsersController.RefreshToken (back)'
][2023-11-03 01:31:16.016 +01:00 [INF] Request finished HTTP/2 POST https://localhost:7179/api/users/refreshtoken application/json 582 - 200 - application/json;+charset=utf-8 58.9959ms
][2023-11-03 01:31:16.017 +01:00 [INF] Executing OkObjectResult, writing value of type 'back.Models.Domain.TokenResponse'.
][2023-11-03 01:31:16.017 +01:00 [INF] Executed action back.Controllers.UsersController.RefreshToken (back) in 55.6481ms
][2023-11-03 01:31:16.017 +01:00 [INF] Executed endpoint 'back.Controllers.UsersController.RefreshToken (back)'
][2023-11-03 01:31:16.017 +01:00 [INF] Request finished HTTP/2 POST https://localhost:7179/api/users/refreshtoken application/json 582 - 200 - application/json;+charset=utf-8 56.5138ms
][2023-11-03 01:31:16.107 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7179/api/products - -
][2023-11-03 01:31:16.107 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:31:16.107 +01:00 [INF] Bearer was not authenticated. Failure message: No SecurityTokenValidator available for token.
][2023-11-03 01:31:16.107 +01:00 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (user)
][2023-11-03 01:31:16.107 +01:00 [INF] AuthenticationScheme: Bearer was challenged.
][2023-11-03 01:31:16.107 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7179/api/products - - - 401 0 - 0.3762ms
][2023-11-03 01:31:43.830 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7179/api/products - -
][2023-11-03 01:31:43.830 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:31:43.830 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7179/api/products - - - 204 - - 0.2468ms
][2023-11-03 01:31:43.834 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7179/api/products - -
][2023-11-03 01:31:43.835 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:31:43.835 +01:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/3/2023 12:31:36 AM', Current time (UTC): '11/3/2023 12:31:43 AM'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
][2023-11-03 01:31:43.836 +01:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/3/2023 12:31:36 AM', Current time (UTC): '11/3/2023 12:31:43 AM'.
][2023-11-03 01:31:43.836 +01:00 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (user)
][2023-11-03 01:31:43.836 +01:00 [INF] AuthenticationScheme: Bearer was challenged.
][2023-11-03 01:31:43.836 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7179/api/products - - - 401 0 - 1.8999ms
][2023-11-03 01:31:43.934 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7179/api/users/refreshtoken - -
][2023-11-03 01:31:43.934 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7179/api/users/refreshtoken - -
][2023-11-03 01:31:43.934 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:31:43.934 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:31:43.934 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7179/api/users/refreshtoken - - - 204 - - 0.1946ms
][2023-11-03 01:31:43.934 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7179/api/users/refreshtoken - - - 204 - - 0.1919ms
][2023-11-03 01:31:43.939 +01:00 [INF] Request starting HTTP/2 POST https://localhost:7179/api/users/refreshtoken application/json 582
][2023-11-03 01:31:43.939 +01:00 [INF] Request starting HTTP/2 POST https://localhost:7179/api/users/refreshtoken application/json 582
][2023-11-03 01:31:43.939 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:31:43.939 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:31:43.939 +01:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/3/2023 12:31:36 AM', Current time (UTC): '11/3/2023 12:31:43 AM'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
][2023-11-03 01:31:43.939 +01:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/3/2023 12:31:36 AM', Current time (UTC): '11/3/2023 12:31:43 AM'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
][2023-11-03 01:31:43.939 +01:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/3/2023 12:31:36 AM', Current time (UTC): '11/3/2023 12:31:43 AM'.
][2023-11-03 01:31:43.939 +01:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/3/2023 12:31:36 AM', Current time (UTC): '11/3/2023 12:31:43 AM'.
][2023-11-03 01:31:43.939 +01:00 [INF] Executing endpoint 'back.Controllers.UsersController.RefreshToken (back)'
][2023-11-03 01:31:43.939 +01:00 [INF] Executing endpoint 'back.Controllers.UsersController.RefreshToken (back)'
][2023-11-03 01:31:43.939 +01:00 [INF] Route matched with {action = "RefreshToken", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] RefreshToken(back.Models.Domain.TokenResponse) on controller back.Controllers.UsersController (back).
][2023-11-03 01:31:43.939 +01:00 [INF] Route matched with {action = "RefreshToken", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] RefreshToken(back.Models.Domain.TokenResponse) on controller back.Controllers.UsersController (back).
][2023-11-03 01:31:43.941 +01:00 [ERR] this is an ID: 0007ad25-f987-42a3-90bc-8430f299957f
][2023-11-03 01:31:43.941 +01:00 [ERR] this is an ID: 0007ad25-f987-42a3-90bc-8430f299957f
][2023-11-03 01:31:43.942 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Guid), @___tokenResponse_RefreshToken_1='?'], CommandType='"Text"', CommandTimeout='30']
SELECT r."Id", r."RToken", r."Status", r."UserId"
FROM "RefreshTokens" AS r
WHERE r."UserId" = @__id_0 AND r."RToken" = @___tokenResponse_RefreshToken_1
LIMIT 1
][2023-11-03 01:31:43.943 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__id_0='?' (DbType = Guid), @___tokenResponse_RefreshToken_1='?'], CommandType='"Text"', CommandTimeout='30']
SELECT r."Id", r."RToken", r."Status", r."UserId"
FROM "RefreshTokens" AS r
WHERE r."UserId" = @__id_0 AND r."RToken" = @___tokenResponse_RefreshToken_1
LIMIT 1
][2023-11-03 01:31:43.944 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[@__get_Item_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT r."Id", r."RToken", r."Status", r."UserId"
FROM "RefreshTokens" AS r
WHERE r."Id" = @__get_Item_0
LIMIT 1
][2023-11-03 01:31:43.947 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[@__get_Item_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT r."Id", r."RToken", r."Status", r."UserId"
FROM "RefreshTokens" AS r
WHERE r."Id" = @__get_Item_0
LIMIT 1
][2023-11-03 01:31:43.951 +01:00 [INF] Executed DbCommand (6ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?', @p2='?' (DbType = Boolean), @p3='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "RefreshTokens" ("Id", "RToken", "Status", "UserId")
VALUES (@p0, @p1, @p2, @p3);
][2023-11-03 01:31:43.951 +01:00 [INF] Executed DbCommand (3ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?', @p2='?' (DbType = Boolean), @p3='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "RefreshTokens" ("Id", "RToken", "Status", "UserId")
VALUES (@p0, @p1, @p2, @p3);
][2023-11-03 01:31:43.954 +01:00 [INF] Executing OkObjectResult, writing value of type 'back.Models.Domain.TokenResponse'.
][2023-11-03 01:31:43.954 +01:00 [INF] Executed action back.Controllers.UsersController.RefreshToken (back) in 14.686ms
][2023-11-03 01:31:43.954 +01:00 [INF] Executed endpoint 'back.Controllers.UsersController.RefreshToken (back)'
][2023-11-03 01:31:43.954 +01:00 [INF] Request finished HTTP/2 POST https://localhost:7179/api/users/refreshtoken application/json 582 - 200 - application/json;+charset=utf-8 15.7206ms
][2023-11-03 01:31:43.955 +01:00 [INF] Executing OkObjectResult, writing value of type 'back.Models.Domain.TokenResponse'.
][2023-11-03 01:31:43.955 +01:00 [INF] Executed action back.Controllers.UsersController.RefreshToken (back) in 15.9755ms
][2023-11-03 01:31:43.955 +01:00 [INF] Executed endpoint 'back.Controllers.UsersController.RefreshToken (back)'
][2023-11-03 01:31:43.956 +01:00 [INF] Request finished HTTP/2 POST https://localhost:7179/api/users/refreshtoken application/json 582 - 200 - application/json;+charset=utf-8 17.0224ms
][2023-11-03 01:31:43.965 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7179/api/products - -
][2023-11-03 01:31:43.968 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:31:43.968 +01:00 [INF] Bearer was not authenticated. Failure message: No SecurityTokenValidator available for token.
][2023-11-03 01:31:43.968 +01:00 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (user)
][2023-11-03 01:31:43.968 +01:00 [INF] AuthenticationScheme: Bearer was challenged.
][2023-11-03 01:31:43.968 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7179/api/products - - - 401 0 - 2.8381ms
][2023-11-03 01:31:53.567 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7179/api/users/login - -
][2023-11-03 01:31:53.567 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:31:53.567 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7179/api/users/login - - - 204 - - 0.2160ms
][2023-11-03 01:31:53.570 +01:00 [INF] Request starting HTTP/2 POST https://localhost:7179/api/users/login application/json 94
][2023-11-03 01:31:53.570 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:31:53.570 +01:00 [INF] Executing endpoint 'back.Controllers.UsersController.Authenticate (back)'
][2023-11-03 01:31:53.570 +01:00 [INF] Route matched with {action = "Authenticate", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Authenticate(back.Models.Domain.UserCredentials) on controller back.Controllers.UsersController (back).
][2023-11-03 01:31:53.574 +01:00 [INF] Executed DbCommand (3ms) [Parameters=[@___user_Email_0='?', @___user_Password_1='?'], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Avatar", t."Credentials", t."Email", t."Name", t."Password", t."RoleId", t."Token", t0."Id", t0."RoleKey", t0."RoleName"
FROM (
    SELECT u."Id", u."Avatar", u."Credentials", u."Email", u."Name", u."Password", u."RoleId", u."Token"
    FROM "Users" AS u
    WHERE u."Email" = @___user_Email_0 AND u."Password" = @___user_Password_1
    LIMIT 1
) AS t
LEFT JOIN (
    SELECT t1."Id", t1."RoleKey", t1."RoleName"
    FROM (
        SELECT r."Id", r."RoleKey", r."RoleName", ROW_NUMBER() OVER(PARTITION BY r."Id" ORDER BY r."Id") AS row
        FROM "Roles" AS r
    ) AS t1
    WHERE t1.row <= 1
) AS t0 ON t."RoleId" = t0."Id"
][2023-11-03 01:31:53.576 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[@__get_Item_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT r."Id", r."RToken", r."Status", r."UserId"
FROM "RefreshTokens" AS r
WHERE r."Id" = @__get_Item_0
LIMIT 1
][2023-11-03 01:31:53.577 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?', @p2='?' (DbType = Boolean), @p3='?' (DbType = Guid), @p5='?' (DbType = Guid), @p4='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "RefreshTokens" ("Id", "RToken", "Status", "UserId")
VALUES (@p0, @p1, @p2, @p3);
UPDATE "Users" SET "Token" = @p4
WHERE "Id" = @p5;
][2023-11-03 01:31:53.578 +01:00 [INF] Executing OkObjectResult, writing value of type 'back.Models.Domain.TokenResponse'.
][2023-11-03 01:31:53.578 +01:00 [INF] Executed action back.Controllers.UsersController.Authenticate (back) in 7.6297ms
][2023-11-03 01:31:53.578 +01:00 [INF] Executed endpoint 'back.Controllers.UsersController.Authenticate (back)'
][2023-11-03 01:31:53.578 +01:00 [INF] Request finished HTTP/2 POST https://localhost:7179/api/users/login application/json 94 - 200 - application/json;+charset=utf-8 8.0220ms
][2023-11-03 01:31:57.183 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7179/api/products - -
][2023-11-03 01:31:57.184 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:31:57.184 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7179/api/products - - - 204 - - 0.9587ms
][2023-11-03 01:31:57.197 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7179/api/products - -
][2023-11-03 01:31:57.197 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:31:57.197 +01:00 [INF] Executing endpoint 'back.Controllers.ProductsController.GetProducts (back)'
][2023-11-03 01:31:57.197 +01:00 [INF] Route matched with {action = "GetProducts", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProducts() on controller back.Controllers.ProductsController (back).
][2023-11-03 01:31:57.200 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Description", p."PublishedDate", p."Thumbnail", p."Title", p."Visibility"
FROM "Products" AS p
][2023-11-03 01:31:57.200 +01:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[back.Repositories.ProductEntity, back, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
][2023-11-03 01:31:57.200 +01:00 [INF] Executed action back.Controllers.ProductsController.GetProducts (back) in 3.3158ms
][2023-11-03 01:31:57.201 +01:00 [INF] Executed endpoint 'back.Controllers.ProductsController.GetProducts (back)'
][2023-11-03 01:31:57.201 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7179/api/products - - - 200 - application/json;+charset=utf-8 3.8117ms
][2023-11-03 01:32:16.933 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7179/api/products - -
][2023-11-03 01:32:16.933 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:32:16.933 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7179/api/products - - - 204 - - 0.5833ms
][2023-11-03 01:32:16.948 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7179/api/products - -
][2023-11-03 01:32:16.948 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:32:16.948 +01:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/3/2023 12:32:13 AM', Current time (UTC): '11/3/2023 12:32:16 AM'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
][2023-11-03 01:32:16.948 +01:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/3/2023 12:32:13 AM', Current time (UTC): '11/3/2023 12:32:16 AM'.
][2023-11-03 01:32:16.948 +01:00 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (user)
][2023-11-03 01:32:16.948 +01:00 [INF] AuthenticationScheme: Bearer was challenged.
][2023-11-03 01:32:16.948 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7179/api/products - - - 401 0 - 0.8030ms
][2023-11-03 01:32:17.033 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7179/api/users/refreshtoken - -
][2023-11-03 01:32:17.033 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:32:17.033 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7179/api/users/refreshtoken - -
][2023-11-03 01:32:17.033 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:32:17.034 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7179/api/users/refreshtoken - - - 204 - - 0.4196ms
][2023-11-03 01:32:17.033 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7179/api/users/refreshtoken - - - 204 - - 0.2048ms
][2023-11-03 01:32:17.039 +01:00 [INF] Request starting HTTP/2 POST https://localhost:7179/api/users/refreshtoken application/json 364
][2023-11-03 01:32:17.039 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:32:17.039 +01:00 [INF] Request starting HTTP/2 POST https://localhost:7179/api/users/refreshtoken application/json 364
][2023-11-03 01:32:17.039 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:32:17.039 +01:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/3/2023 12:32:13 AM', Current time (UTC): '11/3/2023 12:32:17 AM'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
][2023-11-03 01:32:17.039 +01:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/3/2023 12:32:13 AM', Current time (UTC): '11/3/2023 12:32:17 AM'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
][2023-11-03 01:32:17.039 +01:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/3/2023 12:32:13 AM', Current time (UTC): '11/3/2023 12:32:17 AM'.
][2023-11-03 01:32:17.039 +01:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/3/2023 12:32:13 AM', Current time (UTC): '11/3/2023 12:32:17 AM'.
][2023-11-03 01:32:17.039 +01:00 [INF] Executing endpoint 'back.Controllers.UsersController.RefreshToken (back)'
][2023-11-03 01:32:17.039 +01:00 [INF] Executing endpoint 'back.Controllers.UsersController.RefreshToken (back)'
][2023-11-03 01:32:17.039 +01:00 [INF] Route matched with {action = "RefreshToken", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] RefreshToken(back.Models.Domain.TokenResponse) on controller back.Controllers.UsersController (back).
][2023-11-03 01:32:17.039 +01:00 [INF] Route matched with {action = "RefreshToken", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] RefreshToken(back.Models.Domain.TokenResponse) on controller back.Controllers.UsersController (back).
][2023-11-03 01:32:17.040 +01:00 [ERR] this is an ID: 0007ad25-f987-42a3-90bc-8430f299957f
][2023-11-03 01:32:17.041 +01:00 [ERR] this is an ID: 0007ad25-f987-42a3-90bc-8430f299957f
][2023-11-03 01:32:17.042 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Guid), @___tokenResponse_RefreshToken_1='?'], CommandType='"Text"', CommandTimeout='30']
SELECT r."Id", r."RToken", r."Status", r."UserId"
FROM "RefreshTokens" AS r
WHERE r."UserId" = @__id_0 AND r."RToken" = @___tokenResponse_RefreshToken_1
LIMIT 1
][2023-11-03 01:32:17.044 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[@__get_Item_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT r."Id", r."RToken", r."Status", r."UserId"
FROM "RefreshTokens" AS r
WHERE r."Id" = @__get_Item_0
LIMIT 1
][2023-11-03 01:32:17.047 +01:00 [INF] Executed DbCommand (4ms) [Parameters=[@__id_0='?' (DbType = Guid), @___tokenResponse_RefreshToken_1='?'], CommandType='"Text"', CommandTimeout='30']
SELECT r."Id", r."RToken", r."Status", r."UserId"
FROM "RefreshTokens" AS r
WHERE r."UserId" = @__id_0 AND r."RToken" = @___tokenResponse_RefreshToken_1
LIMIT 1
][2023-11-03 01:32:17.050 +01:00 [INF] Executed DbCommand (6ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?', @p2='?' (DbType = Boolean), @p3='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "RefreshTokens" ("Id", "RToken", "Status", "UserId")
VALUES (@p0, @p1, @p2, @p3);
][2023-11-03 01:32:17.053 +01:00 [INF] Executing OkObjectResult, writing value of type 'back.Models.Domain.TokenResponse'.
][2023-11-03 01:32:17.054 +01:00 [INF] Executed action back.Controllers.UsersController.RefreshToken (back) in 14.2648ms
][2023-11-03 01:32:17.054 +01:00 [INF] Executed endpoint 'back.Controllers.UsersController.RefreshToken (back)'
][2023-11-03 01:32:17.054 +01:00 [INF] Request finished HTTP/2 POST https://localhost:7179/api/users/refreshtoken application/json 364 - 200 - application/json;+charset=utf-8 15.1080ms
][2023-11-03 01:32:17.068 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__get_Item_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT r."Id", r."RToken", r."Status", r."UserId"
FROM "RefreshTokens" AS r
WHERE r."Id" = @__get_Item_0
LIMIT 1
][2023-11-03 01:32:17.069 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?', @p2='?' (DbType = Boolean), @p3='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "RefreshTokens" ("Id", "RToken", "Status", "UserId")
VALUES (@p0, @p1, @p2, @p3);
][2023-11-03 01:32:17.077 +01:00 [INF] Executing OkObjectResult, writing value of type 'back.Models.Domain.TokenResponse'.
][2023-11-03 01:32:17.078 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7179/api/products - -
][2023-11-03 01:32:17.078 +01:00 [INF] Executed action back.Controllers.UsersController.RefreshToken (back) in 38.4634ms
][2023-11-03 01:32:17.078 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:32:17.078 +01:00 [INF] Executed endpoint 'back.Controllers.UsersController.RefreshToken (back)'
][2023-11-03 01:32:17.078 +01:00 [INF] Bearer was not authenticated. Failure message: No SecurityTokenValidator available for token.
][2023-11-03 01:32:17.078 +01:00 [INF] Request finished HTTP/2 POST https://localhost:7179/api/users/refreshtoken application/json 364 - 200 - application/json;+charset=utf-8 39.2257ms
][2023-11-03 01:32:17.078 +01:00 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (user)
][2023-11-03 01:32:17.078 +01:00 [INF] AuthenticationScheme: Bearer was challenged.
][2023-11-03 01:32:17.078 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7179/api/products - - - 401 0 - 0.3570ms
][2023-11-03 01:32:21.554 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7179/api/blogposts - -
][2023-11-03 01:32:21.555 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:32:21.555 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7179/api/blogposts - - - 204 - - 0.2317ms
][2023-11-03 01:32:21.559 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7179/api/blogposts - -
][2023-11-03 01:32:21.559 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:32:21.559 +01:00 [INF] Executing endpoint 'back.Controllers.BlogPostsController.GetBlogPosts (back)'
][2023-11-03 01:32:21.563 +01:00 [INF] Route matched with {action = "GetBlogPosts", controller = "BlogPosts"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBlogPosts() on controller back.Controllers.BlogPostsController (back).
][2023-11-03 01:32:21.574 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT b."Id", b."Author", b."Content", b."FeaturedImageUrl", b."IsVisible", b."PublishedDate", b."ShortDescription", b."Title", b."UrlHandle"
FROM "BlogPosts" AS b
][2023-11-03 01:32:21.576 +01:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[back.Models.Domain.BlogPost, back, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
][2023-11-03 01:32:21.577 +01:00 [INF] Executed action back.Controllers.BlogPostsController.GetBlogPosts (back) in 13.2247ms
][2023-11-03 01:32:21.577 +01:00 [INF] Executed endpoint 'back.Controllers.BlogPostsController.GetBlogPosts (back)'
][2023-11-03 01:32:21.577 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7179/api/blogposts - - - 200 - application/json;+charset=utf-8 18.2029ms
][2023-11-03 01:32:22.547 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7179/api/products - -
][2023-11-03 01:32:22.547 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:32:22.547 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7179/api/products - - - 204 - - 0.2053ms
][2023-11-03 01:32:22.551 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7179/api/products - -
][2023-11-03 01:32:22.551 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:32:22.551 +01:00 [INF] Executing endpoint 'back.Controllers.ProductsController.GetProducts (back)'
][2023-11-03 01:32:22.551 +01:00 [INF] Route matched with {action = "GetProducts", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProducts() on controller back.Controllers.ProductsController (back).
][2023-11-03 01:32:22.554 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Description", p."PublishedDate", p."Thumbnail", p."Title", p."Visibility"
FROM "Products" AS p
][2023-11-03 01:32:22.554 +01:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[back.Repositories.ProductEntity, back, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
][2023-11-03 01:32:22.554 +01:00 [INF] Executed action back.Controllers.ProductsController.GetProducts (back) in 2.618ms
][2023-11-03 01:32:22.554 +01:00 [INF] Executed endpoint 'back.Controllers.ProductsController.GetProducts (back)'
][2023-11-03 01:32:22.554 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7179/api/products - - - 200 - application/json;+charset=utf-8 3.1753ms
][2023-11-03 01:32:35.624 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7179/api/categories - -
][2023-11-03 01:32:35.624 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:32:35.624 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7179/api/categories - - - 204 - - 0.1723ms
][2023-11-03 01:32:35.642 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7179/api/categories - -
][2023-11-03 01:32:35.642 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:32:35.642 +01:00 [INF] Executing endpoint 'back.Controllers.CategoriesController.GetCategories (back)'
][2023-11-03 01:32:35.645 +01:00 [INF] Route matched with {action = "GetCategories", controller = "Categories"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCategories() on controller back.Controllers.CategoriesController (back).
][2023-11-03 01:32:35.652 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c."Id", c."Name", c."UrlHandle"
FROM "Categories" AS c
][2023-11-03 01:32:35.659 +01:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[back.Models.Domain.Category, back, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
][2023-11-03 01:32:35.660 +01:00 [INF] Executed action back.Controllers.CategoriesController.GetCategories (back) in 15.0109ms
][2023-11-03 01:32:35.660 +01:00 [INF] Executed endpoint 'back.Controllers.CategoriesController.GetCategories (back)'
][2023-11-03 01:32:35.660 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7179/api/categories - - - 200 - application/json;+charset=utf-8 18.3192ms
][2023-11-03 01:32:37.000 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7179/api/products - -
][2023-11-03 01:32:37.001 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:32:37.001 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7179/api/products - - - 204 - - 0.1884ms
][2023-11-03 01:32:37.013 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7179/api/products - -
][2023-11-03 01:32:37.013 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:32:37.013 +01:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/3/2023 12:32:37 AM', Current time (UTC): '11/3/2023 12:32:37 AM'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
][2023-11-03 01:32:37.013 +01:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/3/2023 12:32:37 AM', Current time (UTC): '11/3/2023 12:32:37 AM'.
][2023-11-03 01:32:37.013 +01:00 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (user)
][2023-11-03 01:32:37.013 +01:00 [INF] AuthenticationScheme: Bearer was challenged.
][2023-11-03 01:32:37.014 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7179/api/products - - - 401 0 - 0.6830ms
][2023-11-03 01:32:37.028 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7179/api/users/refreshtoken - -
][2023-11-03 01:32:37.028 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:32:37.028 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7179/api/users/refreshtoken - - - 204 - - 0.1773ms
][2023-11-03 01:32:37.030 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7179/api/users/refreshtoken - -
][2023-11-03 01:32:37.030 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:32:37.030 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7179/api/users/refreshtoken - - - 204 - - 0.1560ms
][2023-11-03 01:32:37.031 +01:00 [INF] Request starting HTTP/2 POST https://localhost:7179/api/users/refreshtoken application/json 582
][2023-11-03 01:32:37.031 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:32:37.031 +01:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/3/2023 12:32:37 AM', Current time (UTC): '11/3/2023 12:32:37 AM'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
][2023-11-03 01:32:37.031 +01:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/3/2023 12:32:37 AM', Current time (UTC): '11/3/2023 12:32:37 AM'.
][2023-11-03 01:32:37.031 +01:00 [INF] Executing endpoint 'back.Controllers.UsersController.RefreshToken (back)'
][2023-11-03 01:32:37.031 +01:00 [INF] Route matched with {action = "RefreshToken", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] RefreshToken(back.Models.Domain.TokenResponse) on controller back.Controllers.UsersController (back).
][2023-11-03 01:32:37.032 +01:00 [ERR] this is an ID: 0007ad25-f987-42a3-90bc-8430f299957f
][2023-11-03 01:32:37.033 +01:00 [INF] Request starting HTTP/2 POST https://localhost:7179/api/users/refreshtoken application/json 582
][2023-11-03 01:32:37.033 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:32:37.033 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Guid), @___tokenResponse_RefreshToken_1='?'], CommandType='"Text"', CommandTimeout='30']
SELECT r."Id", r."RToken", r."Status", r."UserId"
FROM "RefreshTokens" AS r
WHERE r."UserId" = @__id_0 AND r."RToken" = @___tokenResponse_RefreshToken_1
LIMIT 1
][2023-11-03 01:32:37.033 +01:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/3/2023 12:32:37 AM', Current time (UTC): '11/3/2023 12:32:37 AM'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
][2023-11-03 01:32:37.033 +01:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/3/2023 12:32:37 AM', Current time (UTC): '11/3/2023 12:32:37 AM'.
][2023-11-03 01:32:37.033 +01:00 [INF] Executing endpoint 'back.Controllers.UsersController.RefreshToken (back)'
][2023-11-03 01:32:37.033 +01:00 [INF] Route matched with {action = "RefreshToken", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] RefreshToken(back.Models.Domain.TokenResponse) on controller back.Controllers.UsersController (back).
][2023-11-03 01:32:37.034 +01:00 [ERR] this is an ID: 0007ad25-f987-42a3-90bc-8430f299957f
][2023-11-03 01:32:37.034 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[@__get_Item_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT r."Id", r."RToken", r."Status", r."UserId"
FROM "RefreshTokens" AS r
WHERE r."Id" = @__get_Item_0
LIMIT 1
][2023-11-03 01:32:37.035 +01:00 [INF] Executed DbCommand (0ms) [Parameters=[@__id_0='?' (DbType = Guid), @___tokenResponse_RefreshToken_1='?'], CommandType='"Text"', CommandTimeout='30']
SELECT r."Id", r."RToken", r."Status", r."UserId"
FROM "RefreshTokens" AS r
WHERE r."UserId" = @__id_0 AND r."RToken" = @___tokenResponse_RefreshToken_1
LIMIT 1
][2023-11-03 01:32:37.036 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?', @p2='?' (DbType = Boolean), @p3='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "RefreshTokens" ("Id", "RToken", "Status", "UserId")
VALUES (@p0, @p1, @p2, @p3);
][2023-11-03 01:32:37.036 +01:00 [INF] Executing OkObjectResult, writing value of type 'back.Models.Domain.TokenResponse'.
][2023-11-03 01:32:37.036 +01:00 [INF] Executed action back.Controllers.UsersController.RefreshToken (back) in 4.5387ms
][2023-11-03 01:32:37.036 +01:00 [INF] Executed endpoint 'back.Controllers.UsersController.RefreshToken (back)'
][2023-11-03 01:32:37.036 +01:00 [INF] Request finished HTTP/2 POST https://localhost:7179/api/users/refreshtoken application/json 582 - 200 - application/json;+charset=utf-8 5.2790ms
][2023-11-03 01:32:37.037 +01:00 [INF] Executed DbCommand (0ms) [Parameters=[@__get_Item_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT r."Id", r."RToken", r."Status", r."UserId"
FROM "RefreshTokens" AS r
WHERE r."Id" = @__get_Item_0
LIMIT 1
][2023-11-03 01:32:37.038 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?', @p2='?' (DbType = Boolean), @p3='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "RefreshTokens" ("Id", "RToken", "Status", "UserId")
VALUES (@p0, @p1, @p2, @p3);
][2023-11-03 01:32:37.038 +01:00 [INF] Executing OkObjectResult, writing value of type 'back.Models.Domain.TokenResponse'.
][2023-11-03 01:32:37.038 +01:00 [INF] Executed action back.Controllers.UsersController.RefreshToken (back) in 4.9094ms
][2023-11-03 01:32:37.038 +01:00 [INF] Executed endpoint 'back.Controllers.UsersController.RefreshToken (back)'
][2023-11-03 01:32:37.039 +01:00 [INF] Request finished HTTP/2 POST https://localhost:7179/api/users/refreshtoken application/json 582 - 200 - application/json;+charset=utf-8 5.5934ms
][2023-11-03 01:32:37.046 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7179/api/products - -
][2023-11-03 01:32:37.047 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:32:37.047 +01:00 [INF] Bearer was not authenticated. Failure message: No SecurityTokenValidator available for token.
][2023-11-03 01:32:37.047 +01:00 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (user)
][2023-11-03 01:32:37.047 +01:00 [INF] AuthenticationScheme: Bearer was challenged.
][2023-11-03 01:32:37.047 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7179/api/products - - - 401 0 - 0.3894ms
][2023-11-03 01:32:39.040 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7179/api/blogposts - -
][2023-11-03 01:32:39.040 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:32:39.040 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7179/api/blogposts - - - 204 - - 0.2615ms
][2023-11-03 01:32:39.045 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7179/api/blogposts - -
][2023-11-03 01:32:39.045 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:32:39.045 +01:00 [INF] Executing endpoint 'back.Controllers.BlogPostsController.GetBlogPosts (back)'
][2023-11-03 01:32:39.045 +01:00 [INF] Route matched with {action = "GetBlogPosts", controller = "BlogPosts"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBlogPosts() on controller back.Controllers.BlogPostsController (back).
][2023-11-03 01:32:39.048 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT b."Id", b."Author", b."Content", b."FeaturedImageUrl", b."IsVisible", b."PublishedDate", b."ShortDescription", b."Title", b."UrlHandle"
FROM "BlogPosts" AS b
][2023-11-03 01:32:39.048 +01:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[back.Models.Domain.BlogPost, back, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
][2023-11-03 01:32:39.048 +01:00 [INF] Executed action back.Controllers.BlogPostsController.GetBlogPosts (back) in 3.1133ms
][2023-11-03 01:32:39.048 +01:00 [INF] Executed endpoint 'back.Controllers.BlogPostsController.GetBlogPosts (back)'
][2023-11-03 01:32:39.048 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7179/api/blogposts - - - 200 - application/json;+charset=utf-8 3.4809ms
][2023-11-03 01:32:40.044 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7179/api/products - -
][2023-11-03 01:32:40.044 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:32:40.045 +01:00 [INF] Executing endpoint 'back.Controllers.ProductsController.GetProducts (back)'
][2023-11-03 01:32:40.045 +01:00 [INF] Route matched with {action = "GetProducts", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProducts() on controller back.Controllers.ProductsController (back).
][2023-11-03 01:32:40.046 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Description", p."PublishedDate", p."Thumbnail", p."Title", p."Visibility"
FROM "Products" AS p
][2023-11-03 01:32:40.047 +01:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[back.Repositories.ProductEntity, back, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
][2023-11-03 01:32:40.047 +01:00 [INF] Executed action back.Controllers.ProductsController.GetProducts (back) in 1.9836ms
][2023-11-03 01:32:40.047 +01:00 [INF] Executed endpoint 'back.Controllers.ProductsController.GetProducts (back)'
][2023-11-03 01:32:40.047 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7179/api/products - - - 200 - application/json;+charset=utf-8 2.5866ms
][2023-11-03 01:32:47.434 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7179/api/products - -
][2023-11-03 01:32:47.434 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:32:47.434 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7179/api/products - - - 204 - - 0.2659ms
][2023-11-03 01:32:47.449 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7179/api/products - -
][2023-11-03 01:32:47.449 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:32:47.449 +01:00 [INF] Executing endpoint 'back.Controllers.ProductsController.GetProducts (back)'
][2023-11-03 01:32:47.449 +01:00 [INF] Route matched with {action = "GetProducts", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProducts() on controller back.Controllers.ProductsController (back).
][2023-11-03 01:32:47.451 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Description", p."PublishedDate", p."Thumbnail", p."Title", p."Visibility"
FROM "Products" AS p
][2023-11-03 01:32:47.451 +01:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[back.Repositories.ProductEntity, back, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
][2023-11-03 01:32:47.451 +01:00 [INF] Executed action back.Controllers.ProductsController.GetProducts (back) in 2.2717ms
][2023-11-03 01:32:47.451 +01:00 [INF] Executed endpoint 'back.Controllers.ProductsController.GetProducts (back)'
][2023-11-03 01:32:47.452 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7179/api/products - - - 200 - application/json;+charset=utf-8 2.8651ms
][2023-11-03 01:32:56.843 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7179/api/categories - -
][2023-11-03 01:32:56.843 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:32:56.843 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7179/api/categories - - - 204 - - 0.2082ms
][2023-11-03 01:32:56.858 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7179/api/categories - -
][2023-11-03 01:32:56.858 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:32:56.858 +01:00 [INF] Executing endpoint 'back.Controllers.CategoriesController.GetCategories (back)'
][2023-11-03 01:32:56.858 +01:00 [INF] Route matched with {action = "GetCategories", controller = "Categories"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCategories() on controller back.Controllers.CategoriesController (back).
][2023-11-03 01:32:56.859 +01:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c."Id", c."Name", c."UrlHandle"
FROM "Categories" AS c
][2023-11-03 01:32:56.859 +01:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[back.Models.Domain.Category, back, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
][2023-11-03 01:32:56.859 +01:00 [INF] Executed action back.Controllers.CategoriesController.GetCategories (back) in 1.6047ms
][2023-11-03 01:32:56.859 +01:00 [INF] Executed endpoint 'back.Controllers.CategoriesController.GetCategories (back)'
][2023-11-03 01:32:56.860 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7179/api/categories - - - 200 - application/json;+charset=utf-8 2.0362ms
][2023-11-03 01:32:59.251 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7179/api/blogposts - -
][2023-11-03 01:32:59.251 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:32:59.251 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7179/api/blogposts - - - 204 - - 0.1729ms
][2023-11-03 01:32:59.270 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7179/api/blogposts - -
][2023-11-03 01:32:59.271 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:32:59.271 +01:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/3/2023 12:32:57 AM', Current time (UTC): '11/3/2023 12:32:59 AM'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
][2023-11-03 01:32:59.271 +01:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/3/2023 12:32:57 AM', Current time (UTC): '11/3/2023 12:32:59 AM'.
][2023-11-03 01:32:59.271 +01:00 [INF] Executing endpoint 'back.Controllers.BlogPostsController.GetBlogPosts (back)'
][2023-11-03 01:32:59.271 +01:00 [INF] Route matched with {action = "GetBlogPosts", controller = "BlogPosts"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBlogPosts() on controller back.Controllers.BlogPostsController (back).
][2023-11-03 01:32:59.273 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT b."Id", b."Author", b."Content", b."FeaturedImageUrl", b."IsVisible", b."PublishedDate", b."ShortDescription", b."Title", b."UrlHandle"
FROM "BlogPosts" AS b
][2023-11-03 01:32:59.273 +01:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[back.Models.Domain.BlogPost, back, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
][2023-11-03 01:32:59.273 +01:00 [INF] Executed action back.Controllers.BlogPostsController.GetBlogPosts (back) in 1.874ms
][2023-11-03 01:32:59.273 +01:00 [INF] Executed endpoint 'back.Controllers.BlogPostsController.GetBlogPosts (back)'
][2023-11-03 01:32:59.273 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7179/api/blogposts - - - 200 - application/json;+charset=utf-8 2.6125ms
][2023-11-03 01:33:02.809 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7179/api/products - -
][2023-11-03 01:33:02.809 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:33:02.809 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7179/api/products - - - 204 - - 0.2278ms
][2023-11-03 01:33:02.818 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7179/api/products - -
][2023-11-03 01:33:02.819 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:33:02.819 +01:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/3/2023 12:32:57 AM', Current time (UTC): '11/3/2023 12:33:02 AM'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
][2023-11-03 01:33:02.819 +01:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/3/2023 12:32:57 AM', Current time (UTC): '11/3/2023 12:33:02 AM'.
][2023-11-03 01:33:02.819 +01:00 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (user)
][2023-11-03 01:33:02.819 +01:00 [INF] AuthenticationScheme: Bearer was challenged.
][2023-11-03 01:33:02.819 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7179/api/products - - - 401 0 - 0.7322ms
][2023-11-03 01:33:02.827 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7179/api/users/refreshtoken - -
][2023-11-03 01:33:02.827 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:33:02.827 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7179/api/users/refreshtoken - - - 204 - - 0.3259ms
][2023-11-03 01:33:02.829 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7179/api/users/refreshtoken - -
][2023-11-03 01:33:02.829 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:33:02.829 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7179/api/users/refreshtoken - - - 204 - - 0.1944ms
][2023-11-03 01:33:02.832 +01:00 [INF] Request starting HTTP/2 POST https://localhost:7179/api/users/refreshtoken application/json 582
][2023-11-03 01:33:02.832 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:33:02.832 +01:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/3/2023 12:32:57 AM', Current time (UTC): '11/3/2023 12:33:02 AM'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
][2023-11-03 01:33:02.833 +01:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/3/2023 12:32:57 AM', Current time (UTC): '11/3/2023 12:33:02 AM'.
][2023-11-03 01:33:02.833 +01:00 [INF] Executing endpoint 'back.Controllers.UsersController.RefreshToken (back)'
][2023-11-03 01:33:02.833 +01:00 [INF] Route matched with {action = "RefreshToken", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] RefreshToken(back.Models.Domain.TokenResponse) on controller back.Controllers.UsersController (back).
][2023-11-03 01:33:02.833 +01:00 [ERR] this is an ID: 0007ad25-f987-42a3-90bc-8430f299957f
][2023-11-03 01:33:02.834 +01:00 [INF] Request starting HTTP/2 POST https://localhost:7179/api/users/refreshtoken application/json 582
][2023-11-03 01:33:02.834 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:33:02.834 +01:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/3/2023 12:32:57 AM', Current time (UTC): '11/3/2023 12:33:02 AM'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
][2023-11-03 01:33:02.834 +01:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/3/2023 12:32:57 AM', Current time (UTC): '11/3/2023 12:33:02 AM'.
][2023-11-03 01:33:02.834 +01:00 [INF] Executing endpoint 'back.Controllers.UsersController.RefreshToken (back)'
][2023-11-03 01:33:02.834 +01:00 [INF] Route matched with {action = "RefreshToken", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] RefreshToken(back.Models.Domain.TokenResponse) on controller back.Controllers.UsersController (back).
][2023-11-03 01:33:02.835 +01:00 [ERR] this is an ID: 0007ad25-f987-42a3-90bc-8430f299957f
][2023-11-03 01:33:02.835 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Guid), @___tokenResponse_RefreshToken_1='?'], CommandType='"Text"', CommandTimeout='30']
SELECT r."Id", r."RToken", r."Status", r."UserId"
FROM "RefreshTokens" AS r
WHERE r."UserId" = @__id_0 AND r."RToken" = @___tokenResponse_RefreshToken_1
LIMIT 1
][2023-11-03 01:33:02.836 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Guid), @___tokenResponse_RefreshToken_1='?'], CommandType='"Text"', CommandTimeout='30']
SELECT r."Id", r."RToken", r."Status", r."UserId"
FROM "RefreshTokens" AS r
WHERE r."UserId" = @__id_0 AND r."RToken" = @___tokenResponse_RefreshToken_1
LIMIT 1
][2023-11-03 01:33:02.836 +01:00 [INF] Executed DbCommand (0ms) [Parameters=[@__get_Item_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT r."Id", r."RToken", r."Status", r."UserId"
FROM "RefreshTokens" AS r
WHERE r."Id" = @__get_Item_0
LIMIT 1
][2023-11-03 01:33:02.838 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[@__get_Item_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT r."Id", r."RToken", r."Status", r."UserId"
FROM "RefreshTokens" AS r
WHERE r."Id" = @__get_Item_0
LIMIT 1
][2023-11-03 01:33:02.838 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?', @p2='?' (DbType = Boolean), @p3='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "RefreshTokens" ("Id", "RToken", "Status", "UserId")
VALUES (@p0, @p1, @p2, @p3);
][2023-11-03 01:33:02.838 +01:00 [INF] Executing OkObjectResult, writing value of type 'back.Models.Domain.TokenResponse'.
][2023-11-03 01:33:02.838 +01:00 [INF] Executed action back.Controllers.UsersController.RefreshToken (back) in 5.3682ms
][2023-11-03 01:33:02.838 +01:00 [INF] Executed endpoint 'back.Controllers.UsersController.RefreshToken (back)'
][2023-11-03 01:33:02.838 +01:00 [INF] Request finished HTTP/2 POST https://localhost:7179/api/users/refreshtoken application/json 582 - 200 - application/json;+charset=utf-8 6.0437ms
][2023-11-03 01:33:02.839 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?', @p2='?' (DbType = Boolean), @p3='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "RefreshTokens" ("Id", "RToken", "Status", "UserId")
VALUES (@p0, @p1, @p2, @p3);
][2023-11-03 01:33:02.839 +01:00 [INF] Executing OkObjectResult, writing value of type 'back.Models.Domain.TokenResponse'.
][2023-11-03 01:33:02.839 +01:00 [INF] Executed action back.Controllers.UsersController.RefreshToken (back) in 5.1847ms
][2023-11-03 01:33:02.839 +01:00 [INF] Executed endpoint 'back.Controllers.UsersController.RefreshToken (back)'
][2023-11-03 01:33:02.839 +01:00 [INF] Request finished HTTP/2 POST https://localhost:7179/api/users/refreshtoken application/json 582 - 200 - application/json;+charset=utf-8 5.8828ms
][2023-11-03 01:33:02.848 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7179/api/products - -
][2023-11-03 01:33:02.849 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:33:02.849 +01:00 [INF] Bearer was not authenticated. Failure message: No SecurityTokenValidator available for token.
][2023-11-03 01:33:02.849 +01:00 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (user)
][2023-11-03 01:33:02.849 +01:00 [INF] AuthenticationScheme: Bearer was challenged.
][2023-11-03 01:33:02.849 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7179/api/products - - - 401 0 - 0.3246ms
][2023-11-03 01:33:10.337 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7179/api/blogposts - -
][2023-11-03 01:33:10.337 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:33:10.337 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7179/api/blogposts - - - 204 - - 0.1551ms
][2023-11-03 01:33:10.369 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7179/api/blogposts - -
][2023-11-03 01:33:10.369 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:33:10.369 +01:00 [INF] Executing endpoint 'back.Controllers.BlogPostsController.GetBlogPosts (back)'
][2023-11-03 01:33:10.369 +01:00 [INF] Route matched with {action = "GetBlogPosts", controller = "BlogPosts"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBlogPosts() on controller back.Controllers.BlogPostsController (back).
][2023-11-03 01:33:10.370 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT b."Id", b."Author", b."Content", b."FeaturedImageUrl", b."IsVisible", b."PublishedDate", b."ShortDescription", b."Title", b."UrlHandle"
FROM "BlogPosts" AS b
][2023-11-03 01:33:10.370 +01:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[back.Models.Domain.BlogPost, back, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
][2023-11-03 01:33:10.370 +01:00 [INF] Executed action back.Controllers.BlogPostsController.GetBlogPosts (back) in 1.1791ms
][2023-11-03 01:33:10.370 +01:00 [INF] Executed endpoint 'back.Controllers.BlogPostsController.GetBlogPosts (back)'
][2023-11-03 01:33:10.370 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7179/api/blogposts - - - 200 - application/json;+charset=utf-8 1.5744ms
][2023-11-03 01:33:11.894 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7179/api/products - -
][2023-11-03 01:33:11.894 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:33:11.894 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7179/api/products - - - 204 - - 0.2087ms
][2023-11-03 01:33:11.906 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7179/api/products - -
][2023-11-03 01:33:11.906 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:33:11.906 +01:00 [INF] Executing endpoint 'back.Controllers.ProductsController.GetProducts (back)'
][2023-11-03 01:33:11.906 +01:00 [INF] Route matched with {action = "GetProducts", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProducts() on controller back.Controllers.ProductsController (back).
][2023-11-03 01:33:11.907 +01:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Description", p."PublishedDate", p."Thumbnail", p."Title", p."Visibility"
FROM "Products" AS p
][2023-11-03 01:33:11.907 +01:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[back.Repositories.ProductEntity, back, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
][2023-11-03 01:33:11.907 +01:00 [INF] Executed action back.Controllers.ProductsController.GetProducts (back) in 1.26ms
][2023-11-03 01:33:11.907 +01:00 [INF] Executed endpoint 'back.Controllers.ProductsController.GetProducts (back)'
][2023-11-03 01:33:11.907 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7179/api/products - - - 200 - application/json;+charset=utf-8 1.7139ms
][2023-11-03 01:34:18.281 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7179/api/blogposts - -
][2023-11-03 01:34:18.281 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:34:18.281 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7179/api/blogposts - - - 204 - - 0.1872ms
][2023-11-03 01:34:18.291 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7179/api/blogposts - -
][2023-11-03 01:34:18.291 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:34:18.291 +01:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/3/2023 12:33:22 AM', Current time (UTC): '11/3/2023 12:34:18 AM'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
][2023-11-03 01:34:18.292 +01:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/3/2023 12:33:22 AM', Current time (UTC): '11/3/2023 12:34:18 AM'.
][2023-11-03 01:34:18.292 +01:00 [INF] Executing endpoint 'back.Controllers.BlogPostsController.GetBlogPosts (back)'
][2023-11-03 01:34:18.292 +01:00 [INF] Route matched with {action = "GetBlogPosts", controller = "BlogPosts"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBlogPosts() on controller back.Controllers.BlogPostsController (back).
][2023-11-03 01:34:18.293 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT b."Id", b."Author", b."Content", b."FeaturedImageUrl", b."IsVisible", b."PublishedDate", b."ShortDescription", b."Title", b."UrlHandle"
FROM "BlogPosts" AS b
][2023-11-03 01:34:18.293 +01:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[back.Models.Domain.BlogPost, back, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
][2023-11-03 01:34:18.293 +01:00 [INF] Executed action back.Controllers.BlogPostsController.GetBlogPosts (back) in 1.4565ms
][2023-11-03 01:34:18.293 +01:00 [INF] Executed endpoint 'back.Controllers.BlogPostsController.GetBlogPosts (back)'
][2023-11-03 01:34:18.293 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7179/api/blogposts - - - 200 - application/json;+charset=utf-8 2.3060ms
][2023-11-03 01:34:19.344 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7179/api/products - -
][2023-11-03 01:34:19.344 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:34:19.344 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7179/api/products - - - 204 - - 0.2162ms
][2023-11-03 01:34:19.354 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7179/api/products - -
][2023-11-03 01:34:19.354 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:34:19.354 +01:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/3/2023 12:33:22 AM', Current time (UTC): '11/3/2023 12:34:19 AM'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
][2023-11-03 01:34:19.354 +01:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/3/2023 12:33:22 AM', Current time (UTC): '11/3/2023 12:34:19 AM'.
][2023-11-03 01:34:19.355 +01:00 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (user)
][2023-11-03 01:34:19.355 +01:00 [INF] AuthenticationScheme: Bearer was challenged.
][2023-11-03 01:34:19.355 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7179/api/products - - - 401 0 - 0.5633ms
][2023-11-03 01:34:19.362 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7179/api/users/refreshtoken - -
][2023-11-03 01:34:19.362 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:34:19.362 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7179/api/users/refreshtoken - - - 204 - - 0.3283ms
][2023-11-03 01:34:19.364 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7179/api/users/refreshtoken - -
][2023-11-03 01:34:19.364 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:34:19.364 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7179/api/users/refreshtoken - - - 204 - - 0.1593ms
][2023-11-03 01:34:19.367 +01:00 [INF] Request starting HTTP/2 POST https://localhost:7179/api/users/refreshtoken application/json 582
][2023-11-03 01:34:19.367 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:34:19.367 +01:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/3/2023 12:33:22 AM', Current time (UTC): '11/3/2023 12:34:19 AM'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
][2023-11-03 01:34:19.367 +01:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/3/2023 12:33:22 AM', Current time (UTC): '11/3/2023 12:34:19 AM'.
][2023-11-03 01:34:19.367 +01:00 [INF] Executing endpoint 'back.Controllers.UsersController.RefreshToken (back)'
][2023-11-03 01:34:19.367 +01:00 [INF] Route matched with {action = "RefreshToken", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] RefreshToken(back.Models.Domain.TokenResponse) on controller back.Controllers.UsersController (back).
][2023-11-03 01:34:19.368 +01:00 [ERR] this is an ID: 0007ad25-f987-42a3-90bc-8430f299957f
][2023-11-03 01:34:19.368 +01:00 [INF] Request starting HTTP/2 POST https://localhost:7179/api/users/refreshtoken application/json 582
][2023-11-03 01:34:19.368 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:34:19.369 +01:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/3/2023 12:33:22 AM', Current time (UTC): '11/3/2023 12:34:19 AM'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
][2023-11-03 01:34:19.369 +01:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/3/2023 12:33:22 AM', Current time (UTC): '11/3/2023 12:34:19 AM'.
][2023-11-03 01:34:19.369 +01:00 [INF] Executing endpoint 'back.Controllers.UsersController.RefreshToken (back)'
][2023-11-03 01:34:19.369 +01:00 [INF] Route matched with {action = "RefreshToken", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] RefreshToken(back.Models.Domain.TokenResponse) on controller back.Controllers.UsersController (back).
][2023-11-03 01:34:19.369 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Guid), @___tokenResponse_RefreshToken_1='?'], CommandType='"Text"', CommandTimeout='30']
SELECT r."Id", r."RToken", r."Status", r."UserId"
FROM "RefreshTokens" AS r
WHERE r."UserId" = @__id_0 AND r."RToken" = @___tokenResponse_RefreshToken_1
LIMIT 1
][2023-11-03 01:34:19.370 +01:00 [ERR] this is an ID: 0007ad25-f987-42a3-90bc-8430f299957f
][2023-11-03 01:34:19.371 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Guid), @___tokenResponse_RefreshToken_1='?'], CommandType='"Text"', CommandTimeout='30']
SELECT r."Id", r."RToken", r."Status", r."UserId"
FROM "RefreshTokens" AS r
WHERE r."UserId" = @__id_0 AND r."RToken" = @___tokenResponse_RefreshToken_1
LIMIT 1
][2023-11-03 01:34:19.371 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[@__get_Item_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT r."Id", r."RToken", r."Status", r."UserId"
FROM "RefreshTokens" AS r
WHERE r."Id" = @__get_Item_0
LIMIT 1
][2023-11-03 01:34:19.372 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?', @p2='?' (DbType = Boolean), @p3='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "RefreshTokens" ("Id", "RToken", "Status", "UserId")
VALUES (@p0, @p1, @p2, @p3);
][2023-11-03 01:34:19.373 +01:00 [INF] Executing OkObjectResult, writing value of type 'back.Models.Domain.TokenResponse'.
][2023-11-03 01:34:19.373 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[@__get_Item_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT r."Id", r."RToken", r."Status", r."UserId"
FROM "RefreshTokens" AS r
WHERE r."Id" = @__get_Item_0
LIMIT 1
][2023-11-03 01:34:19.373 +01:00 [INF] Executed action back.Controllers.UsersController.RefreshToken (back) in 5.6966ms
][2023-11-03 01:34:19.373 +01:00 [INF] Executed endpoint 'back.Controllers.UsersController.RefreshToken (back)'
][2023-11-03 01:34:19.373 +01:00 [INF] Request finished HTTP/2 POST https://localhost:7179/api/users/refreshtoken application/json 582 - 200 - application/json;+charset=utf-8 6.3513ms
][2023-11-03 01:34:19.374 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?', @p2='?' (DbType = Boolean), @p3='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "RefreshTokens" ("Id", "RToken", "Status", "UserId")
VALUES (@p0, @p1, @p2, @p3);
][2023-11-03 01:34:19.374 +01:00 [INF] Executing OkObjectResult, writing value of type 'back.Models.Domain.TokenResponse'.
][2023-11-03 01:34:19.374 +01:00 [INF] Executed action back.Controllers.UsersController.RefreshToken (back) in 5.4627ms
][2023-11-03 01:34:19.374 +01:00 [INF] Executed endpoint 'back.Controllers.UsersController.RefreshToken (back)'
][2023-11-03 01:34:19.374 +01:00 [INF] Request finished HTTP/2 POST https://localhost:7179/api/users/refreshtoken application/json 582 - 200 - application/json;+charset=utf-8 6.2688ms
][2023-11-03 01:34:19.382 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7179/api/products - -
][2023-11-03 01:34:19.382 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:34:19.382 +01:00 [INF] Bearer was not authenticated. Failure message: No SecurityTokenValidator available for token.
][2023-11-03 01:34:19.382 +01:00 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (user)
][2023-11-03 01:34:19.382 +01:00 [INF] AuthenticationScheme: Bearer was challenged.
][2023-11-03 01:34:19.382 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7179/api/products - - - 401 0 - 0.3372ms
][2023-11-03 01:34:21.499 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7179/api/blogposts - -
][2023-11-03 01:34:21.500 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:34:21.500 +01:00 [INF] Executing endpoint 'back.Controllers.BlogPostsController.GetBlogPosts (back)'
][2023-11-03 01:34:21.500 +01:00 [INF] Route matched with {action = "GetBlogPosts", controller = "BlogPosts"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBlogPosts() on controller back.Controllers.BlogPostsController (back).
][2023-11-03 01:34:21.501 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT b."Id", b."Author", b."Content", b."FeaturedImageUrl", b."IsVisible", b."PublishedDate", b."ShortDescription", b."Title", b."UrlHandle"
FROM "BlogPosts" AS b
][2023-11-03 01:34:21.501 +01:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[back.Models.Domain.BlogPost, back, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
][2023-11-03 01:34:21.501 +01:00 [INF] Executed action back.Controllers.BlogPostsController.GetBlogPosts (back) in 1.3753ms
][2023-11-03 01:34:21.501 +01:00 [INF] Executed endpoint 'back.Controllers.BlogPostsController.GetBlogPosts (back)'
][2023-11-03 01:34:21.501 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7179/api/blogposts - - - 200 - application/json;+charset=utf-8 1.8778ms
][2023-11-03 01:34:22.622 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7179/api/products - -
][2023-11-03 01:34:22.622 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:34:22.622 +01:00 [INF] Executing endpoint 'back.Controllers.ProductsController.GetProducts (back)'
][2023-11-03 01:34:22.622 +01:00 [INF] Route matched with {action = "GetProducts", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProducts() on controller back.Controllers.ProductsController (back).
][2023-11-03 01:34:22.624 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Description", p."PublishedDate", p."Thumbnail", p."Title", p."Visibility"
FROM "Products" AS p
][2023-11-03 01:34:22.624 +01:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[back.Repositories.ProductEntity, back, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
][2023-11-03 01:34:22.624 +01:00 [INF] Executed action back.Controllers.ProductsController.GetProducts (back) in 1.5724ms
][2023-11-03 01:34:22.624 +01:00 [INF] Executed endpoint 'back.Controllers.ProductsController.GetProducts (back)'
][2023-11-03 01:34:22.624 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7179/api/products - - - 200 - application/json;+charset=utf-8 2.2263ms
][2023-11-03 01:37:10.745 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7179/api/products - -
][2023-11-03 01:37:10.745 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:37:10.745 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7179/api/products - - - 204 - - 0.7136ms
][2023-11-03 01:37:10.759 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7179/api/products - -
][2023-11-03 01:37:10.759 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:37:10.760 +01:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/3/2023 12:34:39 AM', Current time (UTC): '11/3/2023 12:37:10 AM'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
][2023-11-03 01:37:10.760 +01:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/3/2023 12:34:39 AM', Current time (UTC): '11/3/2023 12:37:10 AM'.
][2023-11-03 01:37:10.760 +01:00 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (user)
][2023-11-03 01:37:10.760 +01:00 [INF] AuthenticationScheme: Bearer was challenged.
][2023-11-03 01:37:10.760 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7179/api/products - - - 401 0 - 1.0584ms
][2023-11-03 01:37:10.870 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7179/api/users/refreshtoken - -
][2023-11-03 01:37:10.870 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:37:10.871 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7179/api/users/refreshtoken - - - 204 - - 0.1558ms
][2023-11-03 01:37:10.875 +01:00 [INF] Request starting HTTP/2 POST https://localhost:7179/api/users/refreshtoken application/json 582
][2023-11-03 01:37:10.876 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:37:10.876 +01:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/3/2023 12:34:39 AM', Current time (UTC): '11/3/2023 12:37:10 AM'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
][2023-11-03 01:37:10.876 +01:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/3/2023 12:34:39 AM', Current time (UTC): '11/3/2023 12:37:10 AM'.
][2023-11-03 01:37:10.876 +01:00 [INF] Executing endpoint 'back.Controllers.UsersController.RefreshToken (back)'
][2023-11-03 01:37:10.876 +01:00 [INF] Route matched with {action = "RefreshToken", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] RefreshToken(back.Models.Domain.TokenResponse) on controller back.Controllers.UsersController (back).
][2023-11-03 01:37:10.877 +01:00 [ERR] this is an ID: 0007ad25-f987-42a3-90bc-8430f299957f
][2023-11-03 01:37:10.929 +01:00 [INF] Executed DbCommand (3ms) [Parameters=[@__id_0='?' (DbType = Guid), @___tokenResponse_RefreshToken_1='?'], CommandType='"Text"', CommandTimeout='30']
SELECT r."Id", r."RToken", r."Status", r."UserId"
FROM "RefreshTokens" AS r
WHERE r."UserId" = @__id_0 AND r."RToken" = @___tokenResponse_RefreshToken_1
LIMIT 1
][2023-11-03 01:37:10.931 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[@__get_Item_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT r."Id", r."RToken", r."Status", r."UserId"
FROM "RefreshTokens" AS r
WHERE r."Id" = @__get_Item_0
LIMIT 1
][2023-11-03 01:37:10.933 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?', @p2='?' (DbType = Boolean), @p3='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "RefreshTokens" ("Id", "RToken", "Status", "UserId")
VALUES (@p0, @p1, @p2, @p3);
][2023-11-03 01:37:10.934 +01:00 [INF] Executing OkObjectResult, writing value of type 'back.Models.Domain.TokenResponse'.
][2023-11-03 01:37:10.934 +01:00 [INF] Executed action back.Controllers.UsersController.RefreshToken (back) in 57.4942ms
][2023-11-03 01:37:10.934 +01:00 [INF] Executed endpoint 'back.Controllers.UsersController.RefreshToken (back)'
][2023-11-03 01:37:10.934 +01:00 [INF] Request finished HTTP/2 POST https://localhost:7179/api/users/refreshtoken application/json 582 - 200 - application/json;+charset=utf-8 58.3663ms
][2023-11-03 01:37:10.943 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7179/api/products - -
][2023-11-03 01:37:10.943 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:37:10.943 +01:00 [INF] Bearer was not authenticated. Failure message: No SecurityTokenValidator available for token.
][2023-11-03 01:37:10.944 +01:00 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (user)
][2023-11-03 01:37:10.944 +01:00 [INF] AuthenticationScheme: Bearer was challenged.
][2023-11-03 01:37:10.944 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7179/api/products - - - 401 0 - 0.3149ms
][2023-11-03 01:37:12.543 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7179/api/products - -
][2023-11-03 01:37:12.543 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:37:12.544 +01:00 [INF] Executing endpoint 'back.Controllers.ProductsController.GetProducts (back)'
][2023-11-03 01:37:12.544 +01:00 [INF] Route matched with {action = "GetProducts", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProducts() on controller back.Controllers.ProductsController (back).
][2023-11-03 01:37:12.547 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Description", p."PublishedDate", p."Thumbnail", p."Title", p."Visibility"
FROM "Products" AS p
][2023-11-03 01:37:12.547 +01:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[back.Repositories.ProductEntity, back, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
][2023-11-03 01:37:12.547 +01:00 [INF] Executed action back.Controllers.ProductsController.GetProducts (back) in 3.29ms
][2023-11-03 01:37:12.547 +01:00 [INF] Executed endpoint 'back.Controllers.ProductsController.GetProducts (back)'
][2023-11-03 01:37:12.547 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7179/api/products - - - 200 - application/json;+charset=utf-8 3.8614ms
][2023-11-03 01:37:12.583 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7179/Uploads/Products/cba0382e-959f-4e99-a266-9257a0a63a95.jpg - -
][2023-11-03 01:37:12.583 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7179/Uploads/Products/c7a2cb23-9ac1-4967-890f-7d18e6997727.jpg - -
][2023-11-03 01:37:12.583 +01:00 [INF] The file /Uploads/Products/c7a2cb23-9ac1-4967-890f-7d18e6997727.jpg was not modified
][2023-11-03 01:37:12.583 +01:00 [INF] The file /Uploads/Products/cba0382e-959f-4e99-a266-9257a0a63a95.jpg was not modified
][2023-11-03 01:37:12.583 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7179/Uploads/Products/c7a2cb23-9ac1-4967-890f-7d18e6997727.jpg - - - 304 - image/jpeg 0.5330ms
][2023-11-03 01:37:12.584 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7179/Uploads/Products/cba0382e-959f-4e99-a266-9257a0a63a95.jpg - - - 304 - image/jpeg 1.8091ms
][2023-11-03 01:37:36.684 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7179/api/categories - -
][2023-11-03 01:37:36.684 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:37:36.684 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7179/api/categories - - - 204 - - 0.2793ms
][2023-11-03 01:37:36.690 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7179/api/categories - -
][2023-11-03 01:37:36.690 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:37:36.690 +01:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/3/2023 12:37:30 AM', Current time (UTC): '11/3/2023 12:37:36 AM'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
][2023-11-03 01:37:36.690 +01:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/3/2023 12:37:30 AM', Current time (UTC): '11/3/2023 12:37:36 AM'.
][2023-11-03 01:37:36.691 +01:00 [INF] Executing endpoint 'back.Controllers.CategoriesController.GetCategories (back)'
][2023-11-03 01:37:36.691 +01:00 [INF] Route matched with {action = "GetCategories", controller = "Categories"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCategories() on controller back.Controllers.CategoriesController (back).
][2023-11-03 01:37:36.695 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c."Id", c."Name", c."UrlHandle"
FROM "Categories" AS c
][2023-11-03 01:37:36.695 +01:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[back.Models.Domain.Category, back, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
][2023-11-03 01:37:36.695 +01:00 [INF] Executed action back.Controllers.CategoriesController.GetCategories (back) in 4.3522ms
][2023-11-03 01:37:36.695 +01:00 [INF] Executed endpoint 'back.Controllers.CategoriesController.GetCategories (back)'
][2023-11-03 01:37:36.695 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7179/api/categories - - - 200 - application/json;+charset=utf-8 5.3149ms
][2023-11-03 01:37:37.836 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7179/api/products - -
][2023-11-03 01:37:37.836 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:37:37.836 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7179/api/products - - - 204 - - 0.1746ms
][2023-11-03 01:37:37.847 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7179/api/products - -
][2023-11-03 01:37:37.847 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:37:37.847 +01:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/3/2023 12:37:30 AM', Current time (UTC): '11/3/2023 12:37:37 AM'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
][2023-11-03 01:37:37.847 +01:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/3/2023 12:37:30 AM', Current time (UTC): '11/3/2023 12:37:37 AM'.
][2023-11-03 01:37:37.847 +01:00 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (user)
][2023-11-03 01:37:37.847 +01:00 [INF] AuthenticationScheme: Bearer was challenged.
][2023-11-03 01:37:37.848 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7179/api/products - - - 401 0 - 0.6568ms
][2023-11-03 01:37:37.854 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7179/api/users/refreshtoken - -
][2023-11-03 01:37:37.855 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:37:37.855 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7179/api/users/refreshtoken - - - 204 - - 0.3123ms
][2023-11-03 01:37:37.859 +01:00 [INF] Request starting HTTP/2 POST https://localhost:7179/api/users/refreshtoken application/json 582
][2023-11-03 01:37:37.859 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:37:37.859 +01:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/3/2023 12:37:30 AM', Current time (UTC): '11/3/2023 12:37:37 AM'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
][2023-11-03 01:37:37.860 +01:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/3/2023 12:37:30 AM', Current time (UTC): '11/3/2023 12:37:37 AM'.
][2023-11-03 01:37:37.860 +01:00 [INF] Executing endpoint 'back.Controllers.UsersController.RefreshToken (back)'
][2023-11-03 01:37:37.860 +01:00 [INF] Route matched with {action = "RefreshToken", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] RefreshToken(back.Models.Domain.TokenResponse) on controller back.Controllers.UsersController (back).
][2023-11-03 01:37:37.860 +01:00 [ERR] this is an ID: 0007ad25-f987-42a3-90bc-8430f299957f
][2023-11-03 01:37:37.861 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Guid), @___tokenResponse_RefreshToken_1='?'], CommandType='"Text"', CommandTimeout='30']
SELECT r."Id", r."RToken", r."Status", r."UserId"
FROM "RefreshTokens" AS r
WHERE r."UserId" = @__id_0 AND r."RToken" = @___tokenResponse_RefreshToken_1
LIMIT 1
][2023-11-03 01:37:37.863 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[@__get_Item_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT r."Id", r."RToken", r."Status", r."UserId"
FROM "RefreshTokens" AS r
WHERE r."Id" = @__get_Item_0
LIMIT 1
][2023-11-03 01:37:37.870 +01:00 [INF] Executed DbCommand (6ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?', @p2='?' (DbType = Boolean), @p3='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "RefreshTokens" ("Id", "RToken", "Status", "UserId")
VALUES (@p0, @p1, @p2, @p3);
][2023-11-03 01:37:37.870 +01:00 [INF] Executing OkObjectResult, writing value of type 'back.Models.Domain.TokenResponse'.
][2023-11-03 01:37:37.870 +01:00 [INF] Executed action back.Controllers.UsersController.RefreshToken (back) in 10.4061ms
][2023-11-03 01:37:37.870 +01:00 [INF] Executed endpoint 'back.Controllers.UsersController.RefreshToken (back)'
][2023-11-03 01:37:37.870 +01:00 [INF] Request finished HTTP/2 POST https://localhost:7179/api/users/refreshtoken application/json 582 - 200 - application/json;+charset=utf-8 11.1521ms
][2023-11-03 01:37:37.876 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7179/api/products - -
][2023-11-03 01:37:37.877 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:37:37.877 +01:00 [INF] Bearer was not authenticated. Failure message: No SecurityTokenValidator available for token.
][2023-11-03 01:37:37.877 +01:00 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (user)
][2023-11-03 01:37:37.877 +01:00 [INF] AuthenticationScheme: Bearer was challenged.
][2023-11-03 01:37:37.877 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7179/api/products - - - 401 0 - 0.3081ms
][2023-11-03 01:37:39.335 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7179/api/products - -
][2023-11-03 01:37:39.335 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:37:39.335 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7179/api/products - - - 204 - - 0.2803ms
][2023-11-03 01:37:39.343 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7179/api/products - -
][2023-11-03 01:37:39.343 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:37:39.343 +01:00 [INF] Executing endpoint 'back.Controllers.ProductsController.GetProducts (back)'
][2023-11-03 01:37:39.343 +01:00 [INF] Route matched with {action = "GetProducts", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProducts() on controller back.Controllers.ProductsController (back).
][2023-11-03 01:37:39.345 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Description", p."PublishedDate", p."Thumbnail", p."Title", p."Visibility"
FROM "Products" AS p
][2023-11-03 01:37:39.345 +01:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[back.Repositories.ProductEntity, back, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
][2023-11-03 01:37:39.345 +01:00 [INF] Executed action back.Controllers.ProductsController.GetProducts (back) in 2.0036ms
][2023-11-03 01:37:39.345 +01:00 [INF] Executed endpoint 'back.Controllers.ProductsController.GetProducts (back)'
][2023-11-03 01:37:39.345 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7179/api/products - - - 200 - application/json;+charset=utf-8 2.8827ms
][2023-11-03 01:37:39.464 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7179/Uploads/Products/cba0382e-959f-4e99-a266-9257a0a63a95.jpg - -
][2023-11-03 01:37:39.469 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7179/Uploads/Products/c7a2cb23-9ac1-4967-890f-7d18e6997727.jpg - -
][2023-11-03 01:37:39.472 +01:00 [INF] Sending file. Request path: '/Uploads/Products/c7a2cb23-9ac1-4967-890f-7d18e6997727.jpg'. Physical path: 'C:\Users\melyo\Documents\github\melyonousi\dotnet-angular\dot-net\dotnet-angular-demo-03-use-wwwroot\back\wwwroot\Uploads\Products\c7a2cb23-9ac1-4967-890f-7d18e6997727.jpg'
][2023-11-03 01:37:39.472 +01:00 [INF] Sending file. Request path: '/Uploads/Products/cba0382e-959f-4e99-a266-9257a0a63a95.jpg'. Physical path: 'C:\Users\melyo\Documents\github\melyonousi\dotnet-angular\dot-net\dotnet-angular-demo-03-use-wwwroot\back\wwwroot\Uploads\Products\cba0382e-959f-4e99-a266-9257a0a63a95.jpg'
][2023-11-03 01:37:39.472 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7179/Uploads/Products/cba0382e-959f-4e99-a266-9257a0a63a95.jpg - - - 200 588937 image/jpeg 8.3690ms
][2023-11-03 01:37:39.472 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7179/Uploads/Products/c7a2cb23-9ac1-4967-890f-7d18e6997727.jpg - - - 200 289712 image/jpeg 2.7973ms
][2023-11-03 01:37:52.490 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7179/api/products - -
][2023-11-03 01:37:52.491 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:37:52.491 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7179/api/products - - - 204 - - 0.2657ms
][2023-11-03 01:37:52.504 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7179/api/products - -
][2023-11-03 01:37:52.504 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:37:52.504 +01:00 [INF] Executing endpoint 'back.Controllers.ProductsController.GetProducts (back)'
][2023-11-03 01:37:52.504 +01:00 [INF] Route matched with {action = "GetProducts", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProducts() on controller back.Controllers.ProductsController (back).
][2023-11-03 01:37:52.505 +01:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Description", p."PublishedDate", p."Thumbnail", p."Title", p."Visibility"
FROM "Products" AS p
][2023-11-03 01:37:52.506 +01:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[back.Repositories.ProductEntity, back, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
][2023-11-03 01:37:52.506 +01:00 [INF] Executed action back.Controllers.ProductsController.GetProducts (back) in 1.3401ms
][2023-11-03 01:37:52.506 +01:00 [INF] Executed endpoint 'back.Controllers.ProductsController.GetProducts (back)'
][2023-11-03 01:37:52.506 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7179/api/products - - - 200 - application/json;+charset=utf-8 1.7999ms
][2023-11-03 01:37:55.857 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7179/api/products - -
][2023-11-03 01:37:55.857 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:37:55.857 +01:00 [INF] Executing endpoint 'back.Controllers.ProductsController.GetProducts (back)'
][2023-11-03 01:37:55.857 +01:00 [INF] Route matched with {action = "GetProducts", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProducts() on controller back.Controllers.ProductsController (back).
][2023-11-03 01:37:55.860 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Description", p."PublishedDate", p."Thumbnail", p."Title", p."Visibility"
FROM "Products" AS p
][2023-11-03 01:37:55.860 +01:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[back.Repositories.ProductEntity, back, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
][2023-11-03 01:37:55.860 +01:00 [INF] Executed action back.Controllers.ProductsController.GetProducts (back) in 3.0489ms
][2023-11-03 01:37:55.860 +01:00 [INF] Executed endpoint 'back.Controllers.ProductsController.GetProducts (back)'
][2023-11-03 01:37:55.860 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7179/api/products - - - 200 - application/json;+charset=utf-8 3.7170ms
][2023-11-03 01:37:57.711 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7179/api/categories - -
][2023-11-03 01:37:57.711 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:37:57.711 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7179/api/categories - - - 204 - - 0.1991ms
][2023-11-03 01:37:57.730 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7179/api/categories - -
][2023-11-03 01:37:57.730 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:37:57.731 +01:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/3/2023 12:37:57 AM', Current time (UTC): '11/3/2023 12:37:57 AM'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
][2023-11-03 01:37:57.731 +01:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/3/2023 12:37:57 AM', Current time (UTC): '11/3/2023 12:37:57 AM'.
][2023-11-03 01:37:57.731 +01:00 [INF] Executing endpoint 'back.Controllers.CategoriesController.GetCategories (back)'
][2023-11-03 01:37:57.731 +01:00 [INF] Route matched with {action = "GetCategories", controller = "Categories"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCategories() on controller back.Controllers.CategoriesController (back).
][2023-11-03 01:37:57.732 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c."Id", c."Name", c."UrlHandle"
FROM "Categories" AS c
][2023-11-03 01:37:57.732 +01:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[back.Models.Domain.Category, back, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
][2023-11-03 01:37:57.733 +01:00 [INF] Executed action back.Controllers.CategoriesController.GetCategories (back) in 1.4621ms
][2023-11-03 01:37:57.733 +01:00 [INF] Executed endpoint 'back.Controllers.CategoriesController.GetCategories (back)'
][2023-11-03 01:37:57.733 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7179/api/categories - - - 200 - application/json;+charset=utf-8 2.4844ms
][2023-11-03 01:38:00.329 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7179/api/blogposts - -
][2023-11-03 01:38:00.329 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:38:00.329 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7179/api/blogposts - - - 204 - - 0.1878ms
][2023-11-03 01:38:00.333 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7179/api/blogposts - -
][2023-11-03 01:38:00.333 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:38:00.333 +01:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/3/2023 12:37:57 AM', Current time (UTC): '11/3/2023 12:38:00 AM'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
][2023-11-03 01:38:00.333 +01:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/3/2023 12:37:57 AM', Current time (UTC): '11/3/2023 12:38:00 AM'.
][2023-11-03 01:38:00.333 +01:00 [INF] Executing endpoint 'back.Controllers.BlogPostsController.GetBlogPosts (back)'
][2023-11-03 01:38:00.333 +01:00 [INF] Route matched with {action = "GetBlogPosts", controller = "BlogPosts"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBlogPosts() on controller back.Controllers.BlogPostsController (back).
][2023-11-03 01:38:00.336 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT b."Id", b."Author", b."Content", b."FeaturedImageUrl", b."IsVisible", b."PublishedDate", b."ShortDescription", b."Title", b."UrlHandle"
FROM "BlogPosts" AS b
][2023-11-03 01:38:00.336 +01:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[back.Models.Domain.BlogPost, back, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
][2023-11-03 01:38:00.336 +01:00 [INF] Executed action back.Controllers.BlogPostsController.GetBlogPosts (back) in 2.6936ms
][2023-11-03 01:38:00.336 +01:00 [INF] Executed endpoint 'back.Controllers.BlogPostsController.GetBlogPosts (back)'
][2023-11-03 01:38:00.336 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7179/api/blogposts - - - 200 - application/json;+charset=utf-8 3.4936ms
][2023-11-03 01:38:02.385 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7179/api/products - -
][2023-11-03 01:38:02.385 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:38:02.385 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7179/api/products - - - 204 - - 0.1785ms
][2023-11-03 01:38:02.396 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7179/api/products - -
][2023-11-03 01:38:02.396 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:38:02.396 +01:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/3/2023 12:37:57 AM', Current time (UTC): '11/3/2023 12:38:02 AM'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
][2023-11-03 01:38:02.396 +01:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/3/2023 12:37:57 AM', Current time (UTC): '11/3/2023 12:38:02 AM'.
][2023-11-03 01:38:02.396 +01:00 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (user)
][2023-11-03 01:38:02.396 +01:00 [INF] AuthenticationScheme: Bearer was challenged.
][2023-11-03 01:38:02.397 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7179/api/products - - - 401 0 - 0.6592ms
][2023-11-03 01:38:02.403 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7179/api/users/refreshtoken - -
][2023-11-03 01:38:02.403 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:38:02.403 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7179/api/users/refreshtoken - - - 204 - - 0.1348ms
][2023-11-03 01:38:02.406 +01:00 [INF] Request starting HTTP/2 POST https://localhost:7179/api/users/refreshtoken application/json 582
][2023-11-03 01:38:02.406 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:38:02.406 +01:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/3/2023 12:37:57 AM', Current time (UTC): '11/3/2023 12:38:02 AM'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
][2023-11-03 01:38:02.407 +01:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/3/2023 12:37:57 AM', Current time (UTC): '11/3/2023 12:38:02 AM'.
][2023-11-03 01:38:02.407 +01:00 [INF] Executing endpoint 'back.Controllers.UsersController.RefreshToken (back)'
][2023-11-03 01:38:02.407 +01:00 [INF] Route matched with {action = "RefreshToken", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] RefreshToken(back.Models.Domain.TokenResponse) on controller back.Controllers.UsersController (back).
][2023-11-03 01:38:02.408 +01:00 [ERR] this is an ID: 0007ad25-f987-42a3-90bc-8430f299957f
][2023-11-03 01:38:02.409 +01:00 [INF] Executed DbCommand (0ms) [Parameters=[@__id_0='?' (DbType = Guid), @___tokenResponse_RefreshToken_1='?'], CommandType='"Text"', CommandTimeout='30']
SELECT r."Id", r."RToken", r."Status", r."UserId"
FROM "RefreshTokens" AS r
WHERE r."UserId" = @__id_0 AND r."RToken" = @___tokenResponse_RefreshToken_1
LIMIT 1
][2023-11-03 01:38:02.411 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[@__get_Item_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT r."Id", r."RToken", r."Status", r."UserId"
FROM "RefreshTokens" AS r
WHERE r."Id" = @__get_Item_0
LIMIT 1
][2023-11-03 01:38:02.416 +01:00 [INF] Executed DbCommand (5ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?', @p2='?' (DbType = Boolean), @p3='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "RefreshTokens" ("Id", "RToken", "Status", "UserId")
VALUES (@p0, @p1, @p2, @p3);
][2023-11-03 01:38:02.416 +01:00 [INF] Executing OkObjectResult, writing value of type 'back.Models.Domain.TokenResponse'.
][2023-11-03 01:38:02.416 +01:00 [INF] Executed action back.Controllers.UsersController.RefreshToken (back) in 9.2653ms
][2023-11-03 01:38:02.416 +01:00 [INF] Executed endpoint 'back.Controllers.UsersController.RefreshToken (back)'
][2023-11-03 01:38:02.416 +01:00 [INF] Request finished HTTP/2 POST https://localhost:7179/api/users/refreshtoken application/json 582 - 200 - application/json;+charset=utf-8 10.0598ms
][2023-11-03 01:38:02.423 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7179/api/products - -
][2023-11-03 01:38:02.423 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:38:02.423 +01:00 [INF] Bearer was not authenticated. Failure message: No SecurityTokenValidator available for token.
][2023-11-03 01:38:02.423 +01:00 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (user)
][2023-11-03 01:38:02.423 +01:00 [INF] AuthenticationScheme: Bearer was challenged.
][2023-11-03 01:38:02.423 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7179/api/products - - - 401 0 - 0.3545ms
][2023-11-03 01:38:08.149 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7179/api/blogposts - -
][2023-11-03 01:38:08.149 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:38:08.149 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7179/api/blogposts - - - 204 - - 0.2580ms
][2023-11-03 01:38:08.168 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7179/api/blogposts - -
][2023-11-03 01:38:08.168 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:38:08.168 +01:00 [INF] Executing endpoint 'back.Controllers.BlogPostsController.GetBlogPosts (back)'
][2023-11-03 01:38:08.168 +01:00 [INF] Route matched with {action = "GetBlogPosts", controller = "BlogPosts"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBlogPosts() on controller back.Controllers.BlogPostsController (back).
][2023-11-03 01:38:08.169 +01:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT b."Id", b."Author", b."Content", b."FeaturedImageUrl", b."IsVisible", b."PublishedDate", b."ShortDescription", b."Title", b."UrlHandle"
FROM "BlogPosts" AS b
][2023-11-03 01:38:08.169 +01:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[back.Models.Domain.BlogPost, back, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
][2023-11-03 01:38:08.169 +01:00 [INF] Executed action back.Controllers.BlogPostsController.GetBlogPosts (back) in 0.9944ms
][2023-11-03 01:38:08.169 +01:00 [INF] Executed endpoint 'back.Controllers.BlogPostsController.GetBlogPosts (back)'
][2023-11-03 01:38:08.169 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7179/api/blogposts - - - 200 - application/json;+charset=utf-8 1.3760ms
][2023-11-03 01:38:09.165 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7179/api/products - -
][2023-11-03 01:38:09.165 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:38:09.165 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7179/api/products - - - 204 - - 0.2115ms
][2023-11-03 01:38:09.174 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7179/api/products - -
][2023-11-03 01:38:09.174 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:38:09.175 +01:00 [INF] Executing endpoint 'back.Controllers.ProductsController.GetProducts (back)'
][2023-11-03 01:38:09.175 +01:00 [INF] Route matched with {action = "GetProducts", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProducts() on controller back.Controllers.ProductsController (back).
][2023-11-03 01:38:09.176 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Description", p."PublishedDate", p."Thumbnail", p."Title", p."Visibility"
FROM "Products" AS p
][2023-11-03 01:38:09.176 +01:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[back.Repositories.ProductEntity, back, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
][2023-11-03 01:38:09.176 +01:00 [INF] Executed action back.Controllers.ProductsController.GetProducts (back) in 1.5124ms
][2023-11-03 01:38:09.176 +01:00 [INF] Executed endpoint 'back.Controllers.ProductsController.GetProducts (back)'
][2023-11-03 01:38:09.176 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7179/api/products - - - 200 - application/json;+charset=utf-8 2.1629ms
][2023-11-03 01:38:12.874 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7179/api/products - -
][2023-11-03 01:38:12.874 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:38:12.875 +01:00 [INF] Executing endpoint 'back.Controllers.ProductsController.GetProducts (back)'
][2023-11-03 01:38:12.875 +01:00 [INF] Route matched with {action = "GetProducts", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProducts() on controller back.Controllers.ProductsController (back).
][2023-11-03 01:38:12.876 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Description", p."PublishedDate", p."Thumbnail", p."Title", p."Visibility"
FROM "Products" AS p
][2023-11-03 01:38:12.876 +01:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[back.Repositories.ProductEntity, back, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
][2023-11-03 01:38:12.877 +01:00 [INF] Executed action back.Controllers.ProductsController.GetProducts (back) in 1.5222ms
][2023-11-03 01:38:12.877 +01:00 [INF] Executed endpoint 'back.Controllers.ProductsController.GetProducts (back)'
][2023-11-03 01:38:12.877 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7179/api/products - - - 200 - application/json;+charset=utf-8 2.4238ms
][2023-11-03 01:38:16.593 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7179/api/blogposts - -
][2023-11-03 01:38:16.593 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:38:16.593 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7179/api/blogposts - - - 204 - - 0.2071ms
][2023-11-03 01:38:16.605 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7179/api/blogposts - -
][2023-11-03 01:38:16.605 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:38:16.605 +01:00 [INF] Executing endpoint 'back.Controllers.BlogPostsController.GetBlogPosts (back)'
][2023-11-03 01:38:16.605 +01:00 [INF] Route matched with {action = "GetBlogPosts", controller = "BlogPosts"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBlogPosts() on controller back.Controllers.BlogPostsController (back).
][2023-11-03 01:38:16.606 +01:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT b."Id", b."Author", b."Content", b."FeaturedImageUrl", b."IsVisible", b."PublishedDate", b."ShortDescription", b."Title", b."UrlHandle"
FROM "BlogPosts" AS b
][2023-11-03 01:38:16.607 +01:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[back.Models.Domain.BlogPost, back, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
][2023-11-03 01:38:16.607 +01:00 [INF] Executed action back.Controllers.BlogPostsController.GetBlogPosts (back) in 1.1831ms
][2023-11-03 01:38:16.607 +01:00 [INF] Executed endpoint 'back.Controllers.BlogPostsController.GetBlogPosts (back)'
][2023-11-03 01:38:16.607 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7179/api/blogposts - - - 200 - application/json;+charset=utf-8 1.5699ms
][2023-11-03 01:38:18.277 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7179/api/categories - -
][2023-11-03 01:38:18.277 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:38:18.277 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7179/api/categories - - - 204 - - 0.2928ms
][2023-11-03 01:38:18.287 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7179/api/categories - -
][2023-11-03 01:38:18.287 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:38:18.287 +01:00 [INF] Executing endpoint 'back.Controllers.CategoriesController.GetCategories (back)'
][2023-11-03 01:38:18.287 +01:00 [INF] Route matched with {action = "GetCategories", controller = "Categories"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCategories() on controller back.Controllers.CategoriesController (back).
][2023-11-03 01:38:18.288 +01:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c."Id", c."Name", c."UrlHandle"
FROM "Categories" AS c
][2023-11-03 01:38:18.289 +01:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[back.Models.Domain.Category, back, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
][2023-11-03 01:38:18.289 +01:00 [INF] Executed action back.Controllers.CategoriesController.GetCategories (back) in 1.2361ms
][2023-11-03 01:38:18.289 +01:00 [INF] Executed endpoint 'back.Controllers.CategoriesController.GetCategories (back)'
][2023-11-03 01:38:18.289 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7179/api/categories - - - 200 - application/json;+charset=utf-8 1.6567ms
][2023-11-03 01:38:26.953 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7179/api/products - -
][2023-11-03 01:38:26.953 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:38:26.953 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7179/api/products - - - 204 - - 0.2095ms
][2023-11-03 01:38:26.967 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7179/api/products - -
][2023-11-03 01:38:26.968 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:38:26.968 +01:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/3/2023 12:38:22 AM', Current time (UTC): '11/3/2023 12:38:26 AM'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
][2023-11-03 01:38:26.968 +01:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/3/2023 12:38:22 AM', Current time (UTC): '11/3/2023 12:38:26 AM'.
][2023-11-03 01:38:26.968 +01:00 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (user)
][2023-11-03 01:38:26.968 +01:00 [INF] AuthenticationScheme: Bearer was challenged.
][2023-11-03 01:38:26.968 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7179/api/products - - - 401 0 - 0.7503ms
][2023-11-03 01:38:26.975 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7179/api/users/refreshtoken - -
][2023-11-03 01:38:26.975 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:38:26.975 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7179/api/users/refreshtoken - - - 204 - - 0.1895ms
][2023-11-03 01:38:26.979 +01:00 [INF] Request starting HTTP/2 POST https://localhost:7179/api/users/refreshtoken application/json 582
][2023-11-03 01:38:26.979 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:38:26.979 +01:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/3/2023 12:38:22 AM', Current time (UTC): '11/3/2023 12:38:26 AM'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
][2023-11-03 01:38:26.979 +01:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/3/2023 12:38:22 AM', Current time (UTC): '11/3/2023 12:38:26 AM'.
][2023-11-03 01:38:26.980 +01:00 [INF] Executing endpoint 'back.Controllers.UsersController.RefreshToken (back)'
][2023-11-03 01:38:26.980 +01:00 [INF] Route matched with {action = "RefreshToken", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] RefreshToken(back.Models.Domain.TokenResponse) on controller back.Controllers.UsersController (back).
][2023-11-03 01:38:26.981 +01:00 [ERR] this is an ID: 0007ad25-f987-42a3-90bc-8430f299957f
][2023-11-03 01:38:26.982 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Guid), @___tokenResponse_RefreshToken_1='?'], CommandType='"Text"', CommandTimeout='30']
SELECT r."Id", r."RToken", r."Status", r."UserId"
FROM "RefreshTokens" AS r
WHERE r."UserId" = @__id_0 AND r."RToken" = @___tokenResponse_RefreshToken_1
LIMIT 1
][2023-11-03 01:38:26.983 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[@__get_Item_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT r."Id", r."RToken", r."Status", r."UserId"
FROM "RefreshTokens" AS r
WHERE r."Id" = @__get_Item_0
LIMIT 1
][2023-11-03 01:38:26.985 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?', @p2='?' (DbType = Boolean), @p3='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "RefreshTokens" ("Id", "RToken", "Status", "UserId")
VALUES (@p0, @p1, @p2, @p3);
][2023-11-03 01:38:26.985 +01:00 [INF] Executing OkObjectResult, writing value of type 'back.Models.Domain.TokenResponse'.
][2023-11-03 01:38:26.985 +01:00 [INF] Executed action back.Controllers.UsersController.RefreshToken (back) in 5.3135ms
][2023-11-03 01:38:26.985 +01:00 [INF] Executed endpoint 'back.Controllers.UsersController.RefreshToken (back)'
][2023-11-03 01:38:26.985 +01:00 [INF] Request finished HTTP/2 POST https://localhost:7179/api/users/refreshtoken application/json 582 - 200 - application/json;+charset=utf-8 6.0339ms
][2023-11-03 01:38:26.991 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7179/api/products - -
][2023-11-03 01:38:26.991 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:38:26.991 +01:00 [INF] Bearer was not authenticated. Failure message: No SecurityTokenValidator available for token.
][2023-11-03 01:38:26.992 +01:00 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (user)
][2023-11-03 01:38:26.992 +01:00 [INF] AuthenticationScheme: Bearer was challenged.
][2023-11-03 01:38:26.992 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7179/api/products - - - 401 0 - 0.4473ms
][2023-11-03 01:40:19.345 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7179/api/products - -
][2023-11-03 01:40:19.346 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:40:19.346 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7179/api/products - - - 204 - - 0.2848ms
][2023-11-03 01:40:19.351 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7179/api/products - -
][2023-11-03 01:40:19.352 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:40:19.352 +01:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/3/2023 12:38:46 AM', Current time (UTC): '11/3/2023 12:40:19 AM'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
][2023-11-03 01:40:19.352 +01:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/3/2023 12:38:46 AM', Current time (UTC): '11/3/2023 12:40:19 AM'.
][2023-11-03 01:40:19.352 +01:00 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (user)
][2023-11-03 01:40:19.352 +01:00 [INF] AuthenticationScheme: Bearer was challenged.
][2023-11-03 01:40:19.352 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7179/api/products - - - 401 0 - 0.9234ms
][2023-11-03 01:40:19.376 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7179/api/users/refreshtoken - -
][2023-11-03 01:40:19.376 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:40:19.377 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7179/api/users/refreshtoken - - - 204 - - 0.2848ms
][2023-11-03 01:40:19.381 +01:00 [INF] Request starting HTTP/2 POST https://localhost:7179/api/users/refreshtoken application/json 582
][2023-11-03 01:40:19.382 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:40:19.382 +01:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/3/2023 12:38:46 AM', Current time (UTC): '11/3/2023 12:40:19 AM'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
][2023-11-03 01:40:19.382 +01:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/3/2023 12:38:46 AM', Current time (UTC): '11/3/2023 12:40:19 AM'.
][2023-11-03 01:40:19.382 +01:00 [INF] Executing endpoint 'back.Controllers.UsersController.RefreshToken (back)'
][2023-11-03 01:40:19.382 +01:00 [INF] Route matched with {action = "RefreshToken", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] RefreshToken(back.Models.Domain.TokenResponse) on controller back.Controllers.UsersController (back).
][2023-11-03 01:40:19.383 +01:00 [ERR] this is an ID: 0007ad25-f987-42a3-90bc-8430f299957f
][2023-11-03 01:40:19.385 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Guid), @___tokenResponse_RefreshToken_1='?'], CommandType='"Text"', CommandTimeout='30']
SELECT r."Id", r."RToken", r."Status", r."UserId"
FROM "RefreshTokens" AS r
WHERE r."UserId" = @__id_0 AND r."RToken" = @___tokenResponse_RefreshToken_1
LIMIT 1
][2023-11-03 01:40:19.387 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[@__get_Item_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT r."Id", r."RToken", r."Status", r."UserId"
FROM "RefreshTokens" AS r
WHERE r."Id" = @__get_Item_0
LIMIT 1
][2023-11-03 01:40:19.393 +01:00 [INF] Executed DbCommand (6ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?', @p2='?' (DbType = Boolean), @p3='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "RefreshTokens" ("Id", "RToken", "Status", "UserId")
VALUES (@p0, @p1, @p2, @p3);
][2023-11-03 01:40:19.394 +01:00 [INF] Executing OkObjectResult, writing value of type 'back.Models.Domain.TokenResponse'.
][2023-11-03 01:40:19.394 +01:00 [INF] Executed action back.Controllers.UsersController.RefreshToken (back) in 11.7275ms
][2023-11-03 01:40:19.394 +01:00 [INF] Executed endpoint 'back.Controllers.UsersController.RefreshToken (back)'
][2023-11-03 01:40:19.394 +01:00 [INF] Request finished HTTP/2 POST https://localhost:7179/api/users/refreshtoken application/json 582 - 200 - application/json;+charset=utf-8 12.5299ms
][2023-11-03 01:40:19.498 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7179/api/products - -
][2023-11-03 01:40:19.498 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:40:19.498 +01:00 [INF] Bearer was not authenticated. Failure message: No SecurityTokenValidator available for token.
][2023-11-03 01:40:19.498 +01:00 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (user)
][2023-11-03 01:40:19.498 +01:00 [INF] AuthenticationScheme: Bearer was challenged.
][2023-11-03 01:40:19.498 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7179/api/products - - - 401 0 - 0.2689ms
][2023-11-03 01:40:57.425 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7179/api/products - -
][2023-11-03 01:40:57.425 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:40:57.426 +01:00 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (user)
][2023-11-03 01:40:57.426 +01:00 [INF] AuthenticationScheme: Bearer was challenged.
][2023-11-03 01:40:57.426 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7179/api/products - - - 401 0 - 0.3635ms
][2023-11-03 01:40:57.507 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7179/api/users/refreshtoken - -
][2023-11-03 01:40:57.507 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:40:57.507 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7179/api/users/refreshtoken - - - 204 - - 0.1656ms
][2023-11-03 01:40:57.511 +01:00 [INF] Request starting HTTP/2 POST https://localhost:7179/api/users/refreshtoken application/json 37
][2023-11-03 01:40:57.511 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:40:57.511 +01:00 [INF] Executing endpoint 'back.Controllers.UsersController.RefreshToken (back)'
][2023-11-03 01:40:57.512 +01:00 [INF] Route matched with {action = "RefreshToken", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] RefreshToken(back.Models.Domain.TokenResponse) on controller back.Controllers.UsersController (back).
][2023-11-03 01:40:57.514 +01:00 [INF] Executed action back.Controllers.UsersController.RefreshToken (back) in 2.2679ms
][2023-11-03 01:40:57.514 +01:00 [INF] Executed endpoint 'back.Controllers.UsersController.RefreshToken (back)'
][2023-11-03 01:40:57.516 +01:00 [ERR] An unhandled exception has occurred while executing the request.
System.ArgumentNullException: IDX10000: The parameter 'token' cannot be a 'null' or an empty object.  (Parameter 'token')
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at back.Repositories.Implementation.UserRespository.RefresshToken(TokenResponse _tokenResponse) in C:\Users\melyo\Documents\github\melyonousi\dotnet-angular\dot-net\dotnet-angular-demo-03-use-wwwroot\back\Repositories\Implementation\UserRespository.cs:line 105
   at back.Controllers.UsersController.RefreshToken(TokenResponse _tokenResponse) in C:\Users\melyo\Documents\github\melyonousi\dotnet-angular\dot-net\dotnet-angular-demo-03-use-wwwroot\back\Controllers\UsersController.cs:line 41
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
][2023-11-03 01:40:57.518 +01:00 [INF] Request finished HTTP/2 POST https://localhost:7179/api/users/refreshtoken application/json 37 - 500 - text/plain;+charset=utf-8 6.4010ms
][2023-11-03 01:41:08.363 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7179/api/users/login - -
][2023-11-03 01:41:08.363 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:41:08.364 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7179/api/users/login - - - 204 - - 0.2359ms
][2023-11-03 01:41:08.367 +01:00 [INF] Request starting HTTP/2 POST https://localhost:7179/api/users/login application/json 94
][2023-11-03 01:41:08.367 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:41:08.367 +01:00 [INF] Executing endpoint 'back.Controllers.UsersController.Authenticate (back)'
][2023-11-03 01:41:08.367 +01:00 [INF] Route matched with {action = "Authenticate", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Authenticate(back.Models.Domain.UserCredentials) on controller back.Controllers.UsersController (back).
][2023-11-03 01:41:08.372 +01:00 [INF] Executed DbCommand (4ms) [Parameters=[@___user_Email_0='?', @___user_Password_1='?'], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Avatar", t."Credentials", t."Email", t."Name", t."Password", t."RoleId", t."Token", t0."Id", t0."RoleKey", t0."RoleName"
FROM (
    SELECT u."Id", u."Avatar", u."Credentials", u."Email", u."Name", u."Password", u."RoleId", u."Token"
    FROM "Users" AS u
    WHERE u."Email" = @___user_Email_0 AND u."Password" = @___user_Password_1
    LIMIT 1
) AS t
LEFT JOIN (
    SELECT t1."Id", t1."RoleKey", t1."RoleName"
    FROM (
        SELECT r."Id", r."RoleKey", r."RoleName", ROW_NUMBER() OVER(PARTITION BY r."Id" ORDER BY r."Id") AS row
        FROM "Roles" AS r
    ) AS t1
    WHERE t1.row <= 1
) AS t0 ON t."RoleId" = t0."Id"
][2023-11-03 01:41:08.374 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[@__get_Item_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT r."Id", r."RToken", r."Status", r."UserId"
FROM "RefreshTokens" AS r
WHERE r."Id" = @__get_Item_0
LIMIT 1
][2023-11-03 01:41:08.375 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?', @p2='?' (DbType = Boolean), @p3='?' (DbType = Guid), @p5='?' (DbType = Guid), @p4='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "RefreshTokens" ("Id", "RToken", "Status", "UserId")
VALUES (@p0, @p1, @p2, @p3);
UPDATE "Users" SET "Token" = @p4
WHERE "Id" = @p5;
][2023-11-03 01:41:08.375 +01:00 [INF] Executing OkObjectResult, writing value of type 'back.Models.Domain.TokenResponse'.
][2023-11-03 01:41:08.375 +01:00 [INF] Executed action back.Controllers.UsersController.Authenticate (back) in 8.5384ms
][2023-11-03 01:41:08.375 +01:00 [INF] Executed endpoint 'back.Controllers.UsersController.Authenticate (back)'
][2023-11-03 01:41:08.375 +01:00 [INF] Request finished HTTP/2 POST https://localhost:7179/api/users/login application/json 94 - 200 - application/json;+charset=utf-8 8.8105ms
][2023-11-03 01:41:10.322 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7179/api/products - -
][2023-11-03 01:41:10.323 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:41:10.323 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7179/api/products - - - 204 - - 0.1637ms
][2023-11-03 01:41:10.326 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7179/api/products - -
][2023-11-03 01:41:10.326 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:41:10.326 +01:00 [INF] Executing endpoint 'back.Controllers.ProductsController.GetProducts (back)'
][2023-11-03 01:41:10.327 +01:00 [INF] Route matched with {action = "GetProducts", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProducts() on controller back.Controllers.ProductsController (back).
][2023-11-03 01:41:10.328 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Description", p."PublishedDate", p."Thumbnail", p."Title", p."Visibility"
FROM "Products" AS p
][2023-11-03 01:41:10.328 +01:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[back.Repositories.ProductEntity, back, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
][2023-11-03 01:41:10.328 +01:00 [INF] Executed action back.Controllers.ProductsController.GetProducts (back) in 1.3591ms
][2023-11-03 01:41:10.328 +01:00 [INF] Executed endpoint 'back.Controllers.ProductsController.GetProducts (back)'
][2023-11-03 01:41:10.328 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7179/api/products - - - 200 - application/json;+charset=utf-8 1.9648ms
][2023-11-03 01:41:27.196 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7179/api/products - -
][2023-11-03 01:41:27.197 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:41:27.198 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7179/api/products - - - 204 - - 2.3639ms
][2023-11-03 01:41:27.208 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7179/api/products - -
][2023-11-03 01:41:27.208 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:41:27.209 +01:00 [INF] Executing endpoint 'back.Controllers.ProductsController.GetProducts (back)'
][2023-11-03 01:41:27.209 +01:00 [INF] Route matched with {action = "GetProducts", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProducts() on controller back.Controllers.ProductsController (back).
][2023-11-03 01:41:27.210 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Description", p."PublishedDate", p."Thumbnail", p."Title", p."Visibility"
FROM "Products" AS p
][2023-11-03 01:41:27.210 +01:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[back.Repositories.ProductEntity, back, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
][2023-11-03 01:41:27.210 +01:00 [INF] Executed action back.Controllers.ProductsController.GetProducts (back) in 1.7891ms
][2023-11-03 01:41:27.210 +01:00 [INF] Executed endpoint 'back.Controllers.ProductsController.GetProducts (back)'
][2023-11-03 01:41:27.211 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7179/api/products - - - 200 - application/json;+charset=utf-8 2.3170ms
][2023-11-03 01:41:30.378 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7179/api/blogposts - -
][2023-11-03 01:41:30.378 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:41:30.379 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7179/api/blogposts - - - 204 - - 0.2015ms
][2023-11-03 01:41:30.397 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7179/api/blogposts - -
][2023-11-03 01:41:30.398 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:41:30.398 +01:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/3/2023 12:41:28 AM', Current time (UTC): '11/3/2023 12:41:30 AM'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
][2023-11-03 01:41:30.398 +01:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/3/2023 12:41:28 AM', Current time (UTC): '11/3/2023 12:41:30 AM'.
][2023-11-03 01:41:30.398 +01:00 [INF] Executing endpoint 'back.Controllers.BlogPostsController.GetBlogPosts (back)'
][2023-11-03 01:41:30.398 +01:00 [INF] Route matched with {action = "GetBlogPosts", controller = "BlogPosts"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBlogPosts() on controller back.Controllers.BlogPostsController (back).
][2023-11-03 01:41:30.399 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT b."Id", b."Author", b."Content", b."FeaturedImageUrl", b."IsVisible", b."PublishedDate", b."ShortDescription", b."Title", b."UrlHandle"
FROM "BlogPosts" AS b
][2023-11-03 01:41:30.399 +01:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[back.Models.Domain.BlogPost, back, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
][2023-11-03 01:41:30.399 +01:00 [INF] Executed action back.Controllers.BlogPostsController.GetBlogPosts (back) in 1.2778ms
][2023-11-03 01:41:30.399 +01:00 [INF] Executed endpoint 'back.Controllers.BlogPostsController.GetBlogPosts (back)'
][2023-11-03 01:41:30.400 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7179/api/blogposts - - - 200 - application/json;+charset=utf-8 2.0506ms
][2023-11-03 01:41:30.930 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7179/api/products - -
][2023-11-03 01:41:30.930 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:41:30.930 +01:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/3/2023 12:41:28 AM', Current time (UTC): '11/3/2023 12:41:30 AM'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
][2023-11-03 01:41:30.931 +01:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/3/2023 12:41:28 AM', Current time (UTC): '11/3/2023 12:41:30 AM'.
][2023-11-03 01:41:30.931 +01:00 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (user)
][2023-11-03 01:41:30.931 +01:00 [INF] AuthenticationScheme: Bearer was challenged.
][2023-11-03 01:41:30.931 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7179/api/products - - - 401 0 - 1.0934ms
][2023-11-03 01:41:30.942 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7179/api/users/refreshtoken - -
][2023-11-03 01:41:30.942 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:41:30.942 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7179/api/users/refreshtoken - - - 204 - - 0.1323ms
][2023-11-03 01:41:30.946 +01:00 [INF] Request starting HTTP/2 POST https://localhost:7179/api/users/refreshtoken application/json 364
][2023-11-03 01:41:30.946 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:41:30.946 +01:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/3/2023 12:41:28 AM', Current time (UTC): '11/3/2023 12:41:30 AM'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
][2023-11-03 01:41:30.946 +01:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/3/2023 12:41:28 AM', Current time (UTC): '11/3/2023 12:41:30 AM'.
][2023-11-03 01:41:30.946 +01:00 [INF] Executing endpoint 'back.Controllers.UsersController.RefreshToken (back)'
][2023-11-03 01:41:30.946 +01:00 [INF] Route matched with {action = "RefreshToken", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] RefreshToken(back.Models.Domain.TokenResponse) on controller back.Controllers.UsersController (back).
][2023-11-03 01:41:30.947 +01:00 [ERR] this is an ID: 0007ad25-f987-42a3-90bc-8430f299957f
][2023-11-03 01:41:30.949 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Guid), @___tokenResponse_RefreshToken_1='?'], CommandType='"Text"', CommandTimeout='30']
SELECT r."Id", r."RToken", r."Status", r."UserId"
FROM "RefreshTokens" AS r
WHERE r."UserId" = @__id_0 AND r."RToken" = @___tokenResponse_RefreshToken_1
LIMIT 1
][2023-11-03 01:41:30.951 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[@__get_Item_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT r."Id", r."RToken", r."Status", r."UserId"
FROM "RefreshTokens" AS r
WHERE r."Id" = @__get_Item_0
LIMIT 1
][2023-11-03 01:41:30.956 +01:00 [INF] Executed DbCommand (5ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?', @p2='?' (DbType = Boolean), @p3='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "RefreshTokens" ("Id", "RToken", "Status", "UserId")
VALUES (@p0, @p1, @p2, @p3);
][2023-11-03 01:41:30.956 +01:00 [INF] Executing OkObjectResult, writing value of type 'back.Models.Domain.TokenResponse'.
][2023-11-03 01:41:30.956 +01:00 [INF] Executed action back.Controllers.UsersController.RefreshToken (back) in 10.2912ms
][2023-11-03 01:41:30.956 +01:00 [INF] Executed endpoint 'back.Controllers.UsersController.RefreshToken (back)'
][2023-11-03 01:41:30.956 +01:00 [INF] Request finished HTTP/2 POST https://localhost:7179/api/users/refreshtoken application/json 364 - 200 - application/json;+charset=utf-8 10.8862ms
][2023-11-03 01:41:30.962 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7179/api/products - -
][2023-11-03 01:41:30.962 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:41:30.962 +01:00 [INF] Bearer was not authenticated. Failure message: No SecurityTokenValidator available for token.
][2023-11-03 01:41:30.962 +01:00 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (user)
][2023-11-03 01:41:30.962 +01:00 [INF] AuthenticationScheme: Bearer was challenged.
][2023-11-03 01:41:30.962 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7179/api/products - - - 401 0 - 0.2513ms
][2023-11-03 01:41:34.767 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7179/api/products - -
][2023-11-03 01:41:34.767 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:41:34.767 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7179/api/products - - - 204 - - 0.2139ms
][2023-11-03 01:41:34.771 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7179/api/products - -
][2023-11-03 01:41:34.772 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:41:34.772 +01:00 [INF] Executing endpoint 'back.Controllers.ProductsController.GetProducts (back)'
][2023-11-03 01:41:34.772 +01:00 [INF] Route matched with {action = "GetProducts", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProducts() on controller back.Controllers.ProductsController (back).
][2023-11-03 01:41:34.773 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Description", p."PublishedDate", p."Thumbnail", p."Title", p."Visibility"
FROM "Products" AS p
][2023-11-03 01:41:34.773 +01:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[back.Repositories.ProductEntity, back, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
][2023-11-03 01:41:34.773 +01:00 [INF] Executed action back.Controllers.ProductsController.GetProducts (back) in 1.6096ms
][2023-11-03 01:41:34.774 +01:00 [INF] Executed endpoint 'back.Controllers.ProductsController.GetProducts (back)'
][2023-11-03 01:41:34.774 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7179/api/products - - - 200 - application/json;+charset=utf-8 2.1443ms
][2023-11-03 01:41:50.568 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7179/api/products/cba0382e-959f-4e99-a266-9257a0a63a95 - -
][2023-11-03 01:41:50.568 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:41:50.568 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7179/api/products/cba0382e-959f-4e99-a266-9257a0a63a95 - - - 204 - - 0.2885ms
][2023-11-03 01:41:50.574 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7179/api/products/cba0382e-959f-4e99-a266-9257a0a63a95 - -
][2023-11-03 01:41:50.574 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:41:50.574 +01:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/3/2023 12:41:50 AM', Current time (UTC): '11/3/2023 12:41:50 AM'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
][2023-11-03 01:41:50.575 +01:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/3/2023 12:41:50 AM', Current time (UTC): '11/3/2023 12:41:50 AM'.
][2023-11-03 01:41:50.575 +01:00 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (user)
][2023-11-03 01:41:50.575 +01:00 [INF] AuthenticationScheme: Bearer was challenged.
][2023-11-03 01:41:50.575 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7179/api/products/cba0382e-959f-4e99-a266-9257a0a63a95 - - - 401 0 - 0.8128ms
][2023-11-03 01:41:50.584 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7179/api/users/refreshtoken - -
][2023-11-03 01:41:50.584 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:41:50.584 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7179/api/users/refreshtoken - - - 204 - - 0.2647ms
][2023-11-03 01:41:50.588 +01:00 [INF] Request starting HTTP/2 POST https://localhost:7179/api/users/refreshtoken application/json 582
][2023-11-03 01:41:50.589 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:41:50.589 +01:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/3/2023 12:41:50 AM', Current time (UTC): '11/3/2023 12:41:50 AM'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
][2023-11-03 01:41:50.589 +01:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/3/2023 12:41:50 AM', Current time (UTC): '11/3/2023 12:41:50 AM'.
][2023-11-03 01:41:50.589 +01:00 [INF] Executing endpoint 'back.Controllers.UsersController.RefreshToken (back)'
][2023-11-03 01:41:50.589 +01:00 [INF] Route matched with {action = "RefreshToken", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] RefreshToken(back.Models.Domain.TokenResponse) on controller back.Controllers.UsersController (back).
][2023-11-03 01:41:50.590 +01:00 [ERR] this is an ID: 0007ad25-f987-42a3-90bc-8430f299957f
][2023-11-03 01:41:50.591 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Guid), @___tokenResponse_RefreshToken_1='?'], CommandType='"Text"', CommandTimeout='30']
SELECT r."Id", r."RToken", r."Status", r."UserId"
FROM "RefreshTokens" AS r
WHERE r."UserId" = @__id_0 AND r."RToken" = @___tokenResponse_RefreshToken_1
LIMIT 1
][2023-11-03 01:41:50.593 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[@__get_Item_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT r."Id", r."RToken", r."Status", r."UserId"
FROM "RefreshTokens" AS r
WHERE r."Id" = @__get_Item_0
LIMIT 1
][2023-11-03 01:41:50.594 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?', @p2='?' (DbType = Boolean), @p3='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "RefreshTokens" ("Id", "RToken", "Status", "UserId")
VALUES (@p0, @p1, @p2, @p3);
][2023-11-03 01:41:50.594 +01:00 [INF] Executing OkObjectResult, writing value of type 'back.Models.Domain.TokenResponse'.
][2023-11-03 01:41:50.594 +01:00 [INF] Executed action back.Controllers.UsersController.RefreshToken (back) in 5.5066ms
][2023-11-03 01:41:50.595 +01:00 [INF] Executed endpoint 'back.Controllers.UsersController.RefreshToken (back)'
][2023-11-03 01:41:50.595 +01:00 [INF] Request finished HTTP/2 POST https://localhost:7179/api/users/refreshtoken application/json 582 - 200 - application/json;+charset=utf-8 6.0961ms
][2023-11-03 01:41:50.605 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7179/api/products/cba0382e-959f-4e99-a266-9257a0a63a95 - -
][2023-11-03 01:41:50.605 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:41:50.605 +01:00 [INF] Bearer was not authenticated. Failure message: No SecurityTokenValidator available for token.
][2023-11-03 01:41:50.605 +01:00 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (user)
][2023-11-03 01:41:50.606 +01:00 [INF] AuthenticationScheme: Bearer was challenged.
][2023-11-03 01:41:50.606 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7179/api/products/cba0382e-959f-4e99-a266-9257a0a63a95 - - - 401 0 - 0.3098ms
][2023-11-03 01:41:53.237 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7179/api/products - -
][2023-11-03 01:41:53.237 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:41:53.237 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7179/api/products - - - 204 - - 0.3115ms
][2023-11-03 01:41:53.248 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7179/api/products - -
][2023-11-03 01:41:53.248 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:41:53.248 +01:00 [INF] Executing endpoint 'back.Controllers.ProductsController.GetProducts (back)'
][2023-11-03 01:41:53.248 +01:00 [INF] Route matched with {action = "GetProducts", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProducts() on controller back.Controllers.ProductsController (back).
][2023-11-03 01:41:53.249 +01:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Description", p."PublishedDate", p."Thumbnail", p."Title", p."Visibility"
FROM "Products" AS p
][2023-11-03 01:41:53.250 +01:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[back.Repositories.ProductEntity, back, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
][2023-11-03 01:41:53.250 +01:00 [INF] Executed action back.Controllers.ProductsController.GetProducts (back) in 1.1806ms
][2023-11-03 01:41:53.250 +01:00 [INF] Executed endpoint 'back.Controllers.ProductsController.GetProducts (back)'
][2023-11-03 01:41:53.250 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7179/api/products - - - 200 - application/json;+charset=utf-8 1.6551ms
][2023-11-03 01:41:56.849 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7179/api/products/c7a2cb23-9ac1-4967-890f-7d18e6997727 - -
][2023-11-03 01:41:56.849 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:41:56.849 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7179/api/products/c7a2cb23-9ac1-4967-890f-7d18e6997727 - - - 204 - - 0.4906ms
][2023-11-03 01:41:56.861 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7179/api/products/c7a2cb23-9ac1-4967-890f-7d18e6997727 - -
][2023-11-03 01:41:56.861 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:41:56.862 +01:00 [INF] Executing endpoint 'back.Controllers.ProductsController.GetProducts (back)'
][2023-11-03 01:41:56.865 +01:00 [INF] Route matched with {action = "GetProducts", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProducts(System.Guid) on controller back.Controllers.ProductsController (back).
][2023-11-03 01:41:56.873 +01:00 [INF] Executed DbCommand (0ms) [Parameters=[@__get_Item_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Description", p."PublishedDate", p."Thumbnail", p."Title", p."Visibility"
FROM "Products" AS p
WHERE p."Id" = @__get_Item_0
LIMIT 1
][2023-11-03 01:41:56.874 +01:00 [INF] Executing OkObjectResult, writing value of type 'back.Models.Domain.Product'.
][2023-11-03 01:41:56.875 +01:00 [INF] Executed action back.Controllers.ProductsController.GetProducts (back) in 9.6191ms
][2023-11-03 01:41:56.875 +01:00 [INF] Executed endpoint 'back.Controllers.ProductsController.GetProducts (back)'
][2023-11-03 01:41:56.875 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7179/api/products/c7a2cb23-9ac1-4967-890f-7d18e6997727 - - - 200 - application/json;+charset=utf-8 13.6602ms
][2023-11-03 01:41:58.363 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7179/api/products - -
][2023-11-03 01:41:58.363 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:41:58.364 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7179/api/products - - - 204 - - 0.2114ms
][2023-11-03 01:41:58.381 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7179/api/products - -
][2023-11-03 01:41:58.381 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:41:58.382 +01:00 [INF] Executing endpoint 'back.Controllers.ProductsController.GetProducts (back)'
][2023-11-03 01:41:58.382 +01:00 [INF] Route matched with {action = "GetProducts", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProducts() on controller back.Controllers.ProductsController (back).
][2023-11-03 01:41:58.383 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Description", p."PublishedDate", p."Thumbnail", p."Title", p."Visibility"
FROM "Products" AS p
][2023-11-03 01:41:58.383 +01:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[back.Repositories.ProductEntity, back, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
][2023-11-03 01:41:58.383 +01:00 [INF] Executed action back.Controllers.ProductsController.GetProducts (back) in 1.3323ms
][2023-11-03 01:41:58.383 +01:00 [INF] Executed endpoint 'back.Controllers.ProductsController.GetProducts (back)'
][2023-11-03 01:41:58.383 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7179/api/products - - - 200 - application/json;+charset=utf-8 1.8653ms
][2023-11-03 01:42:13.895 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7179/api/products - -
][2023-11-03 01:42:13.895 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:42:13.895 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7179/api/products - - - 204 - - 0.1695ms
][2023-11-03 01:42:13.898 +01:00 [INF] Request starting HTTP/2 POST https://localhost:7179/api/products multipart/form-data;+boundary=----WebKitFormBoundarykJABDG5yzkrbJsvm 518763
][2023-11-03 01:42:13.899 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:42:13.899 +01:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/3/2023 12:42:10 AM', Current time (UTC): '11/3/2023 12:42:13 AM'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
][2023-11-03 01:42:13.899 +01:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/3/2023 12:42:10 AM', Current time (UTC): '11/3/2023 12:42:13 AM'.
][2023-11-03 01:42:13.899 +01:00 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (user)
][2023-11-03 01:42:13.899 +01:00 [INF] AuthenticationScheme: Bearer was challenged.
][2023-11-03 01:42:13.899 +01:00 [INF] Request finished HTTP/2 POST https://localhost:7179/api/products multipart/form-data;+boundary=----WebKitFormBoundarykJABDG5yzkrbJsvm 518763 - 401 0 - 0.5941ms
][2023-11-03 01:42:13.905 +01:00 [INF] Connection id "0HMURVSSKO302", Request id "0HMURVSSKO302:00000097": the application completed without reading the entire request body.
][2023-11-03 01:42:13.908 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7179/api/users/refreshtoken - -
][2023-11-03 01:42:13.909 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:42:13.909 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7179/api/users/refreshtoken - - - 204 - - 0.2750ms
][2023-11-03 01:42:13.921 +01:00 [INF] Request starting HTTP/2 POST https://localhost:7179/api/users/refreshtoken application/json 582
][2023-11-03 01:42:13.921 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:42:13.922 +01:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/3/2023 12:42:10 AM', Current time (UTC): '11/3/2023 12:42:13 AM'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
][2023-11-03 01:42:13.922 +01:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/3/2023 12:42:10 AM', Current time (UTC): '11/3/2023 12:42:13 AM'.
][2023-11-03 01:42:13.922 +01:00 [INF] Executing endpoint 'back.Controllers.UsersController.RefreshToken (back)'
][2023-11-03 01:42:13.922 +01:00 [INF] Route matched with {action = "RefreshToken", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] RefreshToken(back.Models.Domain.TokenResponse) on controller back.Controllers.UsersController (back).
][2023-11-03 01:42:13.923 +01:00 [ERR] this is an ID: 0007ad25-f987-42a3-90bc-8430f299957f
][2023-11-03 01:42:13.956 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__id_0='?' (DbType = Guid), @___tokenResponse_RefreshToken_1='?'], CommandType='"Text"', CommandTimeout='30']
SELECT r."Id", r."RToken", r."Status", r."UserId"
FROM "RefreshTokens" AS r
WHERE r."UserId" = @__id_0 AND r."RToken" = @___tokenResponse_RefreshToken_1
LIMIT 1
][2023-11-03 01:42:13.958 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[@__get_Item_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT r."Id", r."RToken", r."Status", r."UserId"
FROM "RefreshTokens" AS r
WHERE r."Id" = @__get_Item_0
LIMIT 1
][2023-11-03 01:42:13.960 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?', @p2='?' (DbType = Boolean), @p3='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "RefreshTokens" ("Id", "RToken", "Status", "UserId")
VALUES (@p0, @p1, @p2, @p3);
][2023-11-03 01:42:13.960 +01:00 [INF] Executing OkObjectResult, writing value of type 'back.Models.Domain.TokenResponse'.
][2023-11-03 01:42:13.960 +01:00 [INF] Executed action back.Controllers.UsersController.RefreshToken (back) in 37.716ms
][2023-11-03 01:42:13.960 +01:00 [INF] Executed endpoint 'back.Controllers.UsersController.RefreshToken (back)'
][2023-11-03 01:42:13.960 +01:00 [INF] Request finished HTTP/2 POST https://localhost:7179/api/users/refreshtoken application/json 582 - 200 - application/json;+charset=utf-8 38.7637ms
][2023-11-03 01:42:13.968 +01:00 [INF] Request starting HTTP/2 POST https://localhost:7179/api/products multipart/form-data;+boundary=----WebKitFormBoundary2EMZFs6vHnuBfnb0 518763
][2023-11-03 01:42:13.968 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:42:13.968 +01:00 [INF] Bearer was not authenticated. Failure message: No SecurityTokenValidator available for token.
][2023-11-03 01:42:13.969 +01:00 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (user)
][2023-11-03 01:42:13.969 +01:00 [INF] AuthenticationScheme: Bearer was challenged.
][2023-11-03 01:42:13.969 +01:00 [INF] Request finished HTTP/2 POST https://localhost:7179/api/products multipart/form-data;+boundary=----WebKitFormBoundary2EMZFs6vHnuBfnb0 518763 - 401 0 - 0.4443ms
][2023-11-03 01:42:13.969 +01:00 [INF] Connection id "0HMURVSSKO302", Request id "0HMURVSSKO302:0000009D": the application completed without reading the entire request body.
][2023-11-03 01:42:20.446 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7179/api/products - -
][2023-11-03 01:42:20.446 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:42:20.446 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7179/api/products - - - 204 - - 0.1534ms
][2023-11-03 01:42:20.449 +01:00 [INF] Request starting HTTP/2 POST https://localhost:7179/api/products multipart/form-data;+boundary=----WebKitFormBoundaryEphaM3EjBIviHjk3 518763
][2023-11-03 01:42:20.449 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:42:20.449 +01:00 [INF] Executing endpoint 'back.Controllers.ProductsController.CreateProducts (back)'
][2023-11-03 01:42:20.455 +01:00 [INF] Route matched with {action = "CreateProducts", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CreateProducts(Microsoft.AspNetCore.Http.IFormFile, back.Models.Domain.Product) on controller back.Controllers.ProductsController (back).
][2023-11-03 01:42:20.495 +01:00 [INF] Executed DbCommand (9ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?', @p2='?' (DbType = DateTime), @p3='?', @p4='?', @p5='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Products" ("Id", "Description", "PublishedDate", "Thumbnail", "Title", "Visibility")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5);
][2023-11-03 01:42:20.496 +01:00 [INF] Executing OkObjectResult, writing value of type 'back.Models.Domain.Product'.
][2023-11-03 01:42:20.496 +01:00 [INF] Executed action back.Controllers.ProductsController.CreateProducts (back) in 41.2224ms
][2023-11-03 01:42:20.496 +01:00 [INF] Executed endpoint 'back.Controllers.ProductsController.CreateProducts (back)'
][2023-11-03 01:42:20.497 +01:00 [INF] Request finished HTTP/2 POST https://localhost:7179/api/products multipart/form-data;+boundary=----WebKitFormBoundaryEphaM3EjBIviHjk3 518763 - 200 - application/json;+charset=utf-8 47.5101ms
][2023-11-03 01:42:20.520 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7179/api/products - -
][2023-11-03 01:42:20.520 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:42:20.521 +01:00 [INF] Executing endpoint 'back.Controllers.ProductsController.GetProducts (back)'
][2023-11-03 01:42:20.521 +01:00 [INF] Route matched with {action = "GetProducts", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProducts() on controller back.Controllers.ProductsController (back).
][2023-11-03 01:42:20.525 +01:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Description", p."PublishedDate", p."Thumbnail", p."Title", p."Visibility"
FROM "Products" AS p
][2023-11-03 01:42:20.525 +01:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[back.Repositories.ProductEntity, back, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
][2023-11-03 01:42:20.525 +01:00 [INF] Executed action back.Controllers.ProductsController.GetProducts (back) in 4.3231ms
][2023-11-03 01:42:20.526 +01:00 [INF] Executed endpoint 'back.Controllers.ProductsController.GetProducts (back)'
][2023-11-03 01:42:20.526 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7179/api/products - - - 200 - application/json;+charset=utf-8 5.5372ms
][2023-11-03 01:42:20.578 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7179/Uploads/Products/db580bd6-b31e-48f9-8590-16b04186b818.jpg - -
][2023-11-03 01:42:20.587 +01:00 [INF] Sending file. Request path: '/Uploads/Products/db580bd6-b31e-48f9-8590-16b04186b818.jpg'. Physical path: 'C:\Users\melyo\Documents\github\melyonousi\dotnet-angular\dot-net\dotnet-angular-demo-03-use-wwwroot\back\wwwroot\Uploads\Products\db580bd6-b31e-48f9-8590-16b04186b818.jpg'
][2023-11-03 01:42:20.587 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7179/Uploads/Products/db580bd6-b31e-48f9-8590-16b04186b818.jpg - - - 200 518046 image/jpeg 8.3733ms
][2023-11-03 01:42:41.003 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7179/api/products - -
][2023-11-03 01:42:41.003 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:42:41.003 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7179/api/products - - - 204 - - 0.3018ms
][2023-11-03 01:42:41.054 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7179/api/products - -
][2023-11-03 01:42:41.054 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:42:41.054 +01:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/3/2023 12:42:33 AM', Current time (UTC): '11/3/2023 12:42:41 AM'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
][2023-11-03 01:42:41.055 +01:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/3/2023 12:42:33 AM', Current time (UTC): '11/3/2023 12:42:41 AM'.
][2023-11-03 01:42:41.055 +01:00 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (user)
][2023-11-03 01:42:41.055 +01:00 [INF] AuthenticationScheme: Bearer was challenged.
][2023-11-03 01:42:41.055 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7179/api/products - - - 401 0 - 0.8789ms
][2023-11-03 01:42:41.136 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7179/api/users/refreshtoken - -
][2023-11-03 01:42:41.137 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:42:41.137 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7179/api/users/refreshtoken - - - 204 - - 0.1841ms
][2023-11-03 01:42:41.142 +01:00 [INF] Request starting HTTP/2 POST https://localhost:7179/api/users/refreshtoken application/json 582
][2023-11-03 01:42:41.142 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:42:41.142 +01:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/3/2023 12:42:33 AM', Current time (UTC): '11/3/2023 12:42:41 AM'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
][2023-11-03 01:42:41.142 +01:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/3/2023 12:42:33 AM', Current time (UTC): '11/3/2023 12:42:41 AM'.
][2023-11-03 01:42:41.142 +01:00 [INF] Executing endpoint 'back.Controllers.UsersController.RefreshToken (back)'
][2023-11-03 01:42:41.142 +01:00 [INF] Route matched with {action = "RefreshToken", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] RefreshToken(back.Models.Domain.TokenResponse) on controller back.Controllers.UsersController (back).
][2023-11-03 01:42:41.143 +01:00 [ERR] this is an ID: 0007ad25-f987-42a3-90bc-8430f299957f
][2023-11-03 01:42:41.145 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Guid), @___tokenResponse_RefreshToken_1='?'], CommandType='"Text"', CommandTimeout='30']
SELECT r."Id", r."RToken", r."Status", r."UserId"
FROM "RefreshTokens" AS r
WHERE r."UserId" = @__id_0 AND r."RToken" = @___tokenResponse_RefreshToken_1
LIMIT 1
][2023-11-03 01:42:41.148 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[@__get_Item_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT r."Id", r."RToken", r."Status", r."UserId"
FROM "RefreshTokens" AS r
WHERE r."Id" = @__get_Item_0
LIMIT 1
][2023-11-03 01:42:41.153 +01:00 [INF] Executed DbCommand (5ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?', @p2='?' (DbType = Boolean), @p3='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "RefreshTokens" ("Id", "RToken", "Status", "UserId")
VALUES (@p0, @p1, @p2, @p3);
][2023-11-03 01:42:41.155 +01:00 [INF] Executing OkObjectResult, writing value of type 'back.Models.Domain.TokenResponse'.
][2023-11-03 01:42:41.155 +01:00 [INF] Executed action back.Controllers.UsersController.RefreshToken (back) in 12.8213ms
][2023-11-03 01:42:41.155 +01:00 [INF] Executed endpoint 'back.Controllers.UsersController.RefreshToken (back)'
][2023-11-03 01:42:41.155 +01:00 [INF] Request finished HTTP/2 POST https://localhost:7179/api/users/refreshtoken application/json 582 - 200 - application/json;+charset=utf-8 13.5909ms
][2023-11-03 01:42:41.170 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7179/api/products - -
][2023-11-03 01:42:41.171 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:42:41.171 +01:00 [INF] Bearer was not authenticated. Failure message: No SecurityTokenValidator available for token.
][2023-11-03 01:42:41.171 +01:00 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (user)
][2023-11-03 01:42:41.171 +01:00 [INF] AuthenticationScheme: Bearer was challenged.
][2023-11-03 01:42:41.171 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7179/api/products - - - 401 0 - 0.5212ms
][2023-11-03 01:45:19.966 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7179/api/products - -
][2023-11-03 01:45:19.966 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:45:19.966 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7179/api/products - - - 204 - - 0.3483ms
][2023-11-03 01:45:19.972 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7179/api/products - -
][2023-11-03 01:45:19.972 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:45:19.972 +01:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/3/2023 12:43:01 AM', Current time (UTC): '11/3/2023 12:45:19 AM'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
][2023-11-03 01:45:19.973 +01:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/3/2023 12:43:01 AM', Current time (UTC): '11/3/2023 12:45:19 AM'.
][2023-11-03 01:45:19.973 +01:00 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (user)
][2023-11-03 01:45:19.973 +01:00 [INF] AuthenticationScheme: Bearer was challenged.
][2023-11-03 01:45:19.973 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7179/api/products - - - 401 0 - 0.7806ms
][2023-11-03 01:45:20.062 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7179/api/users/refreshtoken - -
][2023-11-03 01:45:20.063 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:45:20.063 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7179/api/users/refreshtoken - - - 204 - - 0.4164ms
][2023-11-03 01:45:20.069 +01:00 [INF] Request starting HTTP/2 POST https://localhost:7179/api/users/refreshtoken application/json 582
][2023-11-03 01:45:20.069 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:45:20.070 +01:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/3/2023 12:43:01 AM', Current time (UTC): '11/3/2023 12:45:20 AM'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
][2023-11-03 01:45:20.070 +01:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/3/2023 12:43:01 AM', Current time (UTC): '11/3/2023 12:45:20 AM'.
][2023-11-03 01:45:20.070 +01:00 [INF] Executing endpoint 'back.Controllers.UsersController.RefreshToken (back)'
][2023-11-03 01:45:20.070 +01:00 [INF] Route matched with {action = "RefreshToken", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] RefreshToken(back.Models.Domain.TokenResponse) on controller back.Controllers.UsersController (back).
][2023-11-03 01:45:20.072 +01:00 [ERR] this is an ID: 0007ad25-f987-42a3-90bc-8430f299957f
][2023-11-03 01:45:20.075 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__id_0='?' (DbType = Guid), @___tokenResponse_RefreshToken_1='?'], CommandType='"Text"', CommandTimeout='30']
SELECT r."Id", r."RToken", r."Status", r."UserId"
FROM "RefreshTokens" AS r
WHERE r."UserId" = @__id_0 AND r."RToken" = @___tokenResponse_RefreshToken_1
LIMIT 1
][2023-11-03 01:45:20.077 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[@__get_Item_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT r."Id", r."RToken", r."Status", r."UserId"
FROM "RefreshTokens" AS r
WHERE r."Id" = @__get_Item_0
LIMIT 1
][2023-11-03 01:45:20.083 +01:00 [INF] Executed DbCommand (5ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?', @p2='?' (DbType = Boolean), @p3='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "RefreshTokens" ("Id", "RToken", "Status", "UserId")
VALUES (@p0, @p1, @p2, @p3);
][2023-11-03 01:45:20.084 +01:00 [INF] Executing OkObjectResult, writing value of type 'back.Models.Domain.TokenResponse'.
][2023-11-03 01:45:20.084 +01:00 [INF] Executed action back.Controllers.UsersController.RefreshToken (back) in 13.7204ms
][2023-11-03 01:45:20.084 +01:00 [INF] Executed endpoint 'back.Controllers.UsersController.RefreshToken (back)'
][2023-11-03 01:45:20.084 +01:00 [INF] Request finished HTTP/2 POST https://localhost:7179/api/users/refreshtoken application/json 582 - 200 - application/json;+charset=utf-8 15.1451ms
][2023-11-03 01:45:20.104 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7179/api/products - -
][2023-11-03 01:45:20.104 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:45:20.104 +01:00 [INF] Bearer was not authenticated. Failure message: No SecurityTokenValidator available for token.
][2023-11-03 01:45:20.104 +01:00 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (user)
][2023-11-03 01:45:20.105 +01:00 [INF] AuthenticationScheme: Bearer was challenged.
][2023-11-03 01:45:20.105 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7179/api/products - - - 401 0 - 0.3322ms
][2023-11-03 01:45:36.528 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7179/api/blogposts - -
][2023-11-03 01:45:36.528 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:45:36.528 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7179/api/blogposts - - - 204 - - 0.1867ms
][2023-11-03 01:45:36.541 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7179/api/blogposts - -
][2023-11-03 01:45:36.541 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:45:36.541 +01:00 [INF] Executing endpoint 'back.Controllers.BlogPostsController.GetBlogPosts (back)'
][2023-11-03 01:45:36.541 +01:00 [INF] Route matched with {action = "GetBlogPosts", controller = "BlogPosts"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBlogPosts() on controller back.Controllers.BlogPostsController (back).
][2023-11-03 01:45:36.544 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT b."Id", b."Author", b."Content", b."FeaturedImageUrl", b."IsVisible", b."PublishedDate", b."ShortDescription", b."Title", b."UrlHandle"
FROM "BlogPosts" AS b
][2023-11-03 01:45:36.544 +01:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[back.Models.Domain.BlogPost, back, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
][2023-11-03 01:45:36.544 +01:00 [INF] Executed action back.Controllers.BlogPostsController.GetBlogPosts (back) in 2.8762ms
][2023-11-03 01:45:36.544 +01:00 [INF] Executed endpoint 'back.Controllers.BlogPostsController.GetBlogPosts (back)'
][2023-11-03 01:45:36.544 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7179/api/blogposts - - - 200 - application/json;+charset=utf-8 3.3204ms
][2023-11-03 01:45:37.518 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7179/api/products - -
][2023-11-03 01:45:37.518 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:45:37.518 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7179/api/products - - - 204 - - 0.2090ms
][2023-11-03 01:45:37.522 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7179/api/products - -
][2023-11-03 01:45:37.522 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:45:37.522 +01:00 [INF] Executing endpoint 'back.Controllers.ProductsController.GetProducts (back)'
][2023-11-03 01:45:37.522 +01:00 [INF] Route matched with {action = "GetProducts", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProducts() on controller back.Controllers.ProductsController (back).
][2023-11-03 01:45:37.523 +01:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Description", p."PublishedDate", p."Thumbnail", p."Title", p."Visibility"
FROM "Products" AS p
][2023-11-03 01:45:37.523 +01:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[back.Repositories.ProductEntity, back, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
][2023-11-03 01:45:37.523 +01:00 [INF] Executed action back.Controllers.ProductsController.GetProducts (back) in 1.4419ms
][2023-11-03 01:45:37.523 +01:00 [INF] Executed endpoint 'back.Controllers.ProductsController.GetProducts (back)'
][2023-11-03 01:45:37.524 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7179/api/products - - - 200 - application/json;+charset=utf-8 1.8870ms
][2023-11-03 01:45:37.550 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7179/Uploads/Products/db580bd6-b31e-48f9-8590-16b04186b818.jpg - -
][2023-11-03 01:45:37.551 +01:00 [INF] The file /Uploads/Products/db580bd6-b31e-48f9-8590-16b04186b818.jpg was not modified
][2023-11-03 01:45:37.551 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7179/Uploads/Products/db580bd6-b31e-48f9-8590-16b04186b818.jpg - - - 304 - image/jpeg 1.2617ms
][2023-11-03 01:46:30.128 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7179/api/products - -
][2023-11-03 01:46:30.128 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:46:30.128 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7179/api/products - - - 204 - - 0.3251ms
][2023-11-03 01:46:30.148 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7179/api/products - -
][2023-11-03 01:46:30.148 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:46:30.149 +01:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/3/2023 12:45:40 AM', Current time (UTC): '11/3/2023 12:46:30 AM'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
][2023-11-03 01:46:30.149 +01:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/3/2023 12:45:40 AM', Current time (UTC): '11/3/2023 12:46:30 AM'.
][2023-11-03 01:46:30.149 +01:00 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (user)
][2023-11-03 01:46:30.150 +01:00 [INF] AuthenticationScheme: Bearer was challenged.
][2023-11-03 01:46:30.150 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7179/api/products - - - 401 0 - 1.3842ms
][2023-11-03 01:46:30.158 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7179/api/users/refreshtoken - -
][2023-11-03 01:46:30.158 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:46:30.158 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7179/api/users/refreshtoken - - - 204 - - 0.1597ms
][2023-11-03 01:46:30.162 +01:00 [INF] Request starting HTTP/2 POST https://localhost:7179/api/users/refreshtoken application/json 582
][2023-11-03 01:46:30.162 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:46:30.162 +01:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/3/2023 12:45:40 AM', Current time (UTC): '11/3/2023 12:46:30 AM'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
][2023-11-03 01:46:30.162 +01:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/3/2023 12:45:40 AM', Current time (UTC): '11/3/2023 12:46:30 AM'.
][2023-11-03 01:46:30.162 +01:00 [INF] Executing endpoint 'back.Controllers.UsersController.RefreshToken (back)'
][2023-11-03 01:46:30.162 +01:00 [INF] Route matched with {action = "RefreshToken", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] RefreshToken(back.Models.Domain.TokenResponse) on controller back.Controllers.UsersController (back).
][2023-11-03 01:46:30.163 +01:00 [ERR] this is an ID: 0007ad25-f987-42a3-90bc-8430f299957f
][2023-11-03 01:46:30.165 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Guid), @___tokenResponse_RefreshToken_1='?'], CommandType='"Text"', CommandTimeout='30']
SELECT r."Id", r."RToken", r."Status", r."UserId"
FROM "RefreshTokens" AS r
WHERE r."UserId" = @__id_0 AND r."RToken" = @___tokenResponse_RefreshToken_1
LIMIT 1
][2023-11-03 01:46:30.167 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[@__get_Item_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT r."Id", r."RToken", r."Status", r."UserId"
FROM "RefreshTokens" AS r
WHERE r."Id" = @__get_Item_0
LIMIT 1
][2023-11-03 01:46:30.169 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?', @p2='?' (DbType = Boolean), @p3='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "RefreshTokens" ("Id", "RToken", "Status", "UserId")
VALUES (@p0, @p1, @p2, @p3);
][2023-11-03 01:46:30.169 +01:00 [INF] Executing OkObjectResult, writing value of type 'back.Models.Domain.TokenResponse'.
][2023-11-03 01:46:30.169 +01:00 [INF] Executed action back.Controllers.UsersController.RefreshToken (back) in 6.7718ms
][2023-11-03 01:46:30.169 +01:00 [INF] Executed endpoint 'back.Controllers.UsersController.RefreshToken (back)'
][2023-11-03 01:46:30.169 +01:00 [INF] Request finished HTTP/2 POST https://localhost:7179/api/users/refreshtoken application/json 582 - 200 - application/json;+charset=utf-8 7.5741ms
][2023-11-03 01:46:30.177 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7179/api/products - -
][2023-11-03 01:46:30.177 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:46:30.178 +01:00 [INF] Bearer was not authenticated. Failure message: No SecurityTokenValidator available for token.
][2023-11-03 01:46:30.178 +01:00 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (user)
][2023-11-03 01:46:30.178 +01:00 [INF] AuthenticationScheme: Bearer was challenged.
][2023-11-03 01:46:30.178 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7179/api/products - - - 401 0 - 0.3106ms
][2023-11-03 01:46:35.703 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7179/api/blogposts - -
][2023-11-03 01:46:35.703 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:46:35.703 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7179/api/blogposts - - - 204 - - 0.1827ms
][2023-11-03 01:46:35.717 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7179/api/blogposts - -
][2023-11-03 01:46:35.717 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:46:35.717 +01:00 [INF] Executing endpoint 'back.Controllers.BlogPostsController.GetBlogPosts (back)'
][2023-11-03 01:46:35.717 +01:00 [INF] Route matched with {action = "GetBlogPosts", controller = "BlogPosts"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBlogPosts() on controller back.Controllers.BlogPostsController (back).
][2023-11-03 01:46:35.718 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT b."Id", b."Author", b."Content", b."FeaturedImageUrl", b."IsVisible", b."PublishedDate", b."ShortDescription", b."Title", b."UrlHandle"
FROM "BlogPosts" AS b
][2023-11-03 01:46:35.719 +01:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[back.Models.Domain.BlogPost, back, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
][2023-11-03 01:46:35.719 +01:00 [INF] Executed action back.Controllers.BlogPostsController.GetBlogPosts (back) in 1.444ms
][2023-11-03 01:46:35.719 +01:00 [INF] Executed endpoint 'back.Controllers.BlogPostsController.GetBlogPosts (back)'
][2023-11-03 01:46:35.719 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7179/api/blogposts - - - 200 - application/json;+charset=utf-8 1.9513ms
][2023-11-03 01:46:36.338 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7179/api/products - -
][2023-11-03 01:46:36.338 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:46:36.338 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7179/api/products - - - 204 - - 0.1847ms
][2023-11-03 01:46:36.348 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7179/api/products - -
][2023-11-03 01:46:36.349 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:46:36.349 +01:00 [INF] Executing endpoint 'back.Controllers.ProductsController.GetProducts (back)'
][2023-11-03 01:46:36.349 +01:00 [INF] Route matched with {action = "GetProducts", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProducts() on controller back.Controllers.ProductsController (back).
][2023-11-03 01:46:36.350 +01:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Description", p."PublishedDate", p."Thumbnail", p."Title", p."Visibility"
FROM "Products" AS p
][2023-11-03 01:46:36.350 +01:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[back.Repositories.ProductEntity, back, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
][2023-11-03 01:46:36.350 +01:00 [INF] Executed action back.Controllers.ProductsController.GetProducts (back) in 1.4915ms
][2023-11-03 01:46:36.350 +01:00 [INF] Executed endpoint 'back.Controllers.ProductsController.GetProducts (back)'
][2023-11-03 01:46:36.351 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7179/api/products - - - 200 - application/json;+charset=utf-8 2.1053ms
][2023-11-03 01:46:36.375 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7179/Uploads/Products/db580bd6-b31e-48f9-8590-16b04186b818.jpg - -
][2023-11-03 01:46:36.376 +01:00 [INF] The file /Uploads/Products/db580bd6-b31e-48f9-8590-16b04186b818.jpg was not modified
][2023-11-03 01:46:36.376 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7179/Uploads/Products/db580bd6-b31e-48f9-8590-16b04186b818.jpg - - - 304 - image/jpeg 0.5498ms
][2023-11-03 01:46:48.178 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7179/api/blogposts - -
][2023-11-03 01:46:48.178 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:46:48.178 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7179/api/blogposts - - - 204 - - 0.2473ms
][2023-11-03 01:46:48.195 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7179/api/blogposts - -
][2023-11-03 01:46:48.195 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:46:48.195 +01:00 [INF] Executing endpoint 'back.Controllers.BlogPostsController.GetBlogPosts (back)'
][2023-11-03 01:46:48.195 +01:00 [INF] Route matched with {action = "GetBlogPosts", controller = "BlogPosts"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBlogPosts() on controller back.Controllers.BlogPostsController (back).
][2023-11-03 01:46:48.197 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT b."Id", b."Author", b."Content", b."FeaturedImageUrl", b."IsVisible", b."PublishedDate", b."ShortDescription", b."Title", b."UrlHandle"
FROM "BlogPosts" AS b
][2023-11-03 01:46:48.197 +01:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[back.Models.Domain.BlogPost, back, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
][2023-11-03 01:46:48.197 +01:00 [INF] Executed action back.Controllers.BlogPostsController.GetBlogPosts (back) in 1.4135ms
][2023-11-03 01:46:48.197 +01:00 [INF] Executed endpoint 'back.Controllers.BlogPostsController.GetBlogPosts (back)'
][2023-11-03 01:46:48.197 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7179/api/blogposts - - - 200 - application/json;+charset=utf-8 1.9237ms
][2023-11-03 01:46:48.944 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7179/api/products - -
][2023-11-03 01:46:48.945 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:46:48.945 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7179/api/products - - - 204 - - 0.2370ms
][2023-11-03 01:46:48.949 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7179/api/products - -
][2023-11-03 01:46:48.949 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:46:48.949 +01:00 [INF] Executing endpoint 'back.Controllers.ProductsController.GetProducts (back)'
][2023-11-03 01:46:48.949 +01:00 [INF] Route matched with {action = "GetProducts", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProducts() on controller back.Controllers.ProductsController (back).
][2023-11-03 01:46:48.950 +01:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Description", p."PublishedDate", p."Thumbnail", p."Title", p."Visibility"
FROM "Products" AS p
][2023-11-03 01:46:48.950 +01:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[back.Repositories.ProductEntity, back, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
][2023-11-03 01:46:48.950 +01:00 [INF] Executed action back.Controllers.ProductsController.GetProducts (back) in 1.0345ms
][2023-11-03 01:46:48.950 +01:00 [INF] Executed endpoint 'back.Controllers.ProductsController.GetProducts (back)'
][2023-11-03 01:46:48.950 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7179/api/products - - - 200 - application/json;+charset=utf-8 1.4570ms
][2023-11-03 01:46:51.874 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7179/api/categories - -
][2023-11-03 01:46:51.874 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:46:51.874 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7179/api/categories - - - 204 - - 0.1854ms
][2023-11-03 01:46:51.878 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7179/api/categories - -
][2023-11-03 01:46:51.878 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:46:51.879 +01:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/3/2023 12:46:50 AM', Current time (UTC): '11/3/2023 12:46:51 AM'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
][2023-11-03 01:46:51.879 +01:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/3/2023 12:46:50 AM', Current time (UTC): '11/3/2023 12:46:51 AM'.
][2023-11-03 01:46:51.879 +01:00 [INF] Executing endpoint 'back.Controllers.CategoriesController.GetCategories (back)'
][2023-11-03 01:46:51.879 +01:00 [INF] Route matched with {action = "GetCategories", controller = "Categories"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCategories() on controller back.Controllers.CategoriesController (back).
][2023-11-03 01:46:51.881 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c."Id", c."Name", c."UrlHandle"
FROM "Categories" AS c
][2023-11-03 01:46:51.882 +01:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[back.Models.Domain.Category, back, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
][2023-11-03 01:46:51.882 +01:00 [INF] Executed action back.Controllers.CategoriesController.GetCategories (back) in 2.6285ms
][2023-11-03 01:46:51.882 +01:00 [INF] Executed endpoint 'back.Controllers.CategoriesController.GetCategories (back)'
][2023-11-03 01:46:51.882 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7179/api/categories - - - 200 - application/json;+charset=utf-8 3.2860ms
][2023-11-03 01:46:53.712 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7179/api/products - -
][2023-11-03 01:46:53.712 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:46:53.712 +01:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/3/2023 12:46:50 AM', Current time (UTC): '11/3/2023 12:46:53 AM'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
][2023-11-03 01:46:53.712 +01:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/3/2023 12:46:50 AM', Current time (UTC): '11/3/2023 12:46:53 AM'.
][2023-11-03 01:46:53.712 +01:00 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (user)
][2023-11-03 01:46:53.712 +01:00 [INF] AuthenticationScheme: Bearer was challenged.
][2023-11-03 01:46:53.712 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7179/api/products - - - 401 0 - 0.6677ms
][2023-11-03 01:46:53.727 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7179/api/users/refreshtoken - -
][2023-11-03 01:46:53.727 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:46:53.727 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7179/api/users/refreshtoken - - - 204 - - 0.1539ms
][2023-11-03 01:46:53.730 +01:00 [INF] Request starting HTTP/2 POST https://localhost:7179/api/users/refreshtoken application/json 582
][2023-11-03 01:46:53.730 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:46:53.731 +01:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/3/2023 12:46:50 AM', Current time (UTC): '11/3/2023 12:46:53 AM'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
][2023-11-03 01:46:53.731 +01:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/3/2023 12:46:50 AM', Current time (UTC): '11/3/2023 12:46:53 AM'.
][2023-11-03 01:46:53.731 +01:00 [INF] Executing endpoint 'back.Controllers.UsersController.RefreshToken (back)'
][2023-11-03 01:46:53.731 +01:00 [INF] Route matched with {action = "RefreshToken", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] RefreshToken(back.Models.Domain.TokenResponse) on controller back.Controllers.UsersController (back).
][2023-11-03 01:46:53.732 +01:00 [ERR] this is an ID: 0007ad25-f987-42a3-90bc-8430f299957f
][2023-11-03 01:46:53.733 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Guid), @___tokenResponse_RefreshToken_1='?'], CommandType='"Text"', CommandTimeout='30']
SELECT r."Id", r."RToken", r."Status", r."UserId"
FROM "RefreshTokens" AS r
WHERE r."UserId" = @__id_0 AND r."RToken" = @___tokenResponse_RefreshToken_1
LIMIT 1
][2023-11-03 01:46:53.735 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[@__get_Item_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT r."Id", r."RToken", r."Status", r."UserId"
FROM "RefreshTokens" AS r
WHERE r."Id" = @__get_Item_0
LIMIT 1
][2023-11-03 01:46:53.740 +01:00 [INF] Executed DbCommand (5ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?', @p2='?' (DbType = Boolean), @p3='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "RefreshTokens" ("Id", "RToken", "Status", "UserId")
VALUES (@p0, @p1, @p2, @p3);
][2023-11-03 01:46:53.740 +01:00 [INF] Executing OkObjectResult, writing value of type 'back.Models.Domain.TokenResponse'.
][2023-11-03 01:46:53.741 +01:00 [INF] Executed action back.Controllers.UsersController.RefreshToken (back) in 9.7593ms
][2023-11-03 01:46:53.741 +01:00 [INF] Executed endpoint 'back.Controllers.UsersController.RefreshToken (back)'
][2023-11-03 01:46:53.741 +01:00 [INF] Request finished HTTP/2 POST https://localhost:7179/api/users/refreshtoken application/json 582 - 200 - application/json;+charset=utf-8 10.3990ms
][2023-11-03 01:46:53.747 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7179/api/products - -
][2023-11-03 01:46:53.747 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:46:53.747 +01:00 [INF] Bearer was not authenticated. Failure message: No SecurityTokenValidator available for token.
][2023-11-03 01:46:53.747 +01:00 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (user)
][2023-11-03 01:46:53.748 +01:00 [INF] AuthenticationScheme: Bearer was challenged.
][2023-11-03 01:46:53.748 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7179/api/products - - - 401 0 - 0.5589ms
][2023-11-03 01:47:33.912 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7179/api/products - -
][2023-11-03 01:47:33.912 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:47:33.912 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7179/api/products - - - 204 - - 0.2084ms
][2023-11-03 01:47:33.916 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7179/api/products - -
][2023-11-03 01:47:33.916 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:47:33.916 +01:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/3/2023 12:47:13 AM', Current time (UTC): '11/3/2023 12:47:33 AM'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
][2023-11-03 01:47:33.917 +01:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/3/2023 12:47:13 AM', Current time (UTC): '11/3/2023 12:47:33 AM'.
][2023-11-03 01:47:33.917 +01:00 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (user)
][2023-11-03 01:47:33.917 +01:00 [INF] AuthenticationScheme: Bearer was challenged.
][2023-11-03 01:47:33.917 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7179/api/products - - - 401 0 - 1.1888ms
][2023-11-03 01:47:33.964 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7179/api/users/refreshtoken - -
][2023-11-03 01:47:33.964 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:47:33.964 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7179/api/users/refreshtoken - - - 204 - - 0.3202ms
][2023-11-03 01:47:33.969 +01:00 [INF] Request starting HTTP/2 POST https://localhost:7179/api/users/refreshtoken application/json 582
][2023-11-03 01:47:33.969 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:47:33.970 +01:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/3/2023 12:47:13 AM', Current time (UTC): '11/3/2023 12:47:33 AM'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
][2023-11-03 01:47:33.970 +01:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/3/2023 12:47:13 AM', Current time (UTC): '11/3/2023 12:47:33 AM'.
][2023-11-03 01:47:33.970 +01:00 [INF] Executing endpoint 'back.Controllers.UsersController.RefreshToken (back)'
][2023-11-03 01:47:33.970 +01:00 [INF] Route matched with {action = "RefreshToken", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] RefreshToken(back.Models.Domain.TokenResponse) on controller back.Controllers.UsersController (back).
][2023-11-03 01:47:33.972 +01:00 [ERR] this is an ID: 0007ad25-f987-42a3-90bc-8430f299957f
][2023-11-03 01:47:34.035 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__id_0='?' (DbType = Guid), @___tokenResponse_RefreshToken_1='?'], CommandType='"Text"', CommandTimeout='30']
SELECT r."Id", r."RToken", r."Status", r."UserId"
FROM "RefreshTokens" AS r
WHERE r."UserId" = @__id_0 AND r."RToken" = @___tokenResponse_RefreshToken_1
LIMIT 1
][2023-11-03 01:47:34.037 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[@__get_Item_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT r."Id", r."RToken", r."Status", r."UserId"
FROM "RefreshTokens" AS r
WHERE r."Id" = @__get_Item_0
LIMIT 1
][2023-11-03 01:47:34.040 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?', @p2='?' (DbType = Boolean), @p3='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "RefreshTokens" ("Id", "RToken", "Status", "UserId")
VALUES (@p0, @p1, @p2, @p3);
][2023-11-03 01:47:34.040 +01:00 [INF] Executing OkObjectResult, writing value of type 'back.Models.Domain.TokenResponse'.
][2023-11-03 01:47:34.040 +01:00 [INF] Executed action back.Controllers.UsersController.RefreshToken (back) in 70.0985ms
][2023-11-03 01:47:34.040 +01:00 [INF] Executed endpoint 'back.Controllers.UsersController.RefreshToken (back)'
][2023-11-03 01:47:34.040 +01:00 [INF] Request finished HTTP/2 POST https://localhost:7179/api/users/refreshtoken application/json 582 - 200 - application/json;+charset=utf-8 70.9165ms
][2023-11-03 01:47:34.114 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7179/api/products - -
][2023-11-03 01:47:34.114 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:47:34.114 +01:00 [INF] Bearer was not authenticated. Failure message: No SecurityTokenValidator available for token.
][2023-11-03 01:47:34.115 +01:00 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (user)
][2023-11-03 01:47:34.115 +01:00 [INF] AuthenticationScheme: Bearer was challenged.
][2023-11-03 01:47:34.115 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7179/api/products - - - 401 0 - 0.3414ms
][2023-11-03 01:48:10.313 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7179/api/products - -
][2023-11-03 01:48:10.313 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:48:10.313 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7179/api/products - - - 204 - - 0.1997ms
][2023-11-03 01:48:10.326 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7179/api/products - -
][2023-11-03 01:48:10.326 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:48:10.326 +01:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/3/2023 12:47:54 AM', Current time (UTC): '11/3/2023 12:48:10 AM'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
][2023-11-03 01:48:10.326 +01:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/3/2023 12:47:54 AM', Current time (UTC): '11/3/2023 12:48:10 AM'.
][2023-11-03 01:48:10.326 +01:00 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (user)
][2023-11-03 01:48:10.326 +01:00 [INF] AuthenticationScheme: Bearer was challenged.
][2023-11-03 01:48:10.327 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7179/api/products - - - 401 0 - 0.5374ms
][2023-11-03 01:48:10.426 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7179/api/users/refreshtoken - -
][2023-11-03 01:48:10.426 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:48:10.426 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7179/api/users/refreshtoken - - - 204 - - 0.1953ms
][2023-11-03 01:48:10.431 +01:00 [INF] Request starting HTTP/2 POST https://localhost:7179/api/users/refreshtoken application/json 582
][2023-11-03 01:48:10.431 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:48:10.432 +01:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/3/2023 12:47:54 AM', Current time (UTC): '11/3/2023 12:48:10 AM'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
][2023-11-03 01:48:10.432 +01:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/3/2023 12:47:54 AM', Current time (UTC): '11/3/2023 12:48:10 AM'.
][2023-11-03 01:48:10.432 +01:00 [INF] Executing endpoint 'back.Controllers.UsersController.RefreshToken (back)'
][2023-11-03 01:48:10.432 +01:00 [INF] Route matched with {action = "RefreshToken", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] RefreshToken(back.Models.Domain.TokenResponse) on controller back.Controllers.UsersController (back).
][2023-11-03 01:48:10.433 +01:00 [ERR] this is an ID: 0007ad25-f987-42a3-90bc-8430f299957f
][2023-11-03 01:48:10.435 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Guid), @___tokenResponse_RefreshToken_1='?'], CommandType='"Text"', CommandTimeout='30']
SELECT r."Id", r."RToken", r."Status", r."UserId"
FROM "RefreshTokens" AS r
WHERE r."UserId" = @__id_0 AND r."RToken" = @___tokenResponse_RefreshToken_1
LIMIT 1
][2023-11-03 01:48:10.437 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[@__get_Item_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT r."Id", r."RToken", r."Status", r."UserId"
FROM "RefreshTokens" AS r
WHERE r."Id" = @__get_Item_0
LIMIT 1
][2023-11-03 01:48:10.443 +01:00 [INF] Executed DbCommand (6ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?', @p2='?' (DbType = Boolean), @p3='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "RefreshTokens" ("Id", "RToken", "Status", "UserId")
VALUES (@p0, @p1, @p2, @p3);
][2023-11-03 01:48:10.444 +01:00 [INF] Executing OkObjectResult, writing value of type 'back.Models.Domain.TokenResponse'.
][2023-11-03 01:48:10.444 +01:00 [INF] Executed action back.Controllers.UsersController.RefreshToken (back) in 11.5897ms
][2023-11-03 01:48:10.444 +01:00 [INF] Executed endpoint 'back.Controllers.UsersController.RefreshToken (back)'
][2023-11-03 01:48:10.444 +01:00 [INF] Request finished HTTP/2 POST https://localhost:7179/api/users/refreshtoken application/json 582 - 200 - application/json;+charset=utf-8 12.5769ms
][2023-11-03 01:48:10.463 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7179/api/products - -
][2023-11-03 01:48:10.463 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:48:10.463 +01:00 [INF] Bearer was not authenticated. Failure message: No SecurityTokenValidator available for token.
][2023-11-03 01:48:10.463 +01:00 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (user)
][2023-11-03 01:48:10.463 +01:00 [INF] AuthenticationScheme: Bearer was challenged.
][2023-11-03 01:48:10.463 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7179/api/products - - - 401 0 - 0.3538ms
][2023-11-03 01:49:44.464 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7179/api/products - -
][2023-11-03 01:49:44.464 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:49:44.464 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7179/api/products - - - 204 - - 0.2129ms
][2023-11-03 01:49:44.469 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7179/api/products - -
][2023-11-03 01:49:44.469 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:49:44.469 +01:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/3/2023 12:48:30 AM', Current time (UTC): '11/3/2023 12:49:44 AM'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
][2023-11-03 01:49:44.469 +01:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/3/2023 12:48:30 AM', Current time (UTC): '11/3/2023 12:49:44 AM'.
][2023-11-03 01:49:44.469 +01:00 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (user)
][2023-11-03 01:49:44.469 +01:00 [INF] AuthenticationScheme: Bearer was challenged.
][2023-11-03 01:49:44.469 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7179/api/products - - - 401 0 - 0.6313ms
][2023-11-03 01:49:44.488 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7179/api/users/refreshtoken - -
][2023-11-03 01:49:44.488 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:49:44.488 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7179/api/users/refreshtoken - - - 204 - - 0.1807ms
][2023-11-03 01:49:44.492 +01:00 [INF] Request starting HTTP/2 POST https://localhost:7179/api/users/refreshtoken application/json 582
][2023-11-03 01:49:44.492 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:49:44.492 +01:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/3/2023 12:48:30 AM', Current time (UTC): '11/3/2023 12:49:44 AM'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
][2023-11-03 01:49:44.492 +01:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/3/2023 12:48:30 AM', Current time (UTC): '11/3/2023 12:49:44 AM'.
][2023-11-03 01:49:44.492 +01:00 [INF] Executing endpoint 'back.Controllers.UsersController.RefreshToken (back)'
][2023-11-03 01:49:44.492 +01:00 [INF] Route matched with {action = "RefreshToken", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] RefreshToken(back.Models.Domain.TokenResponse) on controller back.Controllers.UsersController (back).
][2023-11-03 01:49:44.493 +01:00 [ERR] this is an ID: 0007ad25-f987-42a3-90bc-8430f299957f
][2023-11-03 01:49:44.494 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Guid), @___tokenResponse_RefreshToken_1='?'], CommandType='"Text"', CommandTimeout='30']
SELECT r."Id", r."RToken", r."Status", r."UserId"
FROM "RefreshTokens" AS r
WHERE r."UserId" = @__id_0 AND r."RToken" = @___tokenResponse_RefreshToken_1
LIMIT 1
][2023-11-03 01:49:44.497 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[@__get_Item_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT r."Id", r."RToken", r."Status", r."UserId"
FROM "RefreshTokens" AS r
WHERE r."Id" = @__get_Item_0
LIMIT 1
][2023-11-03 01:49:44.502 +01:00 [INF] Executed DbCommand (5ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?', @p2='?' (DbType = Boolean), @p3='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "RefreshTokens" ("Id", "RToken", "Status", "UserId")
VALUES (@p0, @p1, @p2, @p3);
][2023-11-03 01:49:44.503 +01:00 [INF] Executing OkObjectResult, writing value of type 'back.Models.Domain.TokenResponse'.
][2023-11-03 01:49:44.503 +01:00 [INF] Executed action back.Controllers.UsersController.RefreshToken (back) in 10.6076ms
][2023-11-03 01:49:44.503 +01:00 [INF] Executed endpoint 'back.Controllers.UsersController.RefreshToken (back)'
][2023-11-03 01:49:44.503 +01:00 [INF] Request finished HTTP/2 POST https://localhost:7179/api/users/refreshtoken application/json 582 - 200 - application/json;+charset=utf-8 11.3187ms
][2023-11-03 01:49:44.603 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7179/api/products - -
][2023-11-03 01:49:44.603 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:49:44.603 +01:00 [INF] Bearer was not authenticated. Failure message: No SecurityTokenValidator available for token.
][2023-11-03 01:49:44.603 +01:00 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (user)
][2023-11-03 01:49:44.603 +01:00 [INF] AuthenticationScheme: Bearer was challenged.
][2023-11-03 01:49:44.603 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7179/api/products - - - 401 0 - 0.3863ms
][2023-11-03 01:50:21.741 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7179/api/products - -
][2023-11-03 01:50:21.741 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:50:21.742 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7179/api/products - - - 204 - - 0.2702ms
][2023-11-03 01:50:21.755 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7179/api/products - -
][2023-11-03 01:50:21.755 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:50:21.755 +01:00 [INF] Bearer was not authenticated. Failure message: No SecurityTokenValidator available for token.
][2023-11-03 01:50:21.755 +01:00 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (user)
][2023-11-03 01:50:21.755 +01:00 [INF] AuthenticationScheme: Bearer was challenged.
][2023-11-03 01:50:21.755 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7179/api/products - - - 401 0 - 0.3028ms
][2023-11-03 01:50:21.862 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7179/api/users/refreshtoken - -
][2023-11-03 01:50:21.862 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:50:21.862 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7179/api/users/refreshtoken - - - 204 - - 0.1785ms
][2023-11-03 01:50:21.867 +01:00 [INF] Request starting HTTP/2 POST https://localhost:7179/api/users/refreshtoken application/json 582
][2023-11-03 01:50:21.867 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:50:21.867 +01:00 [INF] Bearer was not authenticated. Failure message: No SecurityTokenValidator available for token.
][2023-11-03 01:50:21.867 +01:00 [INF] Executing endpoint 'back.Controllers.UsersController.RefreshToken (back)'
][2023-11-03 01:50:21.868 +01:00 [INF] Route matched with {action = "RefreshToken", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] RefreshToken(back.Models.Domain.TokenResponse) on controller back.Controllers.UsersController (back).
][2023-11-03 01:50:21.868 +01:00 [ERR] this is an ID: 0007ad25-f987-42a3-90bc-8430f299957f
][2023-11-03 01:50:21.870 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Guid), @___tokenResponse_RefreshToken_1='?'], CommandType='"Text"', CommandTimeout='30']
SELECT r."Id", r."RToken", r."Status", r."UserId"
FROM "RefreshTokens" AS r
WHERE r."UserId" = @__id_0 AND r."RToken" = @___tokenResponse_RefreshToken_1
LIMIT 1
][2023-11-03 01:50:21.872 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[@__get_Item_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT r."Id", r."RToken", r."Status", r."UserId"
FROM "RefreshTokens" AS r
WHERE r."Id" = @__get_Item_0
LIMIT 1
][2023-11-03 01:50:21.878 +01:00 [INF] Executed DbCommand (5ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?', @p2='?' (DbType = Boolean), @p3='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "RefreshTokens" ("Id", "RToken", "Status", "UserId")
VALUES (@p0, @p1, @p2, @p3);
][2023-11-03 01:50:21.878 +01:00 [INF] Executing OkObjectResult, writing value of type 'back.Models.Domain.TokenResponse'.
][2023-11-03 01:50:21.878 +01:00 [INF] Executed action back.Controllers.UsersController.RefreshToken (back) in 10.4789ms
][2023-11-03 01:50:21.878 +01:00 [INF] Executed endpoint 'back.Controllers.UsersController.RefreshToken (back)'
][2023-11-03 01:50:21.878 +01:00 [INF] Request finished HTTP/2 POST https://localhost:7179/api/users/refreshtoken application/json 582 - 200 - application/json;+charset=utf-8 11.0829ms
][2023-11-03 01:50:21.890 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7179/api/products - -
][2023-11-03 01:50:21.890 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:50:21.890 +01:00 [INF] Bearer was not authenticated. Failure message: No SecurityTokenValidator available for token.
][2023-11-03 01:50:21.890 +01:00 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (user)
][2023-11-03 01:50:21.892 +01:00 [INF] AuthenticationScheme: Bearer was challenged.
][2023-11-03 01:50:21.892 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7179/api/products - - - 401 0 - 2.2170ms
][2023-11-03 01:50:31.965 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7179/api/products - -
][2023-11-03 01:50:31.965 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:50:31.965 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7179/api/products - - - 204 - - 0.1882ms
][2023-11-03 01:50:31.970 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7179/api/products - -
][2023-11-03 01:50:31.970 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:50:31.970 +01:00 [INF] Executing endpoint 'back.Controllers.ProductsController.GetProducts (back)'
][2023-11-03 01:50:31.970 +01:00 [INF] Route matched with {action = "GetProducts", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProducts() on controller back.Controllers.ProductsController (back).
][2023-11-03 01:50:31.974 +01:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Description", p."PublishedDate", p."Thumbnail", p."Title", p."Visibility"
FROM "Products" AS p
][2023-11-03 01:50:31.974 +01:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[back.Repositories.ProductEntity, back, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
][2023-11-03 01:50:31.975 +01:00 [INF] Executed action back.Controllers.ProductsController.GetProducts (back) in 4.3818ms
][2023-11-03 01:50:31.975 +01:00 [INF] Executed endpoint 'back.Controllers.ProductsController.GetProducts (back)'
][2023-11-03 01:50:31.975 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7179/api/products - - - 200 - application/json;+charset=utf-8 5.1184ms
][2023-11-03 01:50:32.012 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7179/Uploads/Products/cba0382e-959f-4e99-a266-9257a0a63a95.jpg - -
][2023-11-03 01:50:32.012 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7179/Uploads/Products/c7a2cb23-9ac1-4967-890f-7d18e6997727.jpg - -
][2023-11-03 01:50:32.012 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7179/Uploads/Products/db580bd6-b31e-48f9-8590-16b04186b818.jpg - -
][2023-11-03 01:50:32.012 +01:00 [INF] The file /Uploads/Products/c7a2cb23-9ac1-4967-890f-7d18e6997727.jpg was not modified
][2023-11-03 01:50:32.012 +01:00 [INF] The file /Uploads/Products/cba0382e-959f-4e99-a266-9257a0a63a95.jpg was not modified
][2023-11-03 01:50:32.012 +01:00 [INF] The file /Uploads/Products/db580bd6-b31e-48f9-8590-16b04186b818.jpg was not modified
][2023-11-03 01:50:32.012 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7179/Uploads/Products/cba0382e-959f-4e99-a266-9257a0a63a95.jpg - - - 304 - image/jpeg 0.5069ms
][2023-11-03 01:50:32.012 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7179/Uploads/Products/c7a2cb23-9ac1-4967-890f-7d18e6997727.jpg - - - 304 - image/jpeg 0.4591ms
][2023-11-03 01:50:32.012 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7179/Uploads/Products/db580bd6-b31e-48f9-8590-16b04186b818.jpg - - - 304 - image/jpeg 0.5136ms
][2023-11-03 01:50:35.197 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7179/api/products - -
][2023-11-03 01:50:35.197 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:50:35.197 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7179/api/products - - - 204 - - 0.4940ms
][2023-11-03 01:50:35.203 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7179/api/products - -
][2023-11-03 01:50:35.204 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:50:35.204 +01:00 [INF] Executing endpoint 'back.Controllers.ProductsController.GetProducts (back)'
][2023-11-03 01:50:35.204 +01:00 [INF] Route matched with {action = "GetProducts", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProducts() on controller back.Controllers.ProductsController (back).
][2023-11-03 01:50:35.205 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Description", p."PublishedDate", p."Thumbnail", p."Title", p."Visibility"
FROM "Products" AS p
][2023-11-03 01:50:35.205 +01:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[back.Repositories.ProductEntity, back, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
][2023-11-03 01:50:35.206 +01:00 [INF] Executed action back.Controllers.ProductsController.GetProducts (back) in 1.8172ms
][2023-11-03 01:50:35.206 +01:00 [INF] Executed endpoint 'back.Controllers.ProductsController.GetProducts (back)'
][2023-11-03 01:50:35.206 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7179/api/products - - - 200 - application/json;+charset=utf-8 2.3543ms
][2023-11-03 01:50:35.316 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7179/Uploads/Products/cba0382e-959f-4e99-a266-9257a0a63a95.jpg - -
][2023-11-03 01:50:35.319 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7179/Uploads/Products/c7a2cb23-9ac1-4967-890f-7d18e6997727.jpg - -
][2023-11-03 01:50:35.319 +01:00 [INF] Sending file. Request path: '/Uploads/Products/cba0382e-959f-4e99-a266-9257a0a63a95.jpg'. Physical path: 'C:\Users\melyo\Documents\github\melyonousi\dotnet-angular\dot-net\dotnet-angular-demo-03-use-wwwroot\back\wwwroot\Uploads\Products\cba0382e-959f-4e99-a266-9257a0a63a95.jpg'
][2023-11-03 01:50:35.319 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7179/Uploads/Products/cba0382e-959f-4e99-a266-9257a0a63a95.jpg - - - 200 588937 image/jpeg 3.6028ms
][2023-11-03 01:50:35.321 +01:00 [INF] Sending file. Request path: '/Uploads/Products/c7a2cb23-9ac1-4967-890f-7d18e6997727.jpg'. Physical path: 'C:\Users\melyo\Documents\github\melyonousi\dotnet-angular\dot-net\dotnet-angular-demo-03-use-wwwroot\back\wwwroot\Uploads\Products\c7a2cb23-9ac1-4967-890f-7d18e6997727.jpg'
][2023-11-03 01:50:35.321 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7179/Uploads/Products/c7a2cb23-9ac1-4967-890f-7d18e6997727.jpg - - - 200 289712 image/jpeg 2.4343ms
][2023-11-03 01:50:35.324 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7179/Uploads/Products/db580bd6-b31e-48f9-8590-16b04186b818.jpg - -
][2023-11-03 01:50:35.327 +01:00 [INF] Sending file. Request path: '/Uploads/Products/db580bd6-b31e-48f9-8590-16b04186b818.jpg'. Physical path: 'C:\Users\melyo\Documents\github\melyonousi\dotnet-angular\dot-net\dotnet-angular-demo-03-use-wwwroot\back\wwwroot\Uploads\Products\db580bd6-b31e-48f9-8590-16b04186b818.jpg'
][2023-11-03 01:50:35.327 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7179/Uploads/Products/db580bd6-b31e-48f9-8590-16b04186b818.jpg - - - 200 518046 image/jpeg 3.2261ms
][2023-11-03 01:50:46.037 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7179/api/products - -
][2023-11-03 01:50:46.037 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:50:46.037 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7179/api/products - - - 204 - - 0.1997ms
][2023-11-03 01:50:46.049 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7179/api/products - -
][2023-11-03 01:50:46.049 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:50:46.049 +01:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/3/2023 12:50:41 AM', Current time (UTC): '11/3/2023 12:50:46 AM'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
][2023-11-03 01:50:46.050 +01:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/3/2023 12:50:41 AM', Current time (UTC): '11/3/2023 12:50:46 AM'.
][2023-11-03 01:50:46.050 +01:00 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (user)
][2023-11-03 01:50:46.050 +01:00 [INF] AuthenticationScheme: Bearer was challenged.
][2023-11-03 01:50:46.050 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7179/api/products - - - 401 0 - 0.6402ms
][2023-11-03 01:50:46.057 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7179/api/users/refreshtoken - -
][2023-11-03 01:50:46.057 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:50:46.057 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7179/api/users/refreshtoken - - - 204 - - 0.1492ms
][2023-11-03 01:50:46.061 +01:00 [INF] Request starting HTTP/2 POST https://localhost:7179/api/users/refreshtoken application/json 582
][2023-11-03 01:50:46.061 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:50:46.061 +01:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/3/2023 12:50:41 AM', Current time (UTC): '11/3/2023 12:50:46 AM'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
][2023-11-03 01:50:46.061 +01:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/3/2023 12:50:41 AM', Current time (UTC): '11/3/2023 12:50:46 AM'.
][2023-11-03 01:50:46.061 +01:00 [INF] Executing endpoint 'back.Controllers.UsersController.RefreshToken (back)'
][2023-11-03 01:50:46.061 +01:00 [INF] Route matched with {action = "RefreshToken", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] RefreshToken(back.Models.Domain.TokenResponse) on controller back.Controllers.UsersController (back).
][2023-11-03 01:50:46.062 +01:00 [ERR] this is an ID: 0007ad25-f987-42a3-90bc-8430f299957f
][2023-11-03 01:50:46.065 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__id_0='?' (DbType = Guid), @___tokenResponse_RefreshToken_1='?'], CommandType='"Text"', CommandTimeout='30']
SELECT r."Id", r."RToken", r."Status", r."UserId"
FROM "RefreshTokens" AS r
WHERE r."UserId" = @__id_0 AND r."RToken" = @___tokenResponse_RefreshToken_1
LIMIT 1
][2023-11-03 01:50:46.066 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[@__get_Item_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT r."Id", r."RToken", r."Status", r."UserId"
FROM "RefreshTokens" AS r
WHERE r."Id" = @__get_Item_0
LIMIT 1
][2023-11-03 01:50:46.067 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?', @p2='?' (DbType = Boolean), @p3='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "RefreshTokens" ("Id", "RToken", "Status", "UserId")
VALUES (@p0, @p1, @p2, @p3);
][2023-11-03 01:50:46.068 +01:00 [INF] Executing OkObjectResult, writing value of type 'back.Models.Domain.TokenResponse'.
][2023-11-03 01:50:46.068 +01:00 [INF] Executed action back.Controllers.UsersController.RefreshToken (back) in 6.1672ms
][2023-11-03 01:50:46.068 +01:00 [INF] Executed endpoint 'back.Controllers.UsersController.RefreshToken (back)'
][2023-11-03 01:50:46.068 +01:00 [INF] Request finished HTTP/2 POST https://localhost:7179/api/users/refreshtoken application/json 582 - 200 - application/json;+charset=utf-8 7.1444ms
][2023-11-03 01:50:46.075 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7179/api/products - -
][2023-11-03 01:50:46.075 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:50:46.075 +01:00 [INF] Executing endpoint 'back.Controllers.ProductsController.GetProducts (back)'
][2023-11-03 01:50:46.075 +01:00 [INF] Route matched with {action = "GetProducts", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProducts() on controller back.Controllers.ProductsController (back).
][2023-11-03 01:50:46.076 +01:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Description", p."PublishedDate", p."Thumbnail", p."Title", p."Visibility"
FROM "Products" AS p
][2023-11-03 01:50:46.077 +01:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[back.Repositories.ProductEntity, back, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
][2023-11-03 01:50:46.077 +01:00 [INF] Executed action back.Controllers.ProductsController.GetProducts (back) in 1.7551ms
][2023-11-03 01:50:46.077 +01:00 [INF] Executed endpoint 'back.Controllers.ProductsController.GetProducts (back)'
][2023-11-03 01:50:46.077 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7179/api/products - - - 200 - application/json;+charset=utf-8 2.2357ms
][2023-11-03 01:50:51.636 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7179/api/categories - -
][2023-11-03 01:50:51.636 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:50:51.636 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7179/api/categories - - - 204 - - 0.2407ms
][2023-11-03 01:50:51.654 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7179/api/categories - -
][2023-11-03 01:50:51.654 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:50:51.654 +01:00 [INF] Executing endpoint 'back.Controllers.CategoriesController.GetCategories (back)'
][2023-11-03 01:50:51.654 +01:00 [INF] Route matched with {action = "GetCategories", controller = "Categories"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCategories() on controller back.Controllers.CategoriesController (back).
][2023-11-03 01:50:51.657 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c."Id", c."Name", c."UrlHandle"
FROM "Categories" AS c
][2023-11-03 01:50:51.657 +01:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[back.Models.Domain.Category, back, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
][2023-11-03 01:50:51.657 +01:00 [INF] Executed action back.Controllers.CategoriesController.GetCategories (back) in 3.0754ms
][2023-11-03 01:50:51.657 +01:00 [INF] Executed endpoint 'back.Controllers.CategoriesController.GetCategories (back)'
][2023-11-03 01:50:51.657 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7179/api/categories - - - 200 - application/json;+charset=utf-8 3.4626ms
][2023-11-03 01:50:52.917 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7179/api/products - -
][2023-11-03 01:50:52.918 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:50:52.918 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7179/api/products - - - 204 - - 0.1969ms
][2023-11-03 01:50:52.930 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7179/api/products - -
][2023-11-03 01:50:52.930 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:50:52.930 +01:00 [INF] Executing endpoint 'back.Controllers.ProductsController.GetProducts (back)'
][2023-11-03 01:50:52.930 +01:00 [INF] Route matched with {action = "GetProducts", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProducts() on controller back.Controllers.ProductsController (back).
][2023-11-03 01:50:52.931 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Description", p."PublishedDate", p."Thumbnail", p."Title", p."Visibility"
FROM "Products" AS p
][2023-11-03 01:50:52.931 +01:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[back.Repositories.ProductEntity, back, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
][2023-11-03 01:50:52.931 +01:00 [INF] Executed action back.Controllers.ProductsController.GetProducts (back) in 1.3404ms
][2023-11-03 01:50:52.931 +01:00 [INF] Executed endpoint 'back.Controllers.ProductsController.GetProducts (back)'
][2023-11-03 01:50:52.931 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7179/api/products - - - 200 - application/json;+charset=utf-8 1.8255ms
][2023-11-03 01:50:56.179 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7179/api/products - -
][2023-11-03 01:50:56.179 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:50:56.179 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7179/api/products - - - 204 - - 0.2254ms
][2023-11-03 01:50:56.191 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7179/api/products - -
][2023-11-03 01:50:56.191 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:50:56.192 +01:00 [INF] Executing endpoint 'back.Controllers.ProductsController.GetProducts (back)'
][2023-11-03 01:50:56.192 +01:00 [INF] Route matched with {action = "GetProducts", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProducts() on controller back.Controllers.ProductsController (back).
][2023-11-03 01:50:56.193 +01:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Description", p."PublishedDate", p."Thumbnail", p."Title", p."Visibility"
FROM "Products" AS p
][2023-11-03 01:50:56.193 +01:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[back.Repositories.ProductEntity, back, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
][2023-11-03 01:50:56.193 +01:00 [INF] Executed action back.Controllers.ProductsController.GetProducts (back) in 1.3349ms
][2023-11-03 01:50:56.193 +01:00 [INF] Executed endpoint 'back.Controllers.ProductsController.GetProducts (back)'
][2023-11-03 01:50:56.193 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7179/api/products - - - 200 - application/json;+charset=utf-8 1.8834ms
][2023-11-03 01:50:56.298 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7179/Uploads/Products/cba0382e-959f-4e99-a266-9257a0a63a95.jpg - -
][2023-11-03 01:50:56.300 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7179/Uploads/Products/c7a2cb23-9ac1-4967-890f-7d18e6997727.jpg - -
][2023-11-03 01:50:56.304 +01:00 [INF] Sending file. Request path: '/Uploads/Products/cba0382e-959f-4e99-a266-9257a0a63a95.jpg'. Physical path: 'C:\Users\melyo\Documents\github\melyonousi\dotnet-angular\dot-net\dotnet-angular-demo-03-use-wwwroot\back\wwwroot\Uploads\Products\cba0382e-959f-4e99-a266-9257a0a63a95.jpg'
][2023-11-03 01:50:56.304 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7179/Uploads/Products/cba0382e-959f-4e99-a266-9257a0a63a95.jpg - - - 200 588937 image/jpeg 6.0744ms
][2023-11-03 01:50:56.305 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7179/Uploads/Products/db580bd6-b31e-48f9-8590-16b04186b818.jpg - -
][2023-11-03 01:50:56.308 +01:00 [INF] Sending file. Request path: '/Uploads/Products/c7a2cb23-9ac1-4967-890f-7d18e6997727.jpg'. Physical path: 'C:\Users\melyo\Documents\github\melyonousi\dotnet-angular\dot-net\dotnet-angular-demo-03-use-wwwroot\back\wwwroot\Uploads\Products\c7a2cb23-9ac1-4967-890f-7d18e6997727.jpg'
][2023-11-03 01:50:56.308 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7179/Uploads/Products/c7a2cb23-9ac1-4967-890f-7d18e6997727.jpg - - - 200 289712 image/jpeg 7.6470ms
][2023-11-03 01:50:56.311 +01:00 [INF] Sending file. Request path: '/Uploads/Products/db580bd6-b31e-48f9-8590-16b04186b818.jpg'. Physical path: 'C:\Users\melyo\Documents\github\melyonousi\dotnet-angular\dot-net\dotnet-angular-demo-03-use-wwwroot\back\wwwroot\Uploads\Products\db580bd6-b31e-48f9-8590-16b04186b818.jpg'
][2023-11-03 01:50:56.312 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7179/Uploads/Products/db580bd6-b31e-48f9-8590-16b04186b818.jpg - - - 200 518046 image/jpeg 6.5567ms
][2023-11-03 01:51:00.245 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7179/api/blogposts - -
][2023-11-03 01:51:00.245 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:51:00.245 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7179/api/blogposts - - - 204 - - 0.3240ms
][2023-11-03 01:51:00.259 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7179/api/blogposts - -
][2023-11-03 01:51:00.259 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:51:00.259 +01:00 [INF] Executing endpoint 'back.Controllers.BlogPostsController.GetBlogPosts (back)'
][2023-11-03 01:51:00.259 +01:00 [INF] Route matched with {action = "GetBlogPosts", controller = "BlogPosts"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBlogPosts() on controller back.Controllers.BlogPostsController (back).
][2023-11-03 01:51:00.262 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT b."Id", b."Author", b."Content", b."FeaturedImageUrl", b."IsVisible", b."PublishedDate", b."ShortDescription", b."Title", b."UrlHandle"
FROM "BlogPosts" AS b
][2023-11-03 01:51:00.262 +01:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[back.Models.Domain.BlogPost, back, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
][2023-11-03 01:51:00.262 +01:00 [INF] Executed action back.Controllers.BlogPostsController.GetBlogPosts (back) in 2.8784ms
][2023-11-03 01:51:00.262 +01:00 [INF] Executed endpoint 'back.Controllers.BlogPostsController.GetBlogPosts (back)'
][2023-11-03 01:51:00.262 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7179/api/blogposts - - - 200 - application/json;+charset=utf-8 3.4076ms
][2023-11-03 01:51:08.885 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7179/api/blogposts - -
][2023-11-03 01:51:08.885 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:51:08.885 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7179/api/blogposts - - - 204 - - 0.1541ms
][2023-11-03 01:51:08.889 +01:00 [INF] Request starting HTTP/2 POST https://localhost:7179/api/blogposts multipart/form-data;+boundary=----WebKitFormBoundaryrn30KUfNuRhlDE86 1858
][2023-11-03 01:51:08.889 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:51:08.889 +01:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/3/2023 12:51:06 AM', Current time (UTC): '11/3/2023 12:51:08 AM'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
][2023-11-03 01:51:08.890 +01:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/3/2023 12:51:06 AM', Current time (UTC): '11/3/2023 12:51:08 AM'.
][2023-11-03 01:51:08.890 +01:00 [INF] Executing endpoint 'back.Controllers.BlogPostsController.CreateBlogPosts (back)'
][2023-11-03 01:51:08.894 +01:00 [INF] Route matched with {action = "CreateBlogPosts", controller = "BlogPosts"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CreateBlogPosts(Microsoft.AspNetCore.Http.IFormFile, back.Models.DTO.CreateBlogPostRequestDTO) on controller back.Controllers.BlogPostsController (back).
][2023-11-03 01:51:08.898 +01:00 [INF] Executing BadRequestObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ValidationProblemDetails'.
][2023-11-03 01:51:08.899 +01:00 [INF] Executed action back.Controllers.BlogPostsController.CreateBlogPosts (back) in 4.8695ms
][2023-11-03 01:51:08.899 +01:00 [INF] Executed endpoint 'back.Controllers.BlogPostsController.CreateBlogPosts (back)'
][2023-11-03 01:51:08.899 +01:00 [INF] Request finished HTTP/2 POST https://localhost:7179/api/blogposts multipart/form-data;+boundary=----WebKitFormBoundaryrn30KUfNuRhlDE86 1858 - 400 - application/problem+json;+charset=utf-8 10.1594ms
][2023-11-03 01:51:14.826 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7179/api/blogposts - -
][2023-11-03 01:51:14.826 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:51:14.826 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7179/api/blogposts - - - 204 - - 0.1711ms
][2023-11-03 01:51:14.829 +01:00 [INF] Request starting HTTP/2 POST https://localhost:7179/api/blogposts multipart/form-data;+boundary=----WebKitFormBoundaryR7qjFAK0xaPLCPFT 971459
][2023-11-03 01:51:14.829 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:51:14.830 +01:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/3/2023 12:51:06 AM', Current time (UTC): '11/3/2023 12:51:14 AM'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
][2023-11-03 01:51:14.830 +01:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/3/2023 12:51:06 AM', Current time (UTC): '11/3/2023 12:51:14 AM'.
][2023-11-03 01:51:14.830 +01:00 [INF] Executing endpoint 'back.Controllers.BlogPostsController.CreateBlogPosts (back)'
][2023-11-03 01:51:14.830 +01:00 [INF] Route matched with {action = "CreateBlogPosts", controller = "BlogPosts"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CreateBlogPosts(Microsoft.AspNetCore.Http.IFormFile, back.Models.DTO.CreateBlogPostRequestDTO) on controller back.Controllers.BlogPostsController (back).
][2023-11-03 01:51:14.860 +01:00 [INF] Executed DbCommand (5ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?', @p2='?', @p3='?', @p4='?' (DbType = Boolean), @p5='?' (DbType = DateTime), @p6='?', @p7='?', @p8='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "BlogPosts" ("Id", "Author", "Content", "FeaturedImageUrl", "IsVisible", "PublishedDate", "ShortDescription", "Title", "UrlHandle")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8);
][2023-11-03 01:51:14.861 +01:00 [INF] Executing OkObjectResult, writing value of type 'back.Models.DTO.BlogPostDTO'.
][2023-11-03 01:51:14.868 +01:00 [INF] Executed action back.Controllers.BlogPostsController.CreateBlogPosts (back) in 37.8395ms
][2023-11-03 01:51:14.868 +01:00 [INF] Executed endpoint 'back.Controllers.BlogPostsController.CreateBlogPosts (back)'
][2023-11-03 01:51:14.868 +01:00 [INF] Request finished HTTP/2 POST https://localhost:7179/api/blogposts multipart/form-data;+boundary=----WebKitFormBoundaryR7qjFAK0xaPLCPFT 971459 - 200 - application/json;+charset=utf-8 38.9460ms
][2023-11-03 01:51:14.912 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7179/api/blogposts - -
][2023-11-03 01:51:14.912 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:51:14.912 +01:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/3/2023 12:51:06 AM', Current time (UTC): '11/3/2023 12:51:14 AM'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
][2023-11-03 01:51:14.913 +01:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/3/2023 12:51:06 AM', Current time (UTC): '11/3/2023 12:51:14 AM'.
][2023-11-03 01:51:14.913 +01:00 [INF] Executing endpoint 'back.Controllers.BlogPostsController.GetBlogPosts (back)'
][2023-11-03 01:51:14.913 +01:00 [INF] Route matched with {action = "GetBlogPosts", controller = "BlogPosts"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBlogPosts() on controller back.Controllers.BlogPostsController (back).
][2023-11-03 01:51:14.913 +01:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT b."Id", b."Author", b."Content", b."FeaturedImageUrl", b."IsVisible", b."PublishedDate", b."ShortDescription", b."Title", b."UrlHandle"
FROM "BlogPosts" AS b
][2023-11-03 01:51:14.914 +01:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[back.Models.Domain.BlogPost, back, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
][2023-11-03 01:51:14.915 +01:00 [INF] Executed action back.Controllers.BlogPostsController.GetBlogPosts (back) in 2.1416ms
][2023-11-03 01:51:14.915 +01:00 [INF] Executed endpoint 'back.Controllers.BlogPostsController.GetBlogPosts (back)'
][2023-11-03 01:51:14.915 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7179/api/blogposts - - - 200 - application/json;+charset=utf-8 2.8564ms
][2023-11-03 01:51:17.688 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7179/api/products - -
][2023-11-03 01:51:17.688 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:51:17.688 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7179/api/products - - - 204 - - 0.1821ms
][2023-11-03 01:51:17.692 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7179/api/products - -
][2023-11-03 01:51:17.692 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:51:17.692 +01:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/3/2023 12:51:06 AM', Current time (UTC): '11/3/2023 12:51:17 AM'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
][2023-11-03 01:51:17.693 +01:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/3/2023 12:51:06 AM', Current time (UTC): '11/3/2023 12:51:17 AM'.
][2023-11-03 01:51:17.693 +01:00 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (user)
][2023-11-03 01:51:17.693 +01:00 [INF] AuthenticationScheme: Bearer was challenged.
][2023-11-03 01:51:17.693 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7179/api/products - - - 401 0 - 0.6888ms
][2023-11-03 01:51:17.701 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7179/api/users/refreshtoken - -
][2023-11-03 01:51:17.701 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:51:17.701 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7179/api/users/refreshtoken - - - 204 - - 0.2121ms
][2023-11-03 01:51:17.713 +01:00 [INF] Request starting HTTP/2 POST https://localhost:7179/api/users/refreshtoken application/json 582
][2023-11-03 01:51:17.713 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:51:17.713 +01:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/3/2023 12:51:06 AM', Current time (UTC): '11/3/2023 12:51:17 AM'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
][2023-11-03 01:51:17.713 +01:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/3/2023 12:51:06 AM', Current time (UTC): '11/3/2023 12:51:17 AM'.
][2023-11-03 01:51:17.713 +01:00 [INF] Executing endpoint 'back.Controllers.UsersController.RefreshToken (back)'
][2023-11-03 01:51:17.713 +01:00 [INF] Route matched with {action = "RefreshToken", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] RefreshToken(back.Models.Domain.TokenResponse) on controller back.Controllers.UsersController (back).
][2023-11-03 01:51:17.714 +01:00 [ERR] this is an ID: 0007ad25-f987-42a3-90bc-8430f299957f
][2023-11-03 01:51:17.715 +01:00 [INF] Executed DbCommand (0ms) [Parameters=[@__id_0='?' (DbType = Guid), @___tokenResponse_RefreshToken_1='?'], CommandType='"Text"', CommandTimeout='30']
SELECT r."Id", r."RToken", r."Status", r."UserId"
FROM "RefreshTokens" AS r
WHERE r."UserId" = @__id_0 AND r."RToken" = @___tokenResponse_RefreshToken_1
LIMIT 1
][2023-11-03 01:51:17.716 +01:00 [INF] Executed DbCommand (0ms) [Parameters=[@__get_Item_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT r."Id", r."RToken", r."Status", r."UserId"
FROM "RefreshTokens" AS r
WHERE r."Id" = @__get_Item_0
LIMIT 1
][2023-11-03 01:51:17.722 +01:00 [INF] Executed DbCommand (5ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?', @p2='?' (DbType = Boolean), @p3='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "RefreshTokens" ("Id", "RToken", "Status", "UserId")
VALUES (@p0, @p1, @p2, @p3);
][2023-11-03 01:51:17.722 +01:00 [INF] Executing OkObjectResult, writing value of type 'back.Models.Domain.TokenResponse'.
][2023-11-03 01:51:17.722 +01:00 [INF] Executed action back.Controllers.UsersController.RefreshToken (back) in 9.0942ms
][2023-11-03 01:51:17.722 +01:00 [INF] Executed endpoint 'back.Controllers.UsersController.RefreshToken (back)'
][2023-11-03 01:51:17.722 +01:00 [INF] Request finished HTTP/2 POST https://localhost:7179/api/users/refreshtoken application/json 582 - 200 - application/json;+charset=utf-8 9.7074ms
][2023-11-03 01:51:17.730 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7179/api/products - -
][2023-11-03 01:51:17.730 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:51:17.731 +01:00 [INF] Executing endpoint 'back.Controllers.ProductsController.GetProducts (back)'
][2023-11-03 01:51:17.731 +01:00 [INF] Route matched with {action = "GetProducts", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProducts() on controller back.Controllers.ProductsController (back).
][2023-11-03 01:51:17.731 +01:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Description", p."PublishedDate", p."Thumbnail", p."Title", p."Visibility"
FROM "Products" AS p
][2023-11-03 01:51:17.731 +01:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[back.Repositories.ProductEntity, back, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
][2023-11-03 01:51:17.732 +01:00 [INF] Executed action back.Controllers.ProductsController.GetProducts (back) in 0.9928ms
][2023-11-03 01:51:17.732 +01:00 [INF] Executed endpoint 'back.Controllers.ProductsController.GetProducts (back)'
][2023-11-03 01:51:17.732 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7179/api/products - - - 200 - application/json;+charset=utf-8 1.4058ms
][2023-11-03 01:57:53.453 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7179/api/products - -
][2023-11-03 01:57:53.453 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:57:53.453 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7179/api/products - - - 204 - - 0.3178ms
][2023-11-03 01:57:53.467 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7179/api/products - -
][2023-11-03 01:57:53.467 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:57:53.467 +01:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/3/2023 12:51:37 AM', Current time (UTC): '11/3/2023 12:57:53 AM'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
][2023-11-03 01:57:53.467 +01:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/3/2023 12:51:37 AM', Current time (UTC): '11/3/2023 12:57:53 AM'.
][2023-11-03 01:57:53.467 +01:00 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (user)
][2023-11-03 01:57:53.468 +01:00 [INF] AuthenticationScheme: Bearer was challenged.
][2023-11-03 01:57:53.468 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7179/api/products - - - 401 0 - 0.8267ms
][2023-11-03 01:57:53.582 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7179/api/users/refreshtoken - -
][2023-11-03 01:57:53.582 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:57:53.582 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7179/api/users/refreshtoken - - - 204 - - 0.1801ms
][2023-11-03 01:57:53.586 +01:00 [INF] Request starting HTTP/2 POST https://localhost:7179/api/users/refreshtoken application/json 582
][2023-11-03 01:57:53.586 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:57:53.586 +01:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/3/2023 12:51:37 AM', Current time (UTC): '11/3/2023 12:57:53 AM'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
][2023-11-03 01:57:53.586 +01:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/3/2023 12:51:37 AM', Current time (UTC): '11/3/2023 12:57:53 AM'.
][2023-11-03 01:57:53.586 +01:00 [INF] Executing endpoint 'back.Controllers.UsersController.RefreshToken (back)'
][2023-11-03 01:57:53.586 +01:00 [INF] Route matched with {action = "RefreshToken", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] RefreshToken(back.Models.Domain.TokenResponse) on controller back.Controllers.UsersController (back).
][2023-11-03 01:57:53.587 +01:00 [INF] Executed action back.Controllers.UsersController.RefreshToken (back) in 0.6172ms
][2023-11-03 01:57:53.587 +01:00 [INF] Executed endpoint 'back.Controllers.UsersController.RefreshToken (back)'
][2023-11-03 01:57:53.589 +01:00 [ERR] An unhandled exception has occurred while executing the request.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/3/2023 12:51:37 AM', Current time (UTC): '11/3/2023 12:57:53 AM'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at back.Repositories.Implementation.UserRespository.RefresshToken(TokenResponse _tokenResponse) in C:\Users\melyo\Documents\github\melyonousi\dotnet-angular\dot-net\dotnet-angular-demo-03-use-wwwroot\back\Repositories\Implementation\UserRespository.cs:line 105
   at back.Controllers.UsersController.RefreshToken(TokenResponse _tokenResponse) in C:\Users\melyo\Documents\github\melyonousi\dotnet-angular\dot-net\dotnet-angular-demo-03-use-wwwroot\back\Controllers\UsersController.cs:line 41
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
][2023-11-03 01:57:53.590 +01:00 [INF] Request finished HTTP/2 POST https://localhost:7179/api/users/refreshtoken application/json 582 - 500 - text/plain;+charset=utf-8 4.6452ms
][2023-11-03 01:58:36.805 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7179/api/products - -
][2023-11-03 01:58:36.805 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:58:36.805 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7179/api/products - - - 204 - - 0.2314ms
][2023-11-03 01:58:36.812 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7179/api/products - -
][2023-11-03 01:58:36.812 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:58:36.813 +01:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/3/2023 12:51:37 AM', Current time (UTC): '11/3/2023 12:58:36 AM'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
][2023-11-03 01:58:36.813 +01:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/3/2023 12:51:37 AM', Current time (UTC): '11/3/2023 12:58:36 AM'.
][2023-11-03 01:58:36.813 +01:00 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (user)
][2023-11-03 01:58:36.813 +01:00 [INF] AuthenticationScheme: Bearer was challenged.
][2023-11-03 01:58:36.813 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7179/api/products - - - 401 0 - 0.8142ms
][2023-11-03 01:58:36.830 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7179/api/users/refreshtoken - -
][2023-11-03 01:58:36.830 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:58:36.830 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7179/api/users/refreshtoken - - - 204 - - 0.2956ms
][2023-11-03 01:58:36.835 +01:00 [INF] Request starting HTTP/2 POST https://localhost:7179/api/users/refreshtoken application/json 582
][2023-11-03 01:58:36.835 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:58:36.836 +01:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/3/2023 12:51:37 AM', Current time (UTC): '11/3/2023 12:58:36 AM'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
][2023-11-03 01:58:36.836 +01:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/3/2023 12:51:37 AM', Current time (UTC): '11/3/2023 12:58:36 AM'.
][2023-11-03 01:58:36.836 +01:00 [INF] Executing endpoint 'back.Controllers.UsersController.RefreshToken (back)'
][2023-11-03 01:58:36.836 +01:00 [INF] Route matched with {action = "RefreshToken", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] RefreshToken(back.Models.Domain.TokenResponse) on controller back.Controllers.UsersController (back).
][2023-11-03 01:58:36.836 +01:00 [INF] Executed action back.Controllers.UsersController.RefreshToken (back) in 0.5293ms
][2023-11-03 01:58:36.837 +01:00 [INF] Executed endpoint 'back.Controllers.UsersController.RefreshToken (back)'
][2023-11-03 01:58:36.838 +01:00 [ERR] An unhandled exception has occurred while executing the request.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/3/2023 12:51:37 AM', Current time (UTC): '11/3/2023 12:58:36 AM'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at back.Repositories.Implementation.UserRespository.RefresshToken(TokenResponse _tokenResponse) in C:\Users\melyo\Documents\github\melyonousi\dotnet-angular\dot-net\dotnet-angular-demo-03-use-wwwroot\back\Repositories\Implementation\UserRespository.cs:line 105
   at back.Controllers.UsersController.RefreshToken(TokenResponse _tokenResponse) in C:\Users\melyo\Documents\github\melyonousi\dotnet-angular\dot-net\dotnet-angular-demo-03-use-wwwroot\back\Controllers\UsersController.cs:line 41
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
][2023-11-03 01:58:36.842 +01:00 [INF] Request finished HTTP/2 POST https://localhost:7179/api/users/refreshtoken application/json 582 - 500 - text/plain;+charset=utf-8 6.3400ms
][2023-11-03 01:58:47.263 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7179/api/products - -
][2023-11-03 01:58:47.263 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:58:47.263 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7179/api/products - - - 204 - - 0.1979ms
][2023-11-03 01:58:47.268 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7179/api/products - -
][2023-11-03 01:58:47.268 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:58:47.268 +01:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/3/2023 12:51:37 AM', Current time (UTC): '11/3/2023 12:58:47 AM'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
][2023-11-03 01:58:47.269 +01:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/3/2023 12:51:37 AM', Current time (UTC): '11/3/2023 12:58:47 AM'.
][2023-11-03 01:58:47.269 +01:00 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (user)
][2023-11-03 01:58:47.269 +01:00 [INF] AuthenticationScheme: Bearer was challenged.
][2023-11-03 01:58:47.269 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7179/api/products - - - 401 0 - 0.8653ms
][2023-11-03 01:58:47.291 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7179/api/users/refreshtoken - -
][2023-11-03 01:58:47.291 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:58:47.291 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7179/api/users/refreshtoken - - - 204 - - 0.2602ms
][2023-11-03 01:58:47.298 +01:00 [INF] Request starting HTTP/2 POST https://localhost:7179/api/users/refreshtoken application/json 582
][2023-11-03 01:58:47.298 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:58:47.298 +01:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/3/2023 12:51:37 AM', Current time (UTC): '11/3/2023 12:58:47 AM'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
][2023-11-03 01:58:47.298 +01:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/3/2023 12:51:37 AM', Current time (UTC): '11/3/2023 12:58:47 AM'.
][2023-11-03 01:58:47.298 +01:00 [INF] Executing endpoint 'back.Controllers.UsersController.RefreshToken (back)'
][2023-11-03 01:58:47.298 +01:00 [INF] Route matched with {action = "RefreshToken", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] RefreshToken(back.Models.Domain.TokenResponse) on controller back.Controllers.UsersController (back).
][2023-11-03 01:58:47.299 +01:00 [INF] Executed action back.Controllers.UsersController.RefreshToken (back) in 0.4198ms
][2023-11-03 01:58:47.299 +01:00 [INF] Executed endpoint 'back.Controllers.UsersController.RefreshToken (back)'
][2023-11-03 01:58:47.300 +01:00 [ERR] An unhandled exception has occurred while executing the request.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/3/2023 12:51:37 AM', Current time (UTC): '11/3/2023 12:58:47 AM'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at back.Repositories.Implementation.UserRespository.RefresshToken(TokenResponse _tokenResponse) in C:\Users\melyo\Documents\github\melyonousi\dotnet-angular\dot-net\dotnet-angular-demo-03-use-wwwroot\back\Repositories\Implementation\UserRespository.cs:line 105
   at back.Controllers.UsersController.RefreshToken(TokenResponse _tokenResponse) in C:\Users\melyo\Documents\github\melyonousi\dotnet-angular\dot-net\dotnet-angular-demo-03-use-wwwroot\back\Controllers\UsersController.cs:line 41
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
][2023-11-03 01:58:47.303 +01:00 [INF] Request finished HTTP/2 POST https://localhost:7179/api/users/refreshtoken application/json 582 - 500 - text/plain;+charset=utf-8 5.0804ms
][2023-11-03 01:59:09.113 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7179/api/users/login - -
][2023-11-03 01:59:09.114 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:59:09.114 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7179/api/users/login - - - 204 - - 0.2421ms
][2023-11-03 01:59:09.116 +01:00 [INF] Request starting HTTP/2 POST https://localhost:7179/api/users/login application/json 94
][2023-11-03 01:59:09.116 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:59:09.117 +01:00 [INF] Executing endpoint 'back.Controllers.UsersController.Authenticate (back)'
][2023-11-03 01:59:09.117 +01:00 [INF] Route matched with {action = "Authenticate", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Authenticate(back.Models.Domain.UserCredentials) on controller back.Controllers.UsersController (back).
][2023-11-03 01:59:09.149 +01:00 [INF] Executed DbCommand (3ms) [Parameters=[@___user_Email_0='?', @___user_Password_1='?'], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Avatar", t."Credentials", t."Email", t."Name", t."Password", t."RoleId", t."Token", t0."Id", t0."RoleKey", t0."RoleName"
FROM (
    SELECT u."Id", u."Avatar", u."Credentials", u."Email", u."Name", u."Password", u."RoleId", u."Token"
    FROM "Users" AS u
    WHERE u."Email" = @___user_Email_0 AND u."Password" = @___user_Password_1
    LIMIT 1
) AS t
LEFT JOIN (
    SELECT t1."Id", t1."RoleKey", t1."RoleName"
    FROM (
        SELECT r."Id", r."RoleKey", r."RoleName", ROW_NUMBER() OVER(PARTITION BY r."Id" ORDER BY r."Id") AS row
        FROM "Roles" AS r
    ) AS t1
    WHERE t1.row <= 1
) AS t0 ON t."RoleId" = t0."Id"
][2023-11-03 01:59:09.152 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@__get_Item_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT r."Id", r."RToken", r."Status", r."UserId"
FROM "RefreshTokens" AS r
WHERE r."Id" = @__get_Item_0
LIMIT 1
][2023-11-03 01:59:09.154 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?', @p2='?' (DbType = Boolean), @p3='?' (DbType = Guid), @p5='?' (DbType = Guid), @p4='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "RefreshTokens" ("Id", "RToken", "Status", "UserId")
VALUES (@p0, @p1, @p2, @p3);
UPDATE "Users" SET "Token" = @p4
WHERE "Id" = @p5;
][2023-11-03 01:59:09.155 +01:00 [INF] Executing OkObjectResult, writing value of type 'back.Models.Domain.TokenResponse'.
][2023-11-03 01:59:09.155 +01:00 [INF] Executed action back.Controllers.UsersController.Authenticate (back) in 38.9055ms
][2023-11-03 01:59:09.156 +01:00 [INF] Executed endpoint 'back.Controllers.UsersController.Authenticate (back)'
][2023-11-03 01:59:09.156 +01:00 [INF] Request finished HTTP/2 POST https://localhost:7179/api/users/login application/json 94 - 200 - application/json;+charset=utf-8 39.1779ms
][2023-11-03 01:59:10.847 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7179/api/products - -
][2023-11-03 01:59:10.847 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:59:10.847 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7179/api/products - - - 204 - - 0.1565ms
][2023-11-03 01:59:10.851 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7179/api/products - -
][2023-11-03 01:59:10.851 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:59:10.851 +01:00 [INF] Executing endpoint 'back.Controllers.ProductsController.GetProducts (back)'
][2023-11-03 01:59:10.851 +01:00 [INF] Route matched with {action = "GetProducts", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProducts() on controller back.Controllers.ProductsController (back).
][2023-11-03 01:59:10.854 +01:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Description", p."PublishedDate", p."Thumbnail", p."Title", p."Visibility"
FROM "Products" AS p
][2023-11-03 01:59:10.855 +01:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[back.Repositories.ProductEntity, back, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
][2023-11-03 01:59:10.855 +01:00 [INF] Executed action back.Controllers.ProductsController.GetProducts (back) in 3.7033ms
][2023-11-03 01:59:10.855 +01:00 [INF] Executed endpoint 'back.Controllers.ProductsController.GetProducts (back)'
][2023-11-03 01:59:10.855 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7179/api/products - - - 200 - application/json;+charset=utf-8 4.2478ms
][2023-11-03 01:59:10.884 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7179/Uploads/Products/db580bd6-b31e-48f9-8590-16b04186b818.jpg - -
][2023-11-03 01:59:10.885 +01:00 [INF] The file /Uploads/Products/db580bd6-b31e-48f9-8590-16b04186b818.jpg was not modified
][2023-11-03 01:59:10.885 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7179/Uploads/Products/db580bd6-b31e-48f9-8590-16b04186b818.jpg - - - 304 - image/jpeg 0.7805ms
][2023-11-03 01:59:22.213 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7179/api/blogposts - -
][2023-11-03 01:59:22.213 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:59:22.213 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7179/api/blogposts - - - 204 - - 0.3082ms
][2023-11-03 01:59:22.217 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7179/api/blogposts - -
][2023-11-03 01:59:22.217 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:59:22.218 +01:00 [INF] Executing endpoint 'back.Controllers.BlogPostsController.GetBlogPosts (back)'
][2023-11-03 01:59:22.218 +01:00 [INF] Route matched with {action = "GetBlogPosts", controller = "BlogPosts"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBlogPosts() on controller back.Controllers.BlogPostsController (back).
][2023-11-03 01:59:22.220 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT b."Id", b."Author", b."Content", b."FeaturedImageUrl", b."IsVisible", b."PublishedDate", b."ShortDescription", b."Title", b."UrlHandle"
FROM "BlogPosts" AS b
][2023-11-03 01:59:22.220 +01:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[back.Models.Domain.BlogPost, back, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
][2023-11-03 01:59:22.220 +01:00 [INF] Executed action back.Controllers.BlogPostsController.GetBlogPosts (back) in 2.7779ms
][2023-11-03 01:59:22.221 +01:00 [INF] Executed endpoint 'back.Controllers.BlogPostsController.GetBlogPosts (back)'
][2023-11-03 01:59:22.221 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7179/api/blogposts - - - 200 - application/json;+charset=utf-8 3.2567ms
][2023-11-03 01:59:24.535 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7179/api/products - -
][2023-11-03 01:59:24.535 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:59:24.535 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7179/api/products - - - 204 - - 0.1752ms
][2023-11-03 01:59:24.539 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7179/api/products - -
][2023-11-03 01:59:24.539 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:59:24.539 +01:00 [INF] Executing endpoint 'back.Controllers.ProductsController.GetProducts (back)'
][2023-11-03 01:59:24.539 +01:00 [INF] Route matched with {action = "GetProducts", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProducts() on controller back.Controllers.ProductsController (back).
][2023-11-03 01:59:24.540 +01:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Description", p."PublishedDate", p."Thumbnail", p."Title", p."Visibility"
FROM "Products" AS p
][2023-11-03 01:59:24.540 +01:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[back.Repositories.ProductEntity, back, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
][2023-11-03 01:59:24.540 +01:00 [INF] Executed action back.Controllers.ProductsController.GetProducts (back) in 1.1594ms
][2023-11-03 01:59:24.541 +01:00 [INF] Executed endpoint 'back.Controllers.ProductsController.GetProducts (back)'
][2023-11-03 01:59:24.541 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7179/api/products - - - 200 - application/json;+charset=utf-8 1.5675ms
][2023-11-03 01:59:26.327 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7179/api/products - -
][2023-11-03 01:59:26.327 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:59:26.328 +01:00 [INF] Executing endpoint 'back.Controllers.ProductsController.GetProducts (back)'
][2023-11-03 01:59:26.328 +01:00 [INF] Route matched with {action = "GetProducts", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProducts() on controller back.Controllers.ProductsController (back).
][2023-11-03 01:59:26.330 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Description", p."PublishedDate", p."Thumbnail", p."Title", p."Visibility"
FROM "Products" AS p
][2023-11-03 01:59:26.330 +01:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[back.Repositories.ProductEntity, back, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
][2023-11-03 01:59:26.330 +01:00 [INF] Executed action back.Controllers.ProductsController.GetProducts (back) in 1.9791ms
][2023-11-03 01:59:26.330 +01:00 [INF] Executed endpoint 'back.Controllers.ProductsController.GetProducts (back)'
][2023-11-03 01:59:26.330 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7179/api/products - - - 200 - application/json;+charset=utf-8 3.2893ms
][2023-11-03 01:59:27.410 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7179/api/categories - -
][2023-11-03 01:59:27.410 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:59:27.410 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7179/api/categories - - - 204 - - 0.1950ms
][2023-11-03 01:59:27.415 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7179/api/categories - -
][2023-11-03 01:59:27.415 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:59:27.416 +01:00 [INF] Executing endpoint 'back.Controllers.CategoriesController.GetCategories (back)'
][2023-11-03 01:59:27.416 +01:00 [INF] Route matched with {action = "GetCategories", controller = "Categories"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCategories() on controller back.Controllers.CategoriesController (back).
][2023-11-03 01:59:27.418 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c."Id", c."Name", c."UrlHandle"
FROM "Categories" AS c
][2023-11-03 01:59:27.418 +01:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[back.Models.Domain.Category, back, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
][2023-11-03 01:59:27.418 +01:00 [INF] Executed action back.Controllers.CategoriesController.GetCategories (back) in 2.621ms
][2023-11-03 01:59:27.418 +01:00 [INF] Executed endpoint 'back.Controllers.CategoriesController.GetCategories (back)'
][2023-11-03 01:59:27.418 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7179/api/categories - - - 200 - application/json;+charset=utf-8 2.9819ms
][2023-11-03 01:59:31.536 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7179/api/products - -
][2023-11-03 01:59:31.537 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:59:31.537 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7179/api/products - - - 204 - - 0.1537ms
][2023-11-03 01:59:31.558 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7179/api/products - -
][2023-11-03 01:59:31.558 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:59:31.558 +01:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/3/2023 12:59:29 AM', Current time (UTC): '11/3/2023 12:59:31 AM'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
][2023-11-03 01:59:31.558 +01:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/3/2023 12:59:29 AM', Current time (UTC): '11/3/2023 12:59:31 AM'.
][2023-11-03 01:59:31.558 +01:00 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (user)
][2023-11-03 01:59:31.558 +01:00 [INF] AuthenticationScheme: Bearer was challenged.
][2023-11-03 01:59:31.558 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7179/api/products - - - 401 0 - 0.7142ms
][2023-11-03 01:59:31.566 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7179/api/users/refreshtoken - -
][2023-11-03 01:59:31.566 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:59:31.566 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7179/api/users/refreshtoken - - - 204 - - 0.1438ms
][2023-11-03 01:59:31.569 +01:00 [INF] Request starting HTTP/2 POST https://localhost:7179/api/users/refreshtoken application/json 364
][2023-11-03 01:59:31.569 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:59:31.569 +01:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/3/2023 12:59:29 AM', Current time (UTC): '11/3/2023 12:59:31 AM'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
][2023-11-03 01:59:31.569 +01:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/3/2023 12:59:29 AM', Current time (UTC): '11/3/2023 12:59:31 AM'.
][2023-11-03 01:59:31.569 +01:00 [INF] Executing endpoint 'back.Controllers.UsersController.RefreshToken (back)'
][2023-11-03 01:59:31.570 +01:00 [INF] Route matched with {action = "RefreshToken", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] RefreshToken(back.Models.Domain.TokenResponse) on controller back.Controllers.UsersController (back).
][2023-11-03 01:59:31.570 +01:00 [ERR] this is an ID: 0007ad25-f987-42a3-90bc-8430f299957f
][2023-11-03 01:59:31.571 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Guid), @___tokenResponse_RefreshToken_1='?'], CommandType='"Text"', CommandTimeout='30']
SELECT r."Id", r."RToken", r."Status", r."UserId"
FROM "RefreshTokens" AS r
WHERE r."UserId" = @__id_0 AND r."RToken" = @___tokenResponse_RefreshToken_1
LIMIT 1
][2023-11-03 01:59:31.573 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[@__get_Item_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT r."Id", r."RToken", r."Status", r."UserId"
FROM "RefreshTokens" AS r
WHERE r."Id" = @__get_Item_0
LIMIT 1
][2023-11-03 01:59:31.579 +01:00 [INF] Executed DbCommand (5ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?', @p2='?' (DbType = Boolean), @p3='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "RefreshTokens" ("Id", "RToken", "Status", "UserId")
VALUES (@p0, @p1, @p2, @p3);
][2023-11-03 01:59:31.579 +01:00 [INF] Executing OkObjectResult, writing value of type 'back.Models.Domain.TokenResponse'.
][2023-11-03 01:59:31.579 +01:00 [INF] Executed action back.Controllers.UsersController.RefreshToken (back) in 9.6385ms
][2023-11-03 01:59:31.579 +01:00 [INF] Executed endpoint 'back.Controllers.UsersController.RefreshToken (back)'
][2023-11-03 01:59:31.579 +01:00 [INF] Request finished HTTP/2 POST https://localhost:7179/api/users/refreshtoken application/json 364 - 200 - application/json;+charset=utf-8 10.1834ms
][2023-11-03 01:59:31.586 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7179/api/products - -
][2023-11-03 01:59:31.586 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:59:31.586 +01:00 [INF] Executing endpoint 'back.Controllers.ProductsController.GetProducts (back)'
][2023-11-03 01:59:31.586 +01:00 [INF] Route matched with {action = "GetProducts", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProducts() on controller back.Controllers.ProductsController (back).
][2023-11-03 01:59:31.587 +01:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Description", p."PublishedDate", p."Thumbnail", p."Title", p."Visibility"
FROM "Products" AS p
][2023-11-03 01:59:31.587 +01:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[back.Repositories.ProductEntity, back, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
][2023-11-03 01:59:31.587 +01:00 [INF] Executed action back.Controllers.ProductsController.GetProducts (back) in 1.165ms
][2023-11-03 01:59:31.587 +01:00 [INF] Executed endpoint 'back.Controllers.ProductsController.GetProducts (back)'
][2023-11-03 01:59:31.587 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7179/api/products - - - 200 - application/json;+charset=utf-8 1.6802ms
][2023-11-03 01:59:40.196 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7179/api/products - -
][2023-11-03 01:59:40.196 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:59:40.196 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7179/api/products - - - 204 - - 0.1708ms
][2023-11-03 01:59:40.205 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7179/api/products - -
][2023-11-03 01:59:40.205 +01:00 [INF] CORS policy execution successful.
][2023-11-03 01:59:40.205 +01:00 [INF] Executing endpoint 'back.Controllers.ProductsController.GetProducts (back)'
][2023-11-03 01:59:40.205 +01:00 [INF] Route matched with {action = "GetProducts", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProducts() on controller back.Controllers.ProductsController (back).
][2023-11-03 01:59:40.206 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Description", p."PublishedDate", p."Thumbnail", p."Title", p."Visibility"
FROM "Products" AS p
][2023-11-03 01:59:40.207 +01:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[back.Repositories.ProductEntity, back, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
][2023-11-03 01:59:40.207 +01:00 [INF] Executed action back.Controllers.ProductsController.GetProducts (back) in 1.7124ms
][2023-11-03 01:59:40.207 +01:00 [INF] Executed endpoint 'back.Controllers.ProductsController.GetProducts (back)'
][2023-11-03 01:59:40.207 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7179/api/products - - - 200 - application/json;+charset=utf-8 2.2967ms
][2023-11-03 02:00:00.140 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7179/api/blogposts - -
][2023-11-03 02:00:00.140 +01:00 [INF] CORS policy execution successful.
][2023-11-03 02:00:00.140 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7179/api/blogposts - - - 204 - - 0.2207ms
][2023-11-03 02:00:00.153 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7179/api/blogposts - -
][2023-11-03 02:00:00.153 +01:00 [INF] CORS policy execution successful.
][2023-11-03 02:00:00.153 +01:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/3/2023 12:59:51 AM', Current time (UTC): '11/3/2023 1:00:00 AM'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
][2023-11-03 02:00:00.153 +01:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/3/2023 12:59:51 AM', Current time (UTC): '11/3/2023 1:00:00 AM'.
][2023-11-03 02:00:00.153 +01:00 [INF] Executing endpoint 'back.Controllers.BlogPostsController.GetBlogPosts (back)'
][2023-11-03 02:00:00.153 +01:00 [INF] Route matched with {action = "GetBlogPosts", controller = "BlogPosts"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetBlogPosts() on controller back.Controllers.BlogPostsController (back).
][2023-11-03 02:00:00.154 +01:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT b."Id", b."Author", b."Content", b."FeaturedImageUrl", b."IsVisible", b."PublishedDate", b."ShortDescription", b."Title", b."UrlHandle"
FROM "BlogPosts" AS b
][2023-11-03 02:00:00.154 +01:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[back.Models.Domain.BlogPost, back, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
][2023-11-03 02:00:00.154 +01:00 [INF] Executed action back.Controllers.BlogPostsController.GetBlogPosts (back) in 1.138ms
][2023-11-03 02:00:00.154 +01:00 [INF] Executed endpoint 'back.Controllers.BlogPostsController.GetBlogPosts (back)'
][2023-11-03 02:00:00.154 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7179/api/blogposts - - - 200 - application/json;+charset=utf-8 1.8940ms
][2023-11-03 02:00:00.646 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7179/api/products - -
][2023-11-03 02:00:00.646 +01:00 [INF] CORS policy execution successful.
][2023-11-03 02:00:00.646 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7179/api/products - - - 204 - - 0.1718ms
][2023-11-03 02:00:00.655 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7179/api/products - -
][2023-11-03 02:00:00.655 +01:00 [INF] CORS policy execution successful.
][2023-11-03 02:00:00.655 +01:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/3/2023 12:59:51 AM', Current time (UTC): '11/3/2023 1:00:00 AM'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
][2023-11-03 02:00:00.655 +01:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/3/2023 12:59:51 AM', Current time (UTC): '11/3/2023 1:00:00 AM'.
][2023-11-03 02:00:00.655 +01:00 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (user)
][2023-11-03 02:00:00.655 +01:00 [INF] AuthenticationScheme: Bearer was challenged.
][2023-11-03 02:00:00.655 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7179/api/products - - - 401 0 - 0.7048ms
][2023-11-03 02:00:00.664 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7179/api/users/refreshtoken - -
][2023-11-03 02:00:00.664 +01:00 [INF] CORS policy execution successful.
][2023-11-03 02:00:00.664 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7179/api/users/refreshtoken - - - 204 - - 0.1776ms
][2023-11-03 02:00:00.667 +01:00 [INF] Request starting HTTP/2 POST https://localhost:7179/api/users/refreshtoken application/json 582
][2023-11-03 02:00:00.667 +01:00 [INF] CORS policy execution successful.
][2023-11-03 02:00:00.667 +01:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/3/2023 12:59:51 AM', Current time (UTC): '11/3/2023 1:00:00 AM'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
][2023-11-03 02:00:00.668 +01:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/3/2023 12:59:51 AM', Current time (UTC): '11/3/2023 1:00:00 AM'.
][2023-11-03 02:00:00.668 +01:00 [INF] Executing endpoint 'back.Controllers.UsersController.RefreshToken (back)'
][2023-11-03 02:00:00.668 +01:00 [INF] Route matched with {action = "RefreshToken", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] RefreshToken(back.Models.Domain.TokenResponse) on controller back.Controllers.UsersController (back).
][2023-11-03 02:00:00.668 +01:00 [ERR] this is an ID: 0007ad25-f987-42a3-90bc-8430f299957f
][2023-11-03 02:00:00.669 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Guid), @___tokenResponse_RefreshToken_1='?'], CommandType='"Text"', CommandTimeout='30']
SELECT r."Id", r."RToken", r."Status", r."UserId"
FROM "RefreshTokens" AS r
WHERE r."UserId" = @__id_0 AND r."RToken" = @___tokenResponse_RefreshToken_1
LIMIT 1
][2023-11-03 02:00:00.671 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[@__get_Item_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT r."Id", r."RToken", r."Status", r."UserId"
FROM "RefreshTokens" AS r
WHERE r."Id" = @__get_Item_0
LIMIT 1
][2023-11-03 02:00:00.677 +01:00 [INF] Executed DbCommand (5ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?', @p2='?' (DbType = Boolean), @p3='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "RefreshTokens" ("Id", "RToken", "Status", "UserId")
VALUES (@p0, @p1, @p2, @p3);
][2023-11-03 02:00:00.677 +01:00 [INF] Executing OkObjectResult, writing value of type 'back.Models.Domain.TokenResponse'.
][2023-11-03 02:00:00.677 +01:00 [INF] Executed action back.Controllers.UsersController.RefreshToken (back) in 9.4557ms
][2023-11-03 02:00:00.677 +01:00 [INF] Executed endpoint 'back.Controllers.UsersController.RefreshToken (back)'
][2023-11-03 02:00:00.677 +01:00 [INF] Request finished HTTP/2 POST https://localhost:7179/api/users/refreshtoken application/json 582 - 200 - application/json;+charset=utf-8 10.2760ms
][2023-11-03 02:00:00.684 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7179/api/products - -
][2023-11-03 02:00:00.684 +01:00 [INF] CORS policy execution successful.
][2023-11-03 02:00:00.684 +01:00 [INF] Executing endpoint 'back.Controllers.ProductsController.GetProducts (back)'
][2023-11-03 02:00:00.684 +01:00 [INF] Route matched with {action = "GetProducts", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProducts() on controller back.Controllers.ProductsController (back).
][2023-11-03 02:00:00.685 +01:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Description", p."PublishedDate", p."Thumbnail", p."Title", p."Visibility"
FROM "Products" AS p
][2023-11-03 02:00:00.685 +01:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[back.Repositories.ProductEntity, back, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
][2023-11-03 02:00:00.685 +01:00 [INF] Executed action back.Controllers.ProductsController.GetProducts (back) in 0.8998ms
][2023-11-03 02:00:00.685 +01:00 [INF] Executed endpoint 'back.Controllers.ProductsController.GetProducts (back)'
][2023-11-03 02:00:00.685 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7179/api/products - - - 200 - application/json;+charset=utf-8 1.3015ms
][2023-11-03 02:00:33.987 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7179/api/products - -
][2023-11-03 02:00:33.987 +01:00 [INF] CORS policy execution successful.
][2023-11-03 02:00:33.987 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7179/api/products - - - 204 - - 0.4559ms
][2023-11-03 02:00:33.992 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7179/api/products - -
][2023-11-03 02:00:33.993 +01:00 [INF] CORS policy execution successful.
][2023-11-03 02:00:33.993 +01:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/3/2023 1:00:20 AM', Current time (UTC): '11/3/2023 1:00:33 AM'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
][2023-11-03 02:00:33.993 +01:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/3/2023 1:00:20 AM', Current time (UTC): '11/3/2023 1:00:33 AM'.
][2023-11-03 02:00:33.993 +01:00 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (user)
][2023-11-03 02:00:33.993 +01:00 [INF] AuthenticationScheme: Bearer was challenged.
][2023-11-03 02:00:33.993 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7179/api/products - - - 401 0 - 0.7259ms
][2023-11-03 02:00:34.023 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7179/api/users/refreshtoken - -
][2023-11-03 02:00:34.023 +01:00 [INF] CORS policy execution successful.
][2023-11-03 02:00:34.023 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7179/api/users/refreshtoken - - - 204 - - 0.2606ms
][2023-11-03 02:00:34.028 +01:00 [INF] Request starting HTTP/2 POST https://localhost:7179/api/users/refreshtoken application/json 582
][2023-11-03 02:00:34.028 +01:00 [INF] CORS policy execution successful.
][2023-11-03 02:00:34.029 +01:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/3/2023 1:00:20 AM', Current time (UTC): '11/3/2023 1:00:34 AM'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
][2023-11-03 02:00:34.029 +01:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/3/2023 1:00:20 AM', Current time (UTC): '11/3/2023 1:00:34 AM'.
][2023-11-03 02:00:34.029 +01:00 [INF] Executing endpoint 'back.Controllers.UsersController.RefreshToken (back)'
][2023-11-03 02:00:34.029 +01:00 [INF] Route matched with {action = "RefreshToken", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] RefreshToken(back.Models.Domain.TokenResponse) on controller back.Controllers.UsersController (back).
][2023-11-03 02:00:34.031 +01:00 [ERR] this is an ID: 0007ad25-f987-42a3-90bc-8430f299957f
][2023-11-03 02:00:34.032 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Guid), @___tokenResponse_RefreshToken_1='?'], CommandType='"Text"', CommandTimeout='30']
SELECT r."Id", r."RToken", r."Status", r."UserId"
FROM "RefreshTokens" AS r
WHERE r."UserId" = @__id_0 AND r."RToken" = @___tokenResponse_RefreshToken_1
LIMIT 1
][2023-11-03 02:00:34.034 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[@__get_Item_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT r."Id", r."RToken", r."Status", r."UserId"
FROM "RefreshTokens" AS r
WHERE r."Id" = @__get_Item_0
LIMIT 1
][2023-11-03 02:00:34.036 +01:00 [INF] Executed DbCommand (2ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?', @p2='?' (DbType = Boolean), @p3='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "RefreshTokens" ("Id", "RToken", "Status", "UserId")
VALUES (@p0, @p1, @p2, @p3);
][2023-11-03 02:00:34.037 +01:00 [INF] Executing OkObjectResult, writing value of type 'back.Models.Domain.TokenResponse'.
][2023-11-03 02:00:34.038 +01:00 [INF] Executed action back.Controllers.UsersController.RefreshToken (back) in 8.6165ms
][2023-11-03 02:00:34.038 +01:00 [INF] Executed endpoint 'back.Controllers.UsersController.RefreshToken (back)'
][2023-11-03 02:00:34.038 +01:00 [INF] Request finished HTTP/2 POST https://localhost:7179/api/users/refreshtoken application/json 582 - 200 - application/json;+charset=utf-8 9.5140ms
][2023-11-03 02:00:34.194 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7179/api/products - -
][2023-11-03 02:00:34.194 +01:00 [INF] CORS policy execution successful.
][2023-11-03 02:00:34.194 +01:00 [INF] Executing endpoint 'back.Controllers.ProductsController.GetProducts (back)'
][2023-11-03 02:00:34.194 +01:00 [INF] Route matched with {action = "GetProducts", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProducts() on controller back.Controllers.ProductsController (back).
][2023-11-03 02:00:34.195 +01:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Description", p."PublishedDate", p."Thumbnail", p."Title", p."Visibility"
FROM "Products" AS p
][2023-11-03 02:00:34.195 +01:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[back.Repositories.ProductEntity, back, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
][2023-11-03 02:00:34.195 +01:00 [INF] Executed action back.Controllers.ProductsController.GetProducts (back) in 1.0271ms
][2023-11-03 02:00:34.195 +01:00 [INF] Executed endpoint 'back.Controllers.ProductsController.GetProducts (back)'
][2023-11-03 02:00:34.195 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7179/api/products - - - 200 - application/json;+charset=utf-8 1.4020ms
][2023-11-03 02:00:38.184 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7179/api/products - -
][2023-11-03 02:00:38.185 +01:00 [INF] CORS policy execution successful.
][2023-11-03 02:00:38.185 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7179/api/products - - - 204 - - 0.2688ms
][2023-11-03 02:00:38.191 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7179/api/products - -
][2023-11-03 02:00:38.191 +01:00 [INF] CORS policy execution successful.
][2023-11-03 02:00:38.192 +01:00 [INF] Executing endpoint 'back.Controllers.ProductsController.GetProducts (back)'
][2023-11-03 02:00:38.192 +01:00 [INF] Route matched with {action = "GetProducts", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProducts() on controller back.Controllers.ProductsController (back).
][2023-11-03 02:00:38.193 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Description", p."PublishedDate", p."Thumbnail", p."Title", p."Visibility"
FROM "Products" AS p
][2023-11-03 02:00:38.193 +01:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[back.Repositories.ProductEntity, back, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
][2023-11-03 02:00:38.193 +01:00 [INF] Executed action back.Controllers.ProductsController.GetProducts (back) in 1.4897ms
][2023-11-03 02:00:38.193 +01:00 [INF] Executed endpoint 'back.Controllers.ProductsController.GetProducts (back)'
][2023-11-03 02:00:38.193 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7179/api/products - - - 200 - application/json;+charset=utf-8 2.0191ms
][2023-11-03 02:00:38.304 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7179/Uploads/Products/cba0382e-959f-4e99-a266-9257a0a63a95.jpg - -
][2023-11-03 02:00:38.308 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7179/Uploads/Products/c7a2cb23-9ac1-4967-890f-7d18e6997727.jpg - -
][2023-11-03 02:00:38.308 +01:00 [INF] Sending file. Request path: '/Uploads/Products/cba0382e-959f-4e99-a266-9257a0a63a95.jpg'. Physical path: 'C:\Users\melyo\Documents\github\melyonousi\dotnet-angular\dot-net\dotnet-angular-demo-03-use-wwwroot\back\wwwroot\Uploads\Products\cba0382e-959f-4e99-a266-9257a0a63a95.jpg'
][2023-11-03 02:00:38.308 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7179/Uploads/Products/cba0382e-959f-4e99-a266-9257a0a63a95.jpg - - - 200 588937 image/jpeg 4.1807ms
][2023-11-03 02:00:38.310 +01:00 [INF] Sending file. Request path: '/Uploads/Products/c7a2cb23-9ac1-4967-890f-7d18e6997727.jpg'. Physical path: 'C:\Users\melyo\Documents\github\melyonousi\dotnet-angular\dot-net\dotnet-angular-demo-03-use-wwwroot\back\wwwroot\Uploads\Products\c7a2cb23-9ac1-4967-890f-7d18e6997727.jpg'
][2023-11-03 02:00:38.310 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7179/Uploads/Products/c7a2cb23-9ac1-4967-890f-7d18e6997727.jpg - - - 200 289712 image/jpeg 2.1139ms
][2023-11-03 02:00:38.313 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7179/Uploads/Products/db580bd6-b31e-48f9-8590-16b04186b818.jpg - -
][2023-11-03 02:00:38.318 +01:00 [INF] Sending file. Request path: '/Uploads/Products/db580bd6-b31e-48f9-8590-16b04186b818.jpg'. Physical path: 'C:\Users\melyo\Documents\github\melyonousi\dotnet-angular\dot-net\dotnet-angular-demo-03-use-wwwroot\back\wwwroot\Uploads\Products\db580bd6-b31e-48f9-8590-16b04186b818.jpg'
][2023-11-03 02:00:38.318 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7179/Uploads/Products/db580bd6-b31e-48f9-8590-16b04186b818.jpg - - - 200 518046 image/jpeg 4.7901ms
][2023-11-03 02:00:43.539 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7179/api/products - -
][2023-11-03 02:00:43.539 +01:00 [INF] CORS policy execution successful.
][2023-11-03 02:00:43.539 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7179/api/products - - - 204 - - 0.1864ms
][2023-11-03 02:00:43.552 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7179/api/products - -
][2023-11-03 02:00:43.552 +01:00 [INF] CORS policy execution successful.
][2023-11-03 02:00:43.552 +01:00 [INF] Executing endpoint 'back.Controllers.ProductsController.GetProducts (back)'
][2023-11-03 02:00:43.552 +01:00 [INF] Route matched with {action = "GetProducts", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProducts() on controller back.Controllers.ProductsController (back).
][2023-11-03 02:00:43.553 +01:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Description", p."PublishedDate", p."Thumbnail", p."Title", p."Visibility"
FROM "Products" AS p
][2023-11-03 02:00:43.553 +01:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[back.Repositories.ProductEntity, back, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
][2023-11-03 02:00:43.553 +01:00 [INF] Executed action back.Controllers.ProductsController.GetProducts (back) in 1.1429ms
][2023-11-03 02:00:43.553 +01:00 [INF] Executed endpoint 'back.Controllers.ProductsController.GetProducts (back)'
][2023-11-03 02:00:43.554 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7179/api/products - - - 200 - application/json;+charset=utf-8 1.5680ms
][2023-11-03 02:00:45.961 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7179/api/products - -
][2023-11-03 02:00:45.961 +01:00 [INF] CORS policy execution successful.
][2023-11-03 02:00:45.961 +01:00 [INF] Executing endpoint 'back.Controllers.ProductsController.GetProducts (back)'
][2023-11-03 02:00:45.961 +01:00 [INF] Route matched with {action = "GetProducts", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProducts() on controller back.Controllers.ProductsController (back).
][2023-11-03 02:00:45.962 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Description", p."PublishedDate", p."Thumbnail", p."Title", p."Visibility"
FROM "Products" AS p
][2023-11-03 02:00:45.962 +01:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[back.Repositories.ProductEntity, back, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
][2023-11-03 02:00:45.962 +01:00 [INF] Executed action back.Controllers.ProductsController.GetProducts (back) in 1.3712ms
][2023-11-03 02:00:45.962 +01:00 [INF] Executed endpoint 'back.Controllers.ProductsController.GetProducts (back)'
][2023-11-03 02:00:45.962 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7179/api/products - - - 200 - application/json;+charset=utf-8 1.9525ms
][2023-11-03 02:00:47.309 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7179/api/categories - -
][2023-11-03 02:00:47.309 +01:00 [INF] CORS policy execution successful.
][2023-11-03 02:00:47.309 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7179/api/categories - - - 204 - - 0.2310ms
][2023-11-03 02:00:47.319 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7179/api/categories - -
][2023-11-03 02:00:47.319 +01:00 [INF] CORS policy execution successful.
][2023-11-03 02:00:47.319 +01:00 [INF] Executing endpoint 'back.Controllers.CategoriesController.GetCategories (back)'
][2023-11-03 02:00:47.319 +01:00 [INF] Route matched with {action = "GetCategories", controller = "Categories"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCategories() on controller back.Controllers.CategoriesController (back).
][2023-11-03 02:00:47.320 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c."Id", c."Name", c."UrlHandle"
FROM "Categories" AS c
][2023-11-03 02:00:47.321 +01:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[back.Models.Domain.Category, back, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
][2023-11-03 02:00:47.321 +01:00 [INF] Executed action back.Controllers.CategoriesController.GetCategories (back) in 1.256ms
][2023-11-03 02:00:47.321 +01:00 [INF] Executed endpoint 'back.Controllers.CategoriesController.GetCategories (back)'
][2023-11-03 02:00:47.321 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7179/api/categories - - - 200 - application/json;+charset=utf-8 1.7064ms
][2023-11-03 02:00:52.872 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7179/api/products - -
][2023-11-03 02:00:52.872 +01:00 [INF] CORS policy execution successful.
][2023-11-03 02:00:52.872 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7179/api/products - - - 204 - - 0.1724ms
][2023-11-03 02:00:52.887 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7179/api/products - -
][2023-11-03 02:00:52.887 +01:00 [INF] CORS policy execution successful.
][2023-11-03 02:00:52.887 +01:00 [INF] Executing endpoint 'back.Controllers.ProductsController.GetProducts (back)'
][2023-11-03 02:00:52.888 +01:00 [INF] Route matched with {action = "GetProducts", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProducts() on controller back.Controllers.ProductsController (back).
][2023-11-03 02:00:52.888 +01:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Description", p."PublishedDate", p."Thumbnail", p."Title", p."Visibility"
FROM "Products" AS p
][2023-11-03 02:00:52.888 +01:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[back.Repositories.ProductEntity, back, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
][2023-11-03 02:00:52.889 +01:00 [INF] Executed action back.Controllers.ProductsController.GetProducts (back) in 0.9873ms
][2023-11-03 02:00:52.889 +01:00 [INF] Executed endpoint 'back.Controllers.ProductsController.GetProducts (back)'
][2023-11-03 02:00:52.889 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7179/api/products - - - 200 - application/json;+charset=utf-8 1.3708ms
][2023-11-03 02:00:59.392 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7179/api/categories - -
][2023-11-03 02:00:59.392 +01:00 [INF] CORS policy execution successful.
][2023-11-03 02:00:59.392 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7179/api/categories - - - 204 - - 0.3479ms
][2023-11-03 02:00:59.408 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7179/api/categories - -
][2023-11-03 02:00:59.408 +01:00 [INF] CORS policy execution successful.
][2023-11-03 02:00:59.408 +01:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/3/2023 1:00:54 AM', Current time (UTC): '11/3/2023 1:00:59 AM'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
][2023-11-03 02:00:59.408 +01:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/3/2023 1:00:54 AM', Current time (UTC): '11/3/2023 1:00:59 AM'.
][2023-11-03 02:00:59.409 +01:00 [INF] Executing endpoint 'back.Controllers.CategoriesController.GetCategories (back)'
][2023-11-03 02:00:59.409 +01:00 [INF] Route matched with {action = "GetCategories", controller = "Categories"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCategories() on controller back.Controllers.CategoriesController (back).
][2023-11-03 02:00:59.410 +01:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c."Id", c."Name", c."UrlHandle"
FROM "Categories" AS c
][2023-11-03 02:00:59.410 +01:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[back.Models.Domain.Category, back, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
][2023-11-03 02:00:59.410 +01:00 [INF] Executed action back.Controllers.CategoriesController.GetCategories (back) in 1.2852ms
][2023-11-03 02:00:59.410 +01:00 [INF] Executed endpoint 'back.Controllers.CategoriesController.GetCategories (back)'
][2023-11-03 02:00:59.410 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7179/api/categories - - - 200 - application/json;+charset=utf-8 2.1480ms
][2023-11-03 02:01:00.353 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7179/api/products - -
][2023-11-03 02:01:00.353 +01:00 [INF] CORS policy execution successful.
][2023-11-03 02:01:00.353 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7179/api/products - - - 204 - - 0.2020ms
][2023-11-03 02:01:00.363 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7179/api/products - -
][2023-11-03 02:01:00.363 +01:00 [INF] CORS policy execution successful.
][2023-11-03 02:01:00.363 +01:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/3/2023 1:00:54 AM', Current time (UTC): '11/3/2023 1:01:00 AM'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
][2023-11-03 02:01:00.363 +01:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/3/2023 1:00:54 AM', Current time (UTC): '11/3/2023 1:01:00 AM'.
][2023-11-03 02:01:00.363 +01:00 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (user)
][2023-11-03 02:01:00.363 +01:00 [INF] AuthenticationScheme: Bearer was challenged.
][2023-11-03 02:01:00.363 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7179/api/products - - - 401 0 - 0.6019ms
][2023-11-03 02:01:00.372 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7179/api/users/refreshtoken - -
][2023-11-03 02:01:00.372 +01:00 [INF] CORS policy execution successful.
][2023-11-03 02:01:00.372 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7179/api/users/refreshtoken - - - 204 - - 0.1773ms
][2023-11-03 02:01:00.375 +01:00 [INF] Request starting HTTP/2 POST https://localhost:7179/api/users/refreshtoken application/json 582
][2023-11-03 02:01:00.375 +01:00 [INF] CORS policy execution successful.
][2023-11-03 02:01:00.375 +01:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/3/2023 1:00:54 AM', Current time (UTC): '11/3/2023 1:01:00 AM'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
][2023-11-03 02:01:00.375 +01:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/3/2023 1:00:54 AM', Current time (UTC): '11/3/2023 1:01:00 AM'.
][2023-11-03 02:01:00.375 +01:00 [INF] Executing endpoint 'back.Controllers.UsersController.RefreshToken (back)'
][2023-11-03 02:01:00.375 +01:00 [INF] Route matched with {action = "RefreshToken", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] RefreshToken(back.Models.Domain.TokenResponse) on controller back.Controllers.UsersController (back).
][2023-11-03 02:01:00.376 +01:00 [ERR] this is an ID: 0007ad25-f987-42a3-90bc-8430f299957f
][2023-11-03 02:01:00.377 +01:00 [INF] Executed DbCommand (0ms) [Parameters=[@__id_0='?' (DbType = Guid), @___tokenResponse_RefreshToken_1='?'], CommandType='"Text"', CommandTimeout='30']
SELECT r."Id", r."RToken", r."Status", r."UserId"
FROM "RefreshTokens" AS r
WHERE r."UserId" = @__id_0 AND r."RToken" = @___tokenResponse_RefreshToken_1
LIMIT 1
][2023-11-03 02:01:00.379 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[@__get_Item_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT r."Id", r."RToken", r."Status", r."UserId"
FROM "RefreshTokens" AS r
WHERE r."Id" = @__get_Item_0
LIMIT 1
][2023-11-03 02:01:00.384 +01:00 [INF] Executed DbCommand (5ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?', @p2='?' (DbType = Boolean), @p3='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "RefreshTokens" ("Id", "RToken", "Status", "UserId")
VALUES (@p0, @p1, @p2, @p3);
][2023-11-03 02:01:00.385 +01:00 [INF] Executing OkObjectResult, writing value of type 'back.Models.Domain.TokenResponse'.
][2023-11-03 02:01:00.385 +01:00 [INF] Executed action back.Controllers.UsersController.RefreshToken (back) in 9.2653ms
][2023-11-03 02:01:00.385 +01:00 [INF] Executed endpoint 'back.Controllers.UsersController.RefreshToken (back)'
][2023-11-03 02:01:00.385 +01:00 [INF] Request finished HTTP/2 POST https://localhost:7179/api/users/refreshtoken application/json 582 - 200 - application/json;+charset=utf-8 9.7755ms
][2023-11-03 02:01:00.392 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7179/api/products - -
][2023-11-03 02:01:00.392 +01:00 [INF] CORS policy execution successful.
][2023-11-03 02:01:00.392 +01:00 [INF] Executing endpoint 'back.Controllers.ProductsController.GetProducts (back)'
][2023-11-03 02:01:00.392 +01:00 [INF] Route matched with {action = "GetProducts", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProducts() on controller back.Controllers.ProductsController (back).
][2023-11-03 02:01:00.393 +01:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Description", p."PublishedDate", p."Thumbnail", p."Title", p."Visibility"
FROM "Products" AS p
][2023-11-03 02:01:00.393 +01:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[back.Repositories.ProductEntity, back, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
][2023-11-03 02:01:00.393 +01:00 [INF] Executed action back.Controllers.ProductsController.GetProducts (back) in 1.0003ms
][2023-11-03 02:01:00.393 +01:00 [INF] Executed endpoint 'back.Controllers.ProductsController.GetProducts (back)'
][2023-11-03 02:01:00.393 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7179/api/products - - - 200 - application/json;+charset=utf-8 1.3591ms
][2023-11-03 02:01:04.974 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7179/api/products - -
][2023-11-03 02:01:04.974 +01:00 [INF] CORS policy execution successful.
][2023-11-03 02:01:04.975 +01:00 [INF] Executing endpoint 'back.Controllers.ProductsController.GetProducts (back)'
][2023-11-03 02:01:04.975 +01:00 [INF] Route matched with {action = "GetProducts", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProducts() on controller back.Controllers.ProductsController (back).
][2023-11-03 02:01:04.976 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Description", p."PublishedDate", p."Thumbnail", p."Title", p."Visibility"
FROM "Products" AS p
][2023-11-03 02:01:04.976 +01:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[back.Repositories.ProductEntity, back, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
][2023-11-03 02:01:04.976 +01:00 [INF] Executed action back.Controllers.ProductsController.GetProducts (back) in 1.4408ms
][2023-11-03 02:01:04.976 +01:00 [INF] Executed endpoint 'back.Controllers.ProductsController.GetProducts (back)'
][2023-11-03 02:01:04.976 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7179/api/products - - - 200 - application/json;+charset=utf-8 1.9145ms
][2023-11-03 02:01:42.716 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7179/api/products - -
][2023-11-03 02:01:42.716 +01:00 [INF] CORS policy execution successful.
][2023-11-03 02:01:42.716 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7179/api/products - - - 204 - - 0.2387ms
][2023-11-03 02:01:42.720 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7179/api/products - -
][2023-11-03 02:01:42.720 +01:00 [INF] CORS policy execution successful.
][2023-11-03 02:01:42.721 +01:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/3/2023 1:01:20 AM', Current time (UTC): '11/3/2023 1:01:42 AM'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
][2023-11-03 02:01:42.721 +01:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/3/2023 1:01:20 AM', Current time (UTC): '11/3/2023 1:01:42 AM'.
][2023-11-03 02:01:42.721 +01:00 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (user)
][2023-11-03 02:01:42.721 +01:00 [INF] AuthenticationScheme: Bearer was challenged.
][2023-11-03 02:01:42.721 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7179/api/products - - - 401 0 - 0.8034ms
][2023-11-03 02:01:42.822 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7179/api/users/refreshtoken - -
][2023-11-03 02:01:42.822 +01:00 [INF] CORS policy execution successful.
][2023-11-03 02:01:42.822 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7179/api/users/refreshtoken - - - 204 - - 0.2438ms
][2023-11-03 02:01:42.828 +01:00 [INF] Request starting HTTP/2 POST https://localhost:7179/api/users/refreshtoken application/json 582
][2023-11-03 02:01:42.828 +01:00 [INF] CORS policy execution successful.
][2023-11-03 02:01:42.828 +01:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/3/2023 1:01:20 AM', Current time (UTC): '11/3/2023 1:01:42 AM'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
][2023-11-03 02:01:42.829 +01:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/3/2023 1:01:20 AM', Current time (UTC): '11/3/2023 1:01:42 AM'.
][2023-11-03 02:01:42.829 +01:00 [INF] Executing endpoint 'back.Controllers.UsersController.RefreshToken (back)'
][2023-11-03 02:01:42.829 +01:00 [INF] Route matched with {action = "RefreshToken", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] RefreshToken(back.Models.Domain.TokenResponse) on controller back.Controllers.UsersController (back).
][2023-11-03 02:01:42.830 +01:00 [ERR] this is an ID: 0007ad25-f987-42a3-90bc-8430f299957f
][2023-11-03 02:01:42.831 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Guid), @___tokenResponse_RefreshToken_1='?'], CommandType='"Text"', CommandTimeout='30']
SELECT r."Id", r."RToken", r."Status", r."UserId"
FROM "RefreshTokens" AS r
WHERE r."UserId" = @__id_0 AND r."RToken" = @___tokenResponse_RefreshToken_1
LIMIT 1
][2023-11-03 02:01:42.833 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[@__get_Item_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT r."Id", r."RToken", r."Status", r."UserId"
FROM "RefreshTokens" AS r
WHERE r."Id" = @__get_Item_0
LIMIT 1
][2023-11-03 02:01:42.834 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?', @p2='?' (DbType = Boolean), @p3='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "RefreshTokens" ("Id", "RToken", "Status", "UserId")
VALUES (@p0, @p1, @p2, @p3);
][2023-11-03 02:01:42.834 +01:00 [INF] Executing OkObjectResult, writing value of type 'back.Models.Domain.TokenResponse'.
][2023-11-03 02:01:42.834 +01:00 [INF] Executed action back.Controllers.UsersController.RefreshToken (back) in 5.7979ms
][2023-11-03 02:01:42.834 +01:00 [INF] Executed endpoint 'back.Controllers.UsersController.RefreshToken (back)'
][2023-11-03 02:01:42.835 +01:00 [INF] Request finished HTTP/2 POST https://localhost:7179/api/users/refreshtoken application/json 582 - 200 - application/json;+charset=utf-8 6.7153ms
][2023-11-03 02:01:42.852 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7179/api/products - -
][2023-11-03 02:01:42.852 +01:00 [INF] CORS policy execution successful.
][2023-11-03 02:01:42.852 +01:00 [INF] Executing endpoint 'back.Controllers.ProductsController.GetProducts (back)'
][2023-11-03 02:01:42.852 +01:00 [INF] Route matched with {action = "GetProducts", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProducts() on controller back.Controllers.ProductsController (back).
][2023-11-03 02:01:42.854 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Description", p."PublishedDate", p."Thumbnail", p."Title", p."Visibility"
FROM "Products" AS p
][2023-11-03 02:01:42.854 +01:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[back.Repositories.ProductEntity, back, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
][2023-11-03 02:01:42.854 +01:00 [INF] Executed action back.Controllers.ProductsController.GetProducts (back) in 1.7375ms
][2023-11-03 02:01:42.854 +01:00 [INF] Executed endpoint 'back.Controllers.ProductsController.GetProducts (back)'
][2023-11-03 02:01:42.854 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7179/api/products - - - 200 - application/json;+charset=utf-8 2.4595ms
][2023-11-03 02:02:13.221 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7179/api/products - -
][2023-11-03 02:02:13.222 +01:00 [INF] CORS policy execution successful.
][2023-11-03 02:02:13.222 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7179/api/products - - - 204 - - 0.6823ms
][2023-11-03 02:02:13.263 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7179/api/products - -
][2023-11-03 02:02:13.263 +01:00 [INF] CORS policy execution successful.
][2023-11-03 02:02:13.263 +01:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/3/2023 1:02:02 AM', Current time (UTC): '11/3/2023 1:02:13 AM'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
][2023-11-03 02:02:13.263 +01:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/3/2023 1:02:02 AM', Current time (UTC): '11/3/2023 1:02:13 AM'.
][2023-11-03 02:02:13.263 +01:00 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (user)
][2023-11-03 02:02:13.263 +01:00 [INF] AuthenticationScheme: Bearer was challenged.
][2023-11-03 02:02:13.264 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7179/api/products - - - 401 0 - 0.7232ms
][2023-11-03 02:02:13.344 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7179/api/users/refreshtoken - -
][2023-11-03 02:02:13.345 +01:00 [INF] CORS policy execution successful.
][2023-11-03 02:02:13.345 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7179/api/users/refreshtoken - - - 204 - - 0.1852ms
][2023-11-03 02:02:13.348 +01:00 [INF] Request starting HTTP/2 POST https://localhost:7179/api/users/refreshtoken application/json 582
][2023-11-03 02:02:13.348 +01:00 [INF] CORS policy execution successful.
][2023-11-03 02:02:13.349 +01:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/3/2023 1:02:02 AM', Current time (UTC): '11/3/2023 1:02:13 AM'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
][2023-11-03 02:02:13.349 +01:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/3/2023 1:02:02 AM', Current time (UTC): '11/3/2023 1:02:13 AM'.
][2023-11-03 02:02:13.349 +01:00 [INF] Executing endpoint 'back.Controllers.UsersController.RefreshToken (back)'
][2023-11-03 02:02:13.349 +01:00 [INF] Route matched with {action = "RefreshToken", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] RefreshToken(back.Models.Domain.TokenResponse) on controller back.Controllers.UsersController (back).
][2023-11-03 02:02:13.350 +01:00 [ERR] this is an ID: 0007ad25-f987-42a3-90bc-8430f299957f
][2023-11-03 02:02:13.351 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Guid), @___tokenResponse_RefreshToken_1='?'], CommandType='"Text"', CommandTimeout='30']
SELECT r."Id", r."RToken", r."Status", r."UserId"
FROM "RefreshTokens" AS r
WHERE r."UserId" = @__id_0 AND r."RToken" = @___tokenResponse_RefreshToken_1
LIMIT 1
][2023-11-03 02:02:13.353 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[@__get_Item_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT r."Id", r."RToken", r."Status", r."UserId"
FROM "RefreshTokens" AS r
WHERE r."Id" = @__get_Item_0
LIMIT 1
][2023-11-03 02:02:13.359 +01:00 [INF] Executed DbCommand (5ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?', @p2='?' (DbType = Boolean), @p3='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "RefreshTokens" ("Id", "RToken", "Status", "UserId")
VALUES (@p0, @p1, @p2, @p3);
][2023-11-03 02:02:13.359 +01:00 [INF] Executing OkObjectResult, writing value of type 'back.Models.Domain.TokenResponse'.
][2023-11-03 02:02:13.359 +01:00 [INF] Executed action back.Controllers.UsersController.RefreshToken (back) in 10.3537ms
][2023-11-03 02:02:13.359 +01:00 [INF] Executed endpoint 'back.Controllers.UsersController.RefreshToken (back)'
][2023-11-03 02:02:13.359 +01:00 [INF] Request finished HTTP/2 POST https://localhost:7179/api/users/refreshtoken application/json 582 - 200 - application/json;+charset=utf-8 10.9276ms
][2023-11-03 02:02:13.374 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7179/api/products - -
][2023-11-03 02:02:13.374 +01:00 [INF] CORS policy execution successful.
][2023-11-03 02:02:13.374 +01:00 [INF] Executing endpoint 'back.Controllers.ProductsController.GetProducts (back)'
][2023-11-03 02:02:13.374 +01:00 [INF] Route matched with {action = "GetProducts", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProducts() on controller back.Controllers.ProductsController (back).
][2023-11-03 02:02:13.376 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Description", p."PublishedDate", p."Thumbnail", p."Title", p."Visibility"
FROM "Products" AS p
][2023-11-03 02:02:13.376 +01:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[back.Repositories.ProductEntity, back, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
][2023-11-03 02:02:13.376 +01:00 [INF] Executed action back.Controllers.ProductsController.GetProducts (back) in 2.0872ms
][2023-11-03 02:02:13.376 +01:00 [INF] Executed endpoint 'back.Controllers.ProductsController.GetProducts (back)'
][2023-11-03 02:02:13.376 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7179/api/products - - - 200 - application/json;+charset=utf-8 2.5976ms
][2023-11-03 02:02:17.129 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7179/api/products - -
][2023-11-03 02:02:17.129 +01:00 [INF] CORS policy execution successful.
][2023-11-03 02:02:17.130 +01:00 [INF] Executing endpoint 'back.Controllers.ProductsController.GetProducts (back)'
][2023-11-03 02:02:17.130 +01:00 [INF] Route matched with {action = "GetProducts", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProducts() on controller back.Controllers.ProductsController (back).
][2023-11-03 02:02:17.131 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Description", p."PublishedDate", p."Thumbnail", p."Title", p."Visibility"
FROM "Products" AS p
][2023-11-03 02:02:17.131 +01:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[back.Repositories.ProductEntity, back, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
][2023-11-03 02:02:17.132 +01:00 [INF] Executed action back.Controllers.ProductsController.GetProducts (back) in 1.7414ms
][2023-11-03 02:02:17.132 +01:00 [INF] Executed endpoint 'back.Controllers.ProductsController.GetProducts (back)'
][2023-11-03 02:02:17.132 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7179/api/products - - - 200 - application/json;+charset=utf-8 2.6605ms
][2023-11-03 02:02:27.601 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7179/api/categories - -
][2023-11-03 02:02:27.601 +01:00 [INF] CORS policy execution successful.
][2023-11-03 02:02:27.601 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7179/api/categories - - - 204 - - 0.2976ms
][2023-11-03 02:02:27.611 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7179/api/categories - -
][2023-11-03 02:02:27.612 +01:00 [INF] CORS policy execution successful.
][2023-11-03 02:02:27.612 +01:00 [INF] Executing endpoint 'back.Controllers.CategoriesController.GetCategories (back)'
][2023-11-03 02:02:27.612 +01:00 [INF] Route matched with {action = "GetCategories", controller = "Categories"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCategories() on controller back.Controllers.CategoriesController (back).
][2023-11-03 02:02:27.613 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c."Id", c."Name", c."UrlHandle"
FROM "Categories" AS c
][2023-11-03 02:02:27.613 +01:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[back.Models.Domain.Category, back, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
][2023-11-03 02:02:27.613 +01:00 [INF] Executed action back.Controllers.CategoriesController.GetCategories (back) in 1.3484ms
][2023-11-03 02:02:27.613 +01:00 [INF] Executed endpoint 'back.Controllers.CategoriesController.GetCategories (back)'
][2023-11-03 02:02:27.613 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7179/api/categories - - - 200 - application/json;+charset=utf-8 1.7947ms
][2023-11-03 02:02:28.729 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7179/api/products - -
][2023-11-03 02:02:28.729 +01:00 [INF] CORS policy execution successful.
][2023-11-03 02:02:28.729 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7179/api/products - - - 204 - - 0.1731ms
][2023-11-03 02:02:28.733 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7179/api/products - -
][2023-11-03 02:02:28.734 +01:00 [INF] CORS policy execution successful.
][2023-11-03 02:02:28.734 +01:00 [INF] Executing endpoint 'back.Controllers.ProductsController.GetProducts (back)'
][2023-11-03 02:02:28.734 +01:00 [INF] Route matched with {action = "GetProducts", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProducts() on controller back.Controllers.ProductsController (back).
][2023-11-03 02:02:28.735 +01:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Description", p."PublishedDate", p."Thumbnail", p."Title", p."Visibility"
FROM "Products" AS p
][2023-11-03 02:02:28.735 +01:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[back.Repositories.ProductEntity, back, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
][2023-11-03 02:02:28.735 +01:00 [INF] Executed action back.Controllers.ProductsController.GetProducts (back) in 1.2263ms
][2023-11-03 02:02:28.735 +01:00 [INF] Executed endpoint 'back.Controllers.ProductsController.GetProducts (back)'
][2023-11-03 02:02:28.735 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7179/api/products - - - 200 - application/json;+charset=utf-8 1.7240ms
][2023-11-03 02:02:39.685 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7179/api/products - -
][2023-11-03 02:02:39.685 +01:00 [INF] CORS policy execution successful.
][2023-11-03 02:02:39.686 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7179/api/products - - - 204 - - 0.4001ms
][2023-11-03 02:02:39.692 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7179/api/products - -
][2023-11-03 02:02:39.692 +01:00 [INF] CORS policy execution successful.
][2023-11-03 02:02:39.692 +01:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/3/2023 1:02:33 AM', Current time (UTC): '11/3/2023 1:02:39 AM'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
][2023-11-03 02:02:39.692 +01:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/3/2023 1:02:33 AM', Current time (UTC): '11/3/2023 1:02:39 AM'.
][2023-11-03 02:02:39.692 +01:00 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (user)
][2023-11-03 02:02:39.692 +01:00 [INF] AuthenticationScheme: Bearer was challenged.
][2023-11-03 02:02:39.692 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7179/api/products - - - 401 0 - 0.9488ms
][2023-11-03 02:02:39.701 +01:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7179/api/users/refreshtoken - -
][2023-11-03 02:02:39.701 +01:00 [INF] CORS policy execution successful.
][2023-11-03 02:02:39.701 +01:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7179/api/users/refreshtoken - - - 204 - - 0.1804ms
][2023-11-03 02:02:39.704 +01:00 [INF] Request starting HTTP/2 POST https://localhost:7179/api/users/refreshtoken application/json 582
][2023-11-03 02:02:39.704 +01:00 [INF] CORS policy execution successful.
][2023-11-03 02:02:39.704 +01:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/3/2023 1:02:33 AM', Current time (UTC): '11/3/2023 1:02:39 AM'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
][2023-11-03 02:02:39.704 +01:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '11/3/2023 1:02:33 AM', Current time (UTC): '11/3/2023 1:02:39 AM'.
][2023-11-03 02:02:39.704 +01:00 [INF] Executing endpoint 'back.Controllers.UsersController.RefreshToken (back)'
][2023-11-03 02:02:39.704 +01:00 [INF] Route matched with {action = "RefreshToken", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] RefreshToken(back.Models.Domain.TokenResponse) on controller back.Controllers.UsersController (back).
][2023-11-03 02:02:39.705 +01:00 [ERR] this is an ID: 0007ad25-f987-42a3-90bc-8430f299957f
][2023-11-03 02:02:39.706 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Guid), @___tokenResponse_RefreshToken_1='?'], CommandType='"Text"', CommandTimeout='30']
SELECT r."Id", r."RToken", r."Status", r."UserId"
FROM "RefreshTokens" AS r
WHERE r."UserId" = @__id_0 AND r."RToken" = @___tokenResponse_RefreshToken_1
LIMIT 1
][2023-11-03 02:02:39.708 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[@__get_Item_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT r."Id", r."RToken", r."Status", r."UserId"
FROM "RefreshTokens" AS r
WHERE r."Id" = @__get_Item_0
LIMIT 1
][2023-11-03 02:02:39.709 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?', @p2='?' (DbType = Boolean), @p3='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "RefreshTokens" ("Id", "RToken", "Status", "UserId")
VALUES (@p0, @p1, @p2, @p3);
][2023-11-03 02:02:39.709 +01:00 [INF] Executing OkObjectResult, writing value of type 'back.Models.Domain.TokenResponse'.
][2023-11-03 02:02:39.709 +01:00 [INF] Executed action back.Controllers.UsersController.RefreshToken (back) in 4.983ms
][2023-11-03 02:02:39.709 +01:00 [INF] Executed endpoint 'back.Controllers.UsersController.RefreshToken (back)'
][2023-11-03 02:02:39.709 +01:00 [INF] Request finished HTTP/2 POST https://localhost:7179/api/users/refreshtoken application/json 582 - 200 - application/json;+charset=utf-8 5.6343ms
][2023-11-03 02:02:39.724 +01:00 [INF] Request starting HTTP/2 GET https://localhost:7179/api/products - -
][2023-11-03 02:02:39.724 +01:00 [INF] CORS policy execution successful.
][2023-11-03 02:02:39.724 +01:00 [INF] Executing endpoint 'back.Controllers.ProductsController.GetProducts (back)'
][2023-11-03 02:02:39.724 +01:00 [INF] Route matched with {action = "GetProducts", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetProducts() on controller back.Controllers.ProductsController (back).
][2023-11-03 02:02:39.726 +01:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Description", p."PublishedDate", p."Thumbnail", p."Title", p."Visibility"
FROM "Products" AS p
][2023-11-03 02:02:39.726 +01:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[back.Repositories.ProductEntity, back, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
][2023-11-03 02:02:39.726 +01:00 [INF] Executed action back.Controllers.ProductsController.GetProducts (back) in 1.3639ms
][2023-11-03 02:02:39.726 +01:00 [INF] Executed endpoint 'back.Controllers.ProductsController.GetProducts (back)'
][2023-11-03 02:02:39.726 +01:00 [INF] Request finished HTTP/2 GET https://localhost:7179/api/products - - - 200 - application/json;+charset=utf-8 1.8816ms
]